/**
 * @fileoverview Italian messages for CyberPi. (IT)
 */

'use strict';

// Display - LEDs
Blockly.Msg['CYBERPI_LED_ON_ALL_RGB_TITLE'] = '[LED] controlla tutti i LED su R %1 G %2 B %3';
Blockly.Msg['CYBERPI_LED_ON_ALL_RGB_TOOLTIP'] = 'Consente di accendere i 5 LED RGB della scheda CyberPi scegliendo i colori R, G e B (0-255).';
Blockly.Msg['CYBERPI_LED_ON_ALL_RGB_PALETTE_TITLE'] = '[LED] controlla tutti i LED su %1';
Blockly.Msg['CYBERPI_LED_ON_ALL_RGB_PALETTE_TOOLTIP'] = 'Consente di accendere i 5 LED RGB della scheda CyberPi scegliendo un colore dalla tavolozza.';
Blockly.Msg['CYBERPI_LED_ON_RGB_TITLE'] = '[LED] controlla il LED da %1 a R %2 G %3 B %4';
Blockly.Msg['CYBERPI_LED_ON_RGB_TOOLTIP'] = 'Ti permette di controllare ogni LED RGB sulla scheda CyberPi usando il suo ID (1-5) e scegliendo i colori R, G e B (0-255).';
Blockly.Msg['CYBERPI_LED_ON_RGB_PALETTE_TITLE'] = '[LED] controlla il LED da %1 a %2';
Blockly.Msg['CYBERPI_LED_ON_RGB_PALETTE_TOOLTIP'] = 'Ti permette di controllare ogni LED RGB sulla scheda CyberPi usando il suo ID (1-5) e scegliendo un colore dalla tavolozza.';
Blockly.Msg['CYBERPI_LED_PLAY_TITLE'] = '[LED] riproduce l\'animazione %1';
Blockly.Msg['CYBERPI_LED_PLAY_TOOLTIP'] = 'Consente di visualizzare l\'animazione LED specificata sul CyberPi.';
Blockly.Msg['CYBERPI_ANIMATION_RAINBOW'] = 'arcobaleno';
Blockly.Msg['CYBERPI_ANIMATION_SPOONDRIFT'] = 'cucchiaio';
Blockly.Msg['CYBERPI_ANIMATION_METEOR_BLUE'] = 'meteora blu';
Blockly.Msg['CYBERPI_ANIMATION_METEOR_GREEN'] = 'meteora verde';
Blockly.Msg['CYBERPI_ANIMATION_FLASH_RED'] = 'lampeggio rosso';
Blockly.Msg['CYBERPI_ANIMATION_FLASH_ORANGE'] = 'lampeggio arancione';
Blockly.Msg['CYBERPI_ANIMATION_FIREFLY'] = 'lucciola';
Blockly.Msg['CYBERPI_LED_MOVE_TITLE'] = '[LED] sposta il LED di %1 passo';
Blockly.Msg['CYBERPI_LED_MOVE_TOOLTIP'] = 'Ti permette di far scorrere i colori dei LED da sinistra a destra del numero specificato di posizioni (-4 - +4) sul CyberPi.';
Blockly.Msg['CYBERPI_LED_SET_BRIGHTNESS_TITLE'] = '[LED] imposta la luminosità a %1 (%)';
Blockly.Msg['CYBERPI_LED_SET_BRIGHTNESS_TOOLTIP'] = 'Consente di impostare la luminosità dei LED di CyberPi.';
Blockly.Msg['CYBERPI_LED_GET_BRIGHTNESS_TITLE'] = '[LED] ottieni luminosità LED (%)';
Blockly.Msg['CYBERPI_LED_GET_BRIGHTNESS_TOOLTIP'] = 'Restituisce la luminosità da 0 a 100 % dei LED di CyberPi.';
// Display - Console
Blockly.Msg['CYBERPI_CONSOLE_PRINT_TITLE'] = '[Console] scrive sulla console %1';
Blockly.Msg['CYBERPI_CONSOLE_PRINT_TOOLTIP'] = 'Consente di visualizzare il testo nella console della scheda CyberPi.';
Blockly.Msg['CYBERPI_CONSOLE_SET_FONT_TITLE'] = '[Console] imposta la dimensione del carattere a %1';
Blockly.Msg['CYBERPI_CONSOLE_SET_FONT_TOOLTIP'] = 'Consente di modificare la dimensione del carattere del testo nella console della scheda CyberPi.';
// Display - Text
Blockly.Msg['CYBERPI_DISPLAY_SHOW_LABEL_TITLE'] = '[Schermata] mostra etichetta %1 fontsize %2 posizione %3';
Blockly.Msg['CYBERPI_DISPLAY_SHOW_LABEL_TOOLTIP'] = 'Consente di visualizzare il testo nella posizione specificata sullo schermo del CyberPi. La dimensione del carattere può essere impostata su 16, 24 o 32.';
Blockly.Msg['CYBERPI_POSITION_TOP_MID'] = 'metà superiore';
Blockly.Msg['CYBERPI_POSITION_TOP_LEFT'] = 'in alto a sinistra';
Blockly.Msg['CYBERPI_POSITION_TOP_RIGHT'] = 'in alto a destra';
Blockly.Msg['CYBERPI_POSITION_CENTER'] = 'centro';
Blockly.Msg['CYBERPI_POSITION_MID_LEFT'] = 'metà sinistra';
Blockly.Msg['CYBERPI_POSITION_MID_RIGHT'] = 'centro destra';
Blockly.Msg['CYBERPI_POSITION_BOTTOM_MID'] = 'inferiore medio';
Blockly.Msg['CYBERPI_POSITION_BOTTOM_LEFT'] = 'in basso a sinistra';
Blockly.Msg['CYBERPI_POSITION_BOTTOM_RIGHT'] = 'in basso a destra';
Blockly.Msg['CYBERPI_DISPLAY_SHOW_LABEL_XY_TITLE'] = '[Schermata] mostra etichetta %1 fontsize %2 x %3 y %4';
Blockly.Msg['CYBERPI_DISPLAY_SHOW_LABEL_XY_TOOLTIP'] = 'Consente di visualizzare il testo nella posizione specificata x (0-128) e y (0-128) sullo schermo di CyberPi. La dimensione del carattere può essere impostata su 16, 24 o 32.';
// Display - Linechart
Blockly.Msg['CYBERPI_LINECHART_ADD_TITLE'] = '[Schermata] riga: aggiunge il valore %1';
Blockly.Msg['CYBERPI_LINECHART_ADD_TOOLTIP'] = 'Consente di aggiungere un valore alla curva sullo schermo CyberPi.\nSuggerimento:\n - Il valore deve essere compreso tra 0 e 100. Utilizzare la "[Schermata ] regolare la X definita tra MIN e MAX" per regolarlo tra 0 e 100.\n - La curva può contenere un massimo di 128 valori in orizzontale se sono distanziati di 1. Utilizzare il blocco "[Screen] definire i valori di gap di il grafico a X" per modificare il passo.\n - Usa il blocco "[Schermo] usa il grafico a colori R G B" aggiungi o seleziona una nuova curva.';
Blockly.Msg['CYBERPI_LINECHART_SET_STEP_TITLE'] = '[Schermata] riga: imposta il passo dei valori su %1';
Blockly.Msg['CYBERPI_LINECHART_SET_STEP_TOOLTIP'] = 'Consente di impostare lo scarto tra i valori contenuti nel grafico. Questo conterrà 64 se sono distanziati di 2. La quantità di dati che il grafico può contenere è tale che: N = int(128 / deviazione)';
Blockly.Msg['CYBERPI_BARCHART_ADD_TITLE'] = '[Schermata] istogramma: cambia il valore a %1';
Blockly.Msg['CYBERPI_BARCHART_ADD_TOOLTIP'] = 'Consente di modificare il valore dell\'istogramma sullo schermo CyberPi.\nSuggerimento:\n - Il valore deve essere compreso tra 0 e 100. Utilizzare la "[Schermata ] regolare la X definita tra MIN e MAX" per regolarlo tra 0 e 100.\n - Utilizzare il blocco "[Schermo] usa grafico colore R G B" per aggiungere o selezionare una barra. L\'aggiunta di un nuovo colore definisce quindi una nuova barra nell\'istogramma. ';
Blockly.Msg['CYBERPI_TABLE_ADD_TITLE'] = '[schermata] tabella: aggiungi %1 alla posizione x %2 y %3';
Blockly.Msg['CYBERPI_TABLE_ADD_TOOLTIP'] = 'Consente di aggiungere un valore numerico o testuale alla tabella sullo schermo di CyberPi.';
Blockly.Msg['CYBERPI_CHART_MAP_TITLE'] = '[Schermo] regola %1 impostato tra %2 e %3';
Blockly.Msg['CYBERPI_CHART_MAP_TOOLTIP'] = 'Permette di regolare i dati definiti tra un minimo e un massimo in modo che siano compresi tra 0 e 100 sulla curva o nell\'istogramma.';
Blockly.Msg['CYBERPI_CHART_SET_BRUSH_TITLE'] = '[Schermo] usa grafico colore R %1 G %2 B %3';
Blockly.Msg['CYBERPI_CHART_SET_BRUSH_TOOLTIP'] = 'Consente di aggiungere/selezionare una nuova curva o barra orizzontale nell\'istogramma con un nuovo set di colori con R, G e B (0-255).';
Blockly.Msg['CYBERPI_CHART_SET_BRUSH_PALETTE_TITLE'] = '[Schermo] usa la cartella colori %1';
Blockly.Msg['CYBERPI_CHART_SET_BRUSH_PALETTE_TOOLTIP'] = 'Ti permette di aggiungere/selezionare una nuova curva o barra orizzontale nell\'istogramma con un nuovo colore scelto dalla tavolozza.';
// IO - Time
Blockly.Msg['IO_WAIT_TITLE'] = 'attendere %1 %2';
Blockly.Msg['IO_WAIT_TOOLTIP'] = 'Arresta l\'esecuzione del codice (durata in secondi o millisecondi).';
Blockly.Msg['IO_WAIT_SECOND'] = 'secondo(i)';
Blockly.Msg['IO_WAIT_MILLISECOND'] = 'millisecondi';
Blockly.Msg['IO_WAIT_MICROSECOND'] = 'microsecond(s)';
Blockly.Msg['IO_WAIT_UNTIL_TITLE'] = 'attendere fino a %1';
Blockly.Msg['IO_WAIT_UNTIL_TOOLTIP'] = 'Arresta l\'esecuzione del codice finché la condizione non è soddisfatta.';
Blockly.Msg['IO_INITCHRONOMETER_TITLE'] = 'inizializza il cronometro';
Blockly.Msg['IO_INITCHRONOMETER_TOOLTIP'] = 'Consente di inizializzare il cronometro (in secondi).';
Blockly.Msg['IO_GETCHRONOMETER_TITLE'] = 'ottieni cronometro in %1';
Blockly.Msg['IO_GETCHRONOMETER_TOOLTIP'] = 'Restituisce il valore del cronometro dall\'inizializzazione in secondi o millisecondi.';
// IO - Buttons
Blockly.Msg['IO_CONTROLLER_IS_BUTTON_PRESSED_TITLE'] = 'Il pulsante %1 è stato premuto';
Blockly.Msg['IO_CONTROLLER_IS_BUTTON_PRESSED_TOOLTIP'] = 'Restituisce \'True\' se il pulsante selezionato è premuto e \'False\' altrimenti.';
Blockly.Msg['IO_CONTROLLER_ON_BUTTON_PRESSED_TITLE'] = 'se il pulsante %1 viene premuto allora';
Blockly.Msg['IO_CONTROLLER_ON_BUTTON_PRESSED_TOOLTIP'] = 'Esegue le istruzioni se viene premuto il pulsante selezionato.';
Blockly.Msg['IO_CONTROLLER_BUTTONS_GET_COUNT_TITLE'] = 'numero di clic del pulsante %1';
Blockly.Msg['IO_CONTROLLER_BUTTONS_GET_COUNT_TOOLTIP'] = 'Restituisce il numero di volte che il pulsante selezionato è stato premuto..';
Blockly.Msg['IO_CONTROLLER_BUTTONS_RESET_COUNT_TITLE'] = 'azzera conteggio clic di %1';
Blockly.Msg['IO_CONTROLLER_BUTTONS_RESET_COUNT_TOOLTIP'] = 'Reimposta il conteggio del numero di volte in cui il pulsante specificato viene premuto o il joystick viene spostato nella direzione specificata.';
// IO -Events
Blockly.Msg['IO_EVENT_START_TITLE'] = 'All\'avvio del programma, allora';
Blockly.Msg['IO_EVENT_START_TOOLTIP'] = 'Consente di eseguire istruzioni all\'avvio del programma. Nota: Questo è un blocco di programmazione basato su eventi, prima di utilizzarlo disabilitare i blocchi "Ripeti per sempre" contenuti nel programma.';
Blockly.Msg['IO_EVENT_IS_PRESS_TITLE'] = 'Quando il pulsante %1 viene premuto, allora';
Blockly.Msg['IO_EVENT_IS_PRESS_TOOLTIP'] = 'Consente di eseguire le istruzioni quando viene premuto il pulsante selezionato. Nota: questo è un blocco di programmazione basato su eventi, prima di utilizzarlo disabilitare i blocchi "Ripeti per sempre" contenuti nel programma.';
Blockly.Msg['IO_CYBERPI_BROADCAST_TITLE'] = 'emetti messaggio %1';
Blockly.Msg['IO_CYBERPI_BROADCAST_TOOLTIP'] = 'Permette di emettere un messaggio durante l\'esecuzione di un programma, questo attiverà l\'evento collegato al messaggio.';
Blockly.Msg['IO_EVENT_RECEIVE_TITLE'] = 'Quando viene ricevuto il messaggio %1, allora';
Blockly.Msg['IO_EVENT_RECEIVE_TOOLTIP'] = 'Consente di eseguire le istruzioni quando viene ricevuto un messaggio broadcast. Nota: questo è un blocco di programmazione guidato dagli eventi, prima di utilizzarlo, disabilitare il contenuto "Ripeti per sempre" dei blocchi nel programma. ';
// IO - Pines
Blockly.Msg['IO_DIGITAL_SIGNAL_TITLE'] = '%1';
Blockly.Msg['IO_DIGITAL_SIGNAL_HIGH'] = 'ALTO (1)';
Blockly.Msg['IO_DIGITAL_SIGNAL_LOW'] = 'BASSO (0)';
Blockly.Msg['IO_DIGITAL_SIGNAL_TOOLTIP'] = 'Restituisce un valore booleano (1 se ALTO o 0 se BASSO).';
Blockly.Msg['IO_READDIGITALPIN_TITLE'] = 'leggi pin digitale %1';
Blockly.Msg['IO_READDIGITALPIN_TOOLTIP'] = 'Abilita la lettura del valore digitale dei pin (0 o 1).';
Blockly.Msg['IO_WRITEDIGITALPIN_TITLE'] = 'scrivi lo stato %1 sul pin digitale %2';
Blockly.Msg['IO_WRITEDIGITALPIN_TOOLTIP'] = 'Abilita a scrivere il valore (0 o 1) sul pin digitale.';
// Blockly.Msg["IO_READANALOGPIN_TITLE"] = "read analog pin %1";
// Blockly.Msg["IO_READANALOGPIN_TOOLTIP"] = "Reads the value of an analog input (0-1023), which corresponds to a voltage between 0 and 3.6V.";
Blockly.Msg['IO_WRITEPWMPIN_TITLE'] = 'scrivi il valore %1 sul pin PWM %2';
Blockly.Msg['IO_WRITEPWMPIN_TOOLTIP'] = 'Abilita l\'applicazione del segnale PWM con frequenza fissa di 10kHz. Puoi cambiare il valore da 0 a 1023. 512 sarà il 50% del duty cycle, circa 1.66V.';
// Blockly.Msg["IO_WRITEANALOGPIN_TITLE"] = "write value %1 to analog pin %2 (DAC)";
// Blockly.Msg["IO_WRITEANALOGPIN_TOOLTIP"] = "Allows to apply an analog voltage on the DAC pins p25 and p26 (from 0 to 255). The Esp32 uses a Digital-Analog Converter (DAC) to apply a voltage including between 0 and 3.3V.";
Blockly.Msg['IO_SETPWM_TITLE'] = 'applica un segnale quadrato di frequenza %1 (Hz) sul pin %2';
Blockly.Msg['IO_SETPWM_TOOLTIP'] = 'Abilita l\'applicazione di un segnale quadrato PWM con il 50% del duty cycle. Puoi modificare la frequenza del segnale.';
Blockly.Msg['IO_STOPPWM_TITLE'] = 'ferma il segnale PWM del pin %1';
Blockly.Msg['IO_STOPPWM_TOOLTIP'] = 'Abilita l\'interruzione del segnale PWM applicato di un pin.';
Blockly.Msg['IO_GETVOLTAGE_TITLE'] = 'converti %1 in voltaggio con risoluzione %2';
Blockly.Msg['IO_GETVOLTAGE_TOOLTIP'] = 'Abilita la conversione del valore analogico in tensione per risoluzione (10 bit: 1024, 12 bit: 4096, 9 bit: 512, 11 bit: 2048) e massimo 3,6 V. ';
// Communication - Serial connection
Blockly.Msg['COMMUNICATION_SERIAL_WRITE_TITLE'] = 'scrivi sulla porta seriale %1';
Blockly.Msg['COMMUNICATION_SERIAL_WRITE_TOOLTIP'] = 'Scrivi una stringa sulla porta seriale.';
Blockly.Msg['COMMUNICATION_SERIAL_WRITE_WITH'] = 'con';
Blockly.Msg['COMMUNICATION_SERIAL_WRITE_NEWLINES'] = 'newline(s)';
Blockly.Msg['COMMUNICATION_SERIAL_ONDATARECEIVED_TITLE then'] = 'sui dati seriali ricevuti in %1 then';
Blockly.Msg['COMMUNICATION_SERIAL_ONDATARECEIVED_TOOLTIP'] = 'Consente di eseguire istruzioni se i dati vengono ricevuti dalla porta seriale nella variabile \'serialData\'.';
Blockly.Msg['COMMUNICATION_COMPUTER_PLAYNOTE_TITLE'] = 'riproduci musica %1 nella porta seriale';
Blockly.Msg['COMMUNICATION_COMPUTER_PLAYNOTE_TOOLTIP'] = 'Riproduci la nota selezionata fino all\'esecuzione del blocco "Interrompi musica".';
Blockly.Msg['NOTE_C'] = 'C';
Blockly.Msg['NOTE_C_SHARP'] = 'C#';
Blockly.Msg['NOTE_D'] = 'D';
Blockly.Msg['NOTE_D_SHARP'] = 'RE#';
Blockly.Msg['NOTE_E'] = 'E';
Blockly.Msg['NOTE_F'] = 'F';
Blockly.Msg['NOTE_F_SHARP'] = 'FA#';
Blockly.Msg['NOTE_G'] = 'G';
Blockly.Msg['NOTE_G_SHARP'] = 'G#';
Blockly.Msg['NOTE_A'] = 'A';
Blockly.Msg['NOTE_A_SHARP'] = 'LA#';
Blockly.Msg['NOTE_B'] = 'B';
Blockly.Msg['COMMUNICATION_COMPUTER_SETFREQUENCY_TITLE'] = 'frequenza di riproduzione %1 (Hz) sul computer';
Blockly.Msg['COMMUNICATION_COMPUTER_SETFREQUENCY_TOOLTIP'] = 'Questo blocco permette di riprodurre una determinata frequenza sul computer';
Blockly.Msg['COMMUNICATION_COMPUTER_STOPMUSIC_TITLE'] = 'interrompi la musica della porta seriale';
Blockly.Msg['COMMUNICATION_COMPUTER_STOPMUSIC_TOOLTIP'] = 'Ferma la nota corrente della porta seriale.';
Blockly.Msg['COMMUNICATION_WRITEGRAPH_TITLE'] = 'scrivi grafico';
Blockly.Msg['COMMUNICATION_WRITEGRAPH_TOOLTIP'] = 'Questo blocco permette di scrivere dati (digitali) che saranno visibili nel plotter. Può essere utilizzato con uno o più blocchi in "Nome" e "Dati" Fare clic sull\'icona \'Modalità grafica\' per visualizzare i grafici.';
Blockly.Msg['COMMUNICATION_DATA'] = 'Dati';
Blockly.Msg['COMMUNICATION_PRINT_DATAS_TITLE'] = 'Nome %1 Dati %2';
Blockly.Msg['COMMUNICATION_PRINT_DATAS_TOOLTIP'] = 'Questo blocco deve essere utilizzato nel blocco "Scrivi in grafica". Deve contenere il nome del valore (testo) da visualizzare e il valore in questione.';
// Sensors - CyberPi
Blockly.Msg['SENSORS_READ_HALL_SENSOR_TITLE'] = 'leggi sensore hall';
Blockly.Msg['SENSORS_READ_HALL_SENSOR_TOOLTIP'] = 'Restituisce il valore del sensore Hall dalla scheda.';
Blockly.Msg['SENSORS_READ_PROCESSOR_TEMP_TITLE'] = 'leggere la temperatura del processore in %1';
Blockly.Msg['SENSORS_READ_PROCESSOR_TEMP_TOOLTIP'] = 'Restituisce la temperatura del processore ESP32 di CyberPi.';
Blockly.Msg['SENSORS_CYBERPI_GET_BRIGHTNESS_TITLE'] = 'luminosità ambientale (%)';
Blockly.Msg['SENSORS_CYBERPI_GET_BRIGHTNESS_TOOLTIP'] = 'Restituisce la luminosità ambientale da 0 a 100% rilevata dal sensore CyberPi integrato.';
Blockly.Msg['SENSORS_CYBERPI_GET_LOUDNESS_TITLE'] = 'intensità del suono ambientale (%)';
Blockly.Msg['SENSORS_CYBERPI_GET_LOUDNESS_TOOLTIP'] = 'Restituisce il volume ambientale da 0 a 100% rilevato dal sensore CyberPi integrato.';
// Acutuators - audio
Blockly.Msg['ACTUATORS_AUDIO_PLAY_TITLE'] = '[audio] riproduci %1';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_TOOLTIP'] = 'Riproduci il testo selezionato con l\'altoparlante integrato di CyberPi.';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_HI'] = 'ciao';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_BYE'] = 'ciao';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_YEAH'] = 'sì';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_WOW'] = 'wow';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_LAUGH'] = 'ride';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_HUM'] = 'esitazione';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_SAD'] = 'triste';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_SIGH'] = 'sospiro';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_ANNOYED'] = 'infastidito';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_ANGRY'] = 'arrabbiato';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_SURPRISED'] = 'sorpreso';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_YUMMY'] = 'buonissimo';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_CURIOUS'] = 'curioso';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_EMBARRASSED'] = 'imbarazzato';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_READY'] = 'pronto';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_SPRINT'] = 'sprint';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_NOTE_TITLE'] = '[audio] riproduci nota %1 per %2 (s)';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_NOTE_TOOLTIP'] = 'Suona la nota scelta (0-132) con l\'altoparlante integrato sulla scheda CyberPi.';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_TONE_TITLE'] = '[audio] frequenza di riproduzione %1';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_TONE_TOOLTIP'] = 'Riproduci una frequenza (in Hz) con l\'altoparlante integrato sulla scheda CyberPi.';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_TONE_DURATION'] = 'durante';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_DRUM_TITLE'] = '[audio] riproduce il suono %1 per %2 (s)';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_DRUM_TOOLTIP'] = 'Riproduci un suono di batteria con l\'altoparlante integrato sulla scheda CyberPi.';
Blockly.Msg['ACTUATORS_AUDIO_DRUM_SNARE'] = 'rullante';
Blockly.Msg['ACTUATORS_AUDIO_DRUM_BASS_DRUM'] = 'grancassa';
Blockly.Msg['ACTUATORS_AUDIO_DRUM_SIDE_STICK'] = 'rimshot';
Blockly.Msg['ACTUATORS_AUDIO_DRUM_CRASH_SYMBAL'] = 'piatto crash';
Blockly.Msg['ACTUATORS_AUDIO_DRUM_OPEN_HI_HAT'] = 'apri charleston';
Blockly.Msg['ACTUATORS_AUDIO_DRUM_CLOSED_HI_HAT'] = 'charleston chiuso';
Blockly.Msg['ACTUATORS_AUDIO_DRUM_TAMOURINE'] = 'tamourine';
Blockly.Msg['ACTUATORS_AUDIO_DRUM_HAND_CLAP'] = 'battito di mani';
Blockly.Msg['ACTUATORS_AUDIO_DRUM_CLAVES'] = 'clavi';
Blockly.Msg['ACTUATORS_AUDIO_START_RECORDING_TITLE'] = '[audio] avvia la registrazione';
Blockly.Msg['ACTUATORS_AUDIO_START_RECORDING_TOOLTIP'] = 'Inizia a registrare l\'audio con l\'altoparlante integrato sulla scheda CyberPi.';
Blockly.Msg['ACTUATORS_AUDIO_STOP_RECORDING_TITLE'] = '[audio] interrompe la registrazione';
Blockly.Msg['ACTUATORS_AUDIO_STOP_RECORDING_TOOLTIP'] = 'Interrompi la registrazione audio con l\'altoparlante integrato di CyberPi.';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_RECORDING_TITLE'] = '[audio] in riproduzione registrazione';
Blockly.Msg['ACTUATORS_AUDIO_PLAY_RECORDING_TOOLTIP'] = 'Riproduci la registrazione audio con l\'altoparlante integrato di CyberPi.';
Blockly.Msg['ACTUATORS_AUDIO_ADD_TEMPO_TITLE'] = '[audio] aumenta il tempo di %1 (%)';
Blockly.Msg['ACTUATORS_AUDIO_ADD_TEMPO_TOOLTIP'] = 'Consente di aumentare il tempo dell\'audio di una certa percentuale.';
Blockly.Msg['ACTUATORS_AUDIO_SET_TEMPO_TITLE'] = '[audio] imposta il tempo su %1 (%)';
Blockly.Msg['ACTUATORS_AUDIO_SET_TEMPO_TOOLTIP'] = 'Consente di impostare il tempo dell\'audio da 0 a 100%.';
Blockly.Msg['ACTUATORS_AUDIO_GET_TEMPO_TITLE'] = '[audio] tempo (%)';
Blockly.Msg['ACTUATORS_AUDIO_GET_TEMPO_TOOLTIP'] = 'Restituisce il tempo dell\'audio (in %).';
Blockly.Msg['ACTUATORS_AUDIO_ADD_VOLUME_TITLE'] = '[audio] aumenta il volume di %1 (%)';
Blockly.Msg['ACTUATORS_AUDIO_ADD_VOLUME_TOOLTIP'] = 'Consente di aumentare il volume dell\'audio di una certa percentuale.';
Blockly.Msg['ACTUATORS_AUDIO_SET_VOLUME_TITLE'] = '[audio] imposta il volume su %1 (%)';
Blockly.Msg['ACTUATORS_AUDIO_SET_VOLUME_TOOLTIP'] = 'Consente di impostare il volume audio da 0-100%.';
Blockly.Msg['ACTUATORS_AUDIO_GET_VOLUME_TITLE'] = '[audio] volume (%)';
Blockly.Msg['ACTUATORS_AUDIO_GET_VOLUME_TOOLTIP'] = 'Restituisce il volume dell\'audio (in %).';
Blockly.Msg['ACTUATORS_AUDIO_STOP_TITLE'] = '[audio] interrompe i suoni';
Blockly.Msg['ACTUATORS_AUDIO_STOP_TOOLTIP'] = 'Ti permette di interrompere i suoni riprodotti attraverso l\'altoparlante integrato del CyberPi.';
// Robots - Motor M1 & M2
Blockly.Msg['MBOT2_MOTORS_SET_POWER_TITLE'] = '[Motors.s %1] imposta la potenza su %2 (%)';
Blockly.Msg['MBOT2_MOTORS_SET_POWER_TOOLTIP'] = 'Consente di controllare la potenza dei motori M1 e M2. Questi motori si collegano direttamente al robot mBot2.';
Blockly.Msg['MBOT2_MOTORS_ADD_POWER_TITLE'] = '[Motors.s %1] aumenta la potenza di %2 (%)';
Blockly.Msg['MBOT2_MOTORS_ADD_POWER_TOOLTIP'] = 'Consente di aumentare la potenza dei motori M1 e M2. Questi motori si collegano direttamente al robot mBot2.';
Blockly.Msg['MBOT2_MOTORS_GET_POWER_TITLE'] = '[Motor.s %1] potenza (%)';
Blockly.Msg['MBOT2_MOTORS_GET_POWER_TOOLTIP'] = 'Restituisce la potenza del motore M1 o M2. Questi motori si collegano direttamente al robot mBot2.';
Blockly.Msg['MBOT2_MOTORS_STOP_TITLE'] = '[Motor.s %1] si ferma';
Blockly.Msg['MBOT2_MOTORS_STOP_TOOLTIP'] = 'Consente di arrestare i motori M1 e/o M2. Questi motori si collegano direttamente al robot mBot2.';
// Robots - Servos
Blockly.Msg['MBOT2_SERVOS_SET_ANGLE_TITLE'] = '[Servo.s %1] sta controllando l\'angolo a %2 (°)';
Blockly.Msg['MBOT2_SERVOS_SET_ANGLE_TOOLTIP'] = 'Consente di controllare l\'angolo (in °) dei servi S1, S2, S3 o S4 da 0 a 360°. Questi servi si collegano direttamente al robot mBot2.';
Blockly.Msg['MBOT2_SERVOS_ADD_ANGLE_TITLE'] = '[Servo.s %1] aumenta l\'angolo di %2 (°)';
Blockly.Msg['MBOT2_SERVOS_ADD_ANGLE_TOOLTIP'] = 'Consente di aumentare l\'angolo (in °) del servo S1, S2, S3 o S4 da 0 a 360°. Questi servi si collegano direttamente al robot mBot2.';
Blockly.Msg['MBOT2_SERVOS_GET_ANGLE_TITLE'] = '[Servo.s %1] angolo servo (°)';
Blockly.Msg['MBOT2_SERVOS_GET_ANGLE_TOOLTIP'] = 'Restituisce l\'angolo del servo S1, S2, S3 o S4. Questi servi si collegano direttamente al robot mBot2.';
Blockly.Msg['MBOT2_SERVOS_RESET_TITLE'] = '[Servo.s %1] arresta motor.s';
Blockly.Msg['MBOT2_SERVOS_RESET_TOOLTIP'] = 'Consente di arrestare il servomotore S1, S2, S3 o S4. Questi servi si collegano direttamente al robot mBot2.';
// Robots - mBot2
Blockly.Msg['ROBOTS_MBOT2_MOTOR_LEFT'] = 'sinistra (EM1)';
Blockly.Msg['ROBOTS_MBOT2_MOTOR_RIGHT'] = 'destra (EM2)';
Blockly.Msg['ROBOTS_MBOT2_MOTOR_SPEED'] = 'velocità (RPM)';
Blockly.Msg['ROBOTS_MBOT2_MOTOR_POWER'] = 'potenza (%)';
Blockly.Msg['ROBOTS_MBOT2_MOTOR_ANGLE'] = 'posizione angolare (°)';
Blockly.Msg['ROBOTS_MBOT2_BOTH_MOTORS'] = 'destra (EM2) & sinistra (EM1)';
Blockly.Msg['ROBOTS_MBOT2_MOVE_FORWARD'] = 'avanti';
Blockly.Msg['ROBOTS_MBOT2_MOVE_REVERSE'] = 'sposta indietro';
Blockly.Msg['ROBOTS_MBOT2_MOVE_TITLE'] = '[mBot2] %1 velocità %2 (RPM)';
Blockly.Msg['ROBOTS_MBOT2_MOVE_DURATION'] = 'durante';
Blockly.Msg['ROBOTS_MBOT2_MOVE_TOOLTIP'] = IMG_ROBOT_MBOT2 + Blockly.Tooltip.SEP + 'Consente di controllare la camminata (AVANTI/INDIETRO) e la velocità (da 0 a 207 RPM) del robot mBot2.';
Blockly.Msg['ROBOTS_MBOT2_MOVE_BY_TITLE'] = '[mBot2] %1 di %2 %3';
Blockly.Msg['ROBOTS_MBOT2_MOVE_BY_CM'] = 'cm';
Blockly.Msg['ROBOTS_MBOT2_MOVE_BY_INCHS'] = 'pollici';
Blockly.Msg['ROBOTS_MBOT2_MOVE_BY_TOOLTIP'] = IMG_ROBOT_MBOT2 + Blockly.Tooltip.SEP + 'Consente a mBot2 di spostarsi avanti o indietro di una certa distanza (in cm o pollici).';
Blockly.Msg['ROBOTS_MBOT2_TURN_TITLE'] = '[mBot2] gira %1 di %2 (°)';
Blockly.Msg['ROBOTS_MBOT2_TURN_RIGHT'] = 'destra';
Blockly.Msg['ROBOTS_MBOT2_TURN_LEFT'] = 'sinistra';
Blockly.Msg['ROBOTS_MBOT2_TURN_TOOLTIP'] = IMG_ROBOT_MBOT2 + Blockly.Tooltip.SEP + 'Ti permette di girare a sinistra oa destra di un certo angolo (in °) con il robot mBot2.';
Blockly.Msg['ROBOTS_MBOT2_CONTROL_MOTOR_TITLE'] = '[mBot2] controlla il motore.i %1 direzione %2 con %3 da %4';
Blockly.Msg['ROBOTS_MBOT2_CONTROL_MOTOR_TOOLTIP'] = IMG_ROBOT_MBOT2 + Blockly.Tooltip.SEP + 'Consente di controllare ciascuno dei motori encoder EM1 o EM2 con la potenza (in %) o la velocità (in rpm) del robot mBot2.';
Blockly.Msg['ROBOTS_MBOT2_TURN_MOTOR_TITLE'] = '[mBot2] gira il motore.i %1 direzione %2 angolo %3 (°) alla velocità %4 (RPM)';
Blockly.Msg['ROBOTS_MBOT2_TURN_MOTOR_TOOLTIP'] = IMG_ROBOT_MBOT2 + Blockly.Tooltip.SEP + 'Consente di controllare la rotazione di ciascuno dei motori encoder EM1 o EM2 di un certo angolo (in °) con la velocità (in rpm) dell\'mBot2.';
Blockly.Msg['ROBOTS_MBOT2_STOP_MOTOR_TITLE'] = '[mBot2] arresta motor.i %1';
Blockly.Msg['ROBOTS_MBOT2_STOP_MOTOR_TOOLTIP'] = IMG_ROBOT_MBOT2 + Blockly.Tooltip.SEP + 'Consente di arrestare i motori encoder EM1 o EM2 del robot mBot2.';
Blockly.Msg['ROBOTS_MBOT2_GET_MOTOR_ENCODING_TITLE'] = '[mBot2] %1 del motore dell\'encoder %2';
Blockly.Msg['ROBOTS_MBOT2_GET_MOTOR_ENCODING_TOOLTIP'] = IMG_ROBOT_MBOT2 + Blockly.Tooltip.SEP + 'Restituisce la velocità di rotazione (in rpm) o la potenza (in %) o la posizione angolare (in °) del motore encoder EM1 o EM2 del mBot2.';
Blockly.Msg['ROBOTS_MBOT2_RESET_MOTOR_ANGULAR_POSITION_TITLE'] = '[mBot2] ripristina l\'angolo (°) del motore %1';
Blockly.Msg['ROBOTS_MBOT2_RESET_MOTOR_ANGULAR_POSITION_TOOLTIP'] = IMG_ROBOT_MBOT2 + Blockly.Tooltip.SEP + 'Consente di reimpostare la posizione angolare a 0° dei motori encoder EM1 e/o EM2 del robot mBot2.';
Blockly.Msg['ROBOTS_MBOT2_CONTROL_MOTOR_LOCKING_TITLE'] = '[mBot2] controlla il blocco automatico del motore %1 a %2';
Blockly.Msg['ROBOTS_MBOT2_CONTROL_MOTOR_LOCKING_TOOLTIP'] = IMG_ROBOT_MBOT2 + Blockly.Tooltip.SEP + 'Consente di controllare il blocco automatico dei motori encoder EM1 e/o EM2 del robot mBot2.';
Blockly.Msg['ROBOTS_MBOT2_CONTROL_MOTOR_LOCKING_ENABLE'] = 'abilita';
Blockly.Msg['ROBOTS_MBOT2_CONTROL_MOTOR_LOCKING_DISABLE'] = 'disattiva';
// Robots - Ultrasonic sensors
Blockly.Msg['MBUILD_SENSORS_ULTRASONIC_GET_DISTANCE_TITLE'] = '[Sensore a ultrasuoni %1] distanza (cm)';
Blockly.Msg['MBUILD_SENSORS_ULTRASONIC_GET_DISTANCE_TOOLTIP'] = IMG_MBUILD_ULTRASONIC_SENSOR + Blockly.Tooltip.SEP + 'Restituisce la distanza da 3 a 300 cm tra il robot e l\'ostacolo misurata con il sensore ad ultrasuoni del robot mBot2. È possibile collegare in serie fino a 8 sensori ultrasonici utilizzare il parametro (1-8) per recuperare il valore desiderato.';
Blockly.Msg['MBUILD_SENSORS_ULTRASONIC_SET_BRIGHTNESS_TITLE'] = '[Sensore a ultrasuoni %1] imposta la luminosità del LED %2 su %3 (%)';
Blockly.Msg['MBUILD_SENSORS_ULTRASONIC_SET_BRIGHTNESS_TOOLTIP'] = IMG_MBUILD_ULTRASONIC_SENSOR + Blockly.Tooltip.SEP + 'Consente di impostare la luminosità (0-100)% di ciascuno degli 8 LED blu integrati in un sensore a ultrasuoni.';
Blockly.Msg['MBUILD_SENSORS_ULTRASONIC_GET_BRIGHTNESS_TITLE'] = '[Sensore a ultrasuoni %1] luminosità (%) del LED %2';
Blockly.Msg['MBUILD_SENSORS_ULTRASONIC_GET_BRIGHTNESS_TOOLTIP'] = IMG_MBUILD_ULTRASONIC_SENSOR + Blockly.Tooltip.SEP + 'Restituisce la luminosità ambientale del LED blu selezionato con id (1-8) e integrato con il sensore ultrasonico.';
Blockly.Msg['MBUILD_SENSORS_ULTRASONIC_STOP_LED_TITLE'] = '[Sensore a ultrasuoni %1] spegni il LED %2';
Blockly.Msg['MBUILD_SENSORS_ULTRASONIC_STOP_LED_TOOLTIP'] = IMG_MBUILD_ULTRASONIC_SENSOR + Blockly.Tooltip.SEP + 'Consente di spegnere il LED blu selezionato con l\'id (1-8) e integrato nel sensore ultrasonico.';
Blockly.Msg['MBUILD_SENSORS_ULTRASONIC_PLAY_LED_TITLE'] = '[Sensore a ultrasuoni %1] riproduce l\'emozione %2';
Blockly.Msg['MBUILD_SENSORS_ULTRASONIC_PLAY_LED_TOOLTIP'] = IMG_MBUILD_ULTRASONIC_SENSOR + Blockly.Tooltip.SEP + 'Riproduci un\'emozione con i LED blu del sensore a ultrasuoni. Questo dura circa 1-2 secondi.';
Blockly.Msg['MBUILD_SENSORS_ULTRASONIC_EMOTION_SLEEPY'] = 'dormi';
Blockly.Msg['MBUILD_SENSORS_ULTRASONIC_EMOTION_HAPPPY'] = 'felice';
Blockly.Msg['MBUILD_SENSORS_ULTRASONIC_EMOTION_DIZZY'] = 'Vertigini';
Blockly.Msg['MBUILD_SENSORS_ULTRASONIC_EMOTION_WINK'] = 'alza le sopracciglia';
Blockly.Msg['MBUILD_SENSORS_ULTRASONIC_EMOTION_THINKING'] = 'Pensando';
// Robots - Quad RGB sensors
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_MODE_LINE'] = 'linea';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_MODE_GROUND'] = 'sfondo';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_MODE_WHITE'] = 'bianco';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_MODE_RED'] = 'rosso';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_MODE_YELLOW'] = 'giallo';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_MODE_GREEN'] = 'verde';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_MODE_CYAN'] = 'ciano';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_MODE_BLUE'] = 'blu';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_MODE_PURPLE'] = 'viola';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_MODE_BLACK'] = 'nero';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_MODE_CUSTOM'] = 'predefinito';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_L1_R1_DETECTION_IS_TITLE'] = '[Quad sensore RGB %1] ha rilevato %2 da L1 e R1 è %3';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_L1_R1_DETECTION_IS_TOOLTIP'] = IMG_MBUILD_SENSORS_QUAD_RGB_SENSOR + Blockly.Tooltip.SEP + 'Restituisce \'True\' se lo stato di rilevamento dei sensori centrali L1 e R1 (sotto il robot) in base alla modalità di rilevamento è selezionato, restituisce \'False\' in caso contrario. \n\nÈ possibile collegare in parallelo fino a 8 sensori RGB quadrupli. Utilizzare il parametro (1-8) per recuperare il valore desiderato.';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_GET_L1_R1_DETECTION_TITLE'] = '[Quad sensore RGB %1] stati di rilevamento di %2 da L1 e R1';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_GET_L1_R1_DETECTION_TOOLTIP'] = IMG_MBUILD_SENSORS_QUAD_RGB_SENSOR + Blockly.Tooltip.SEP + 'Restituisce lo stato dei sensori centrali L1 e R1 (sotto il robot) da 0 a 3 a seconda della modalità di rilevamento scelta.\nÈ possibile connettersi fino a 8 sensori RGB quadrupli in parallelo utilizzare il parametro (1-8) per recuperare il valore desiderato.';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_DETECTION_IS_TITLE'] = '[Quad sensore RGB %1] rileva che %2 è %3';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_DETECTION_IS_TOOLTIP'] = IMG_MBUILD_SENSORS_QUAD_RGB_SENSOR + Blockly.Tooltip.SEP + 'Restituisce \'True\' se lo stato di rilevamento dei 4 sensori L1, L2 e R1, R2 (sotto il robot) in base alla modalità di rilevamento è verificato, altrimenti restituisce \'False\'.\nÈ possibile collegare in parallelo fino a 8 sensori RGB quadrupli. Utilizzare il parametro (1-8) per recuperare il valore desiderato.';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_GET_DETECTION_TITLE'] = '[Quad sensore RGB %1] stati di rilevamento di %2';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_GET_DETECTION_TOOLTIP'] = IMG_MBUILD_SENSORS_QUAD_RGB_SENSOR + Blockly.Tooltip.SEP + 'Restituisce lo stato dei 4 sensori L1, L2 e R1, R2 (sotto il robot) da 0 a 15 a seconda della modalità di rilevamento scelta.\nIt è possibile collegare in parallelo fino a 8 sensori RGB quadrupli.Utilizzare il parametro (1-8) per recuperare il valore desiderato.';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_IS_COLOR_DETECTED_TITLE'] = '[Quad sensore RGB %1] la sonda %2 rileva %3';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_IS_COLOR_DETECTED_TOOLTIP'] = IMG_MBUILD_SENSORS_QUAD_RGB_SENSOR + Blockly.Tooltip.SEP + 'Restituisce \'True\' se la sonda scelta (L1, L2, R1, R2) rileva la linea o il colore selezionato, altrimenti \'False\'.\nÈ è possibile collegare in parallelo fino a 8 sensori RGB quadrupli utilizzare il parametro (1-8) per recuperare il valore desiderato.';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_GET_PROBE_DATA_TITLE'] = '[Quad sensore RGB %1] %2 misurato con la sonda %3';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_GET_PROBE_DATA_TOOLTIP'] = IMG_MBUILD_SENSORS_QUAD_RGB_SENSOR + Blockly.Tooltip.SEP + 'Restituisce \'True\' se la sonda scelta (L1, L2, R1, R2) rileva la linea o il colore selezionato, altrimenti \'False\'.\nIt it è possibile collegare in parallelo fino a 8 sensori RGB quadrupli utilizzare il parametro (1-8) per recuperare il valore desiderato.';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_DATA_R'] = 'livello rosso';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_DATA_G'] = 'livello verde';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_DATA_B'] = 'livello blu';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_DATA_GRAY_LEVEL'] = 'livello di grigio';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_DATA_LIGHT'] = 'intensità luminosa';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_DATA_COLOR'] = 'colore';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_GET_OFFSET_TRACK_TITLE'] = '[Quad sensore RGB %1] deviazione dalla linea';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_GET_OFFSET_TRACK_TOOLTIP'] = IMG_MBUILD_SENSORS_QUAD_RGB_SENSOR + Blockly.Tooltip.SEP + 'Restituisce la deflessione del robot con la linea da -100 a 100 mm. Un valore negativo indica una deflessione verso sinistra. Viceversa un valore positivo indica una deflessione verso destra. \n\nÈ possibile diramare in parallelo verso l\'alto a 8 sensori RGB quadrupli utilizzare il parametro (1-8) per recuperare il valore desiderato.';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_DEFINE_COLOR_TITLE'] = '[Quad sensore RGB %1] imposta il colore su %2';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_DEFINE_COLOR_TOOLTIP'] = IMG_MBUILD_SENSORS_QUAD_RGB_SENSOR + Blockly.Tooltip.SEP + 'Consente di impostare il colore delle quattro luci del sensore RGB su rosso, verde o blu. \n\nÈ possibile collegare in parallelo fino a 8 quadrupli sensori RGB utilizzare il parametro (1-8) per recuperare il valore desiderato.';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_SET_COLOR_LIST_TITLE'] = '[Quad RGB Sensor %1] controlla i LED a %2';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_SET_COLOR_LIST_TOOLTIP'] = IMG_MBUILD_SENSORS_QUAD_RGB_SENSOR + Blockly.Tooltip.SEP + 'Consente di impostare il colore delle quattro luci del sensore RGB scegliendo un colore dall\'elenco. \n\nÈ possibile collegare in parallelo fino a 8 quadrupli sensori RGB utilizzare il parametro (1-8) per recuperare il valore desiderato.';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_SET_COLOR_RGB_TITLE'] = '[Quad sensore RGB %1] controlla i LED a R %2 G %3 B %4';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_SET_COLOR_RGB_TOOLTIP'] = IMG_MBUILD_SENSORS_QUAD_RGB_SENSOR + Blockly.Tooltip.SEP + 'Consente di impostare il colore delle quattro luci del sensore RGB impostando RGB da 0 a 255. \n\nÈ possibile collegare in parallelo fino a 8 quadrupli sensori RGB utilizzare il parametro (1-8) per recuperare il valore desiderato.';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_SET_COLOR_PALETTE_TITLE'] = '[Quad sensore RGB %1] controlla i LED a %2';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_SET_COLOR_PALETTE_TOOLTIP'] = IMG_MBUILD_SENSORS_QUAD_RGB_SENSOR + Blockly.Tooltip.SEP + 'Consente di impostare il colore delle quattro luci del sensore RGB scegliendo un colore dalla tavolozza. \n\nÈ possibile collegare in parallelo fino a 8 quadrupli sensori RGB utilizzare il parametro (1-8) per recuperare il valore desiderato.';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_SET_COLOR_TOLERANCE'] = 'tolleranza';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_CLOSE_LED_TITLE'] = '[Quad sensore RGB %1] disattiva i LED';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_CLOSE_LED_TOOLTIP'] = IMG_MBUILD_SENSORS_QUAD_RGB_SENSOR + Blockly.Tooltip.SEP + 'Consente di spegnere i LED del sensore RGB quad. \n\nÈ possibile collegare in parallelo fino a 8 sensori RGB quad. Utilizzare il parametro (1- 8) per recuperare il valore desiderato.';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_CALIBRATE_TITLE'] = '[Quad sensore RGB %1] calibrazione';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_CALIBRATE_TOOLTIP'] = IMG_MBUILD_SENSORS_QUAD_RGB_SENSOR + Blockly.Tooltip.SEP + 'Consente la calibrazione dei sensori linea/colore. \n\nÈ possibile collegare in parallelo fino a 8 sensori RGB quadrupli. il parametro (1-8) da recuperare il valore desiderato.';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_COLOR_MODE_TITLE'] = '[Quad RGB Sensor] imposta la modalità di rilevamento su %1';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_COLOR_MODE_TOOLTIP'] = IMG_MBUILD_SENSORS_QUAD_RGB_SENSOR + Blockly.Tooltip.SEP + 'Consente di definire la modalità di rilevamento del colore. \n\nÈ possibile collegare fino a 8 sensori RGB quadrupli in parallelo. utilizzare il parametro ( 1- 8) per recuperare il valore desiderato.';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_DETECTION_MODE_STANDARD'] = 'standard';
Blockly.Msg['MBUILD_SENSORS_QUAD_RGB_DETECTION_MODE_ENHANCE'] = 'miglioramento del colore';
// Rete: Wi-Fi
Blockly.Msg['CYBERPI_WIFI_CONNECT_TITLE'] = '[WiFi] collega il CyberPi alla rete: nome %1 password %2';
Blockly.Msg['CYBERPI_WIFI_CONNECT_TOOLTIP'] = 'Consente di connettere la scheda CyberPi ad una rete WiFi.';
Blockly.Msg['CYBERPI_WIFI_IS_CONNECT_TITLE'] = '[WiFi] CyberPi è connesso?';
Blockly.Msg['CYBERPI_WIFI_IS_CONNECT_TOOLTIP'] = 'Verifica se la scheda CyberPi è connessa a una rete WiFi.';
Blockly.Msg['CYBERPI_WIFI_DISCONNECT_TITLE'] = '[WiFi] %1 il CyberPi';
Blockly.Msg['CYBERPI_WIFI_DISCONNECT_ACTION'] = "disconnetti";
Blockly.Msg['CYBERPI_WIFI_RECONNECT_ACTION'] = "riconnettiti";
Blockly.Msg['CYBERPI_WIFI_DISCONNECT_TOOLTIP'] = 'Consente di disconnettere o riconnettere la scheda CyberPi alla rete WiFi.';
// Rete - LAN
Blockly.Msg['CYBERPI_WIFI_BROADCAST_SET_TITLE'] = '[LAN] trasmette il messaggio %1 valore %2';
Blockly.Msg['CYBERPI_WIFI_BROADCAST_SET_TOOLTIP'] = 'Ti permette di inviare un messaggio contenente un valore su una rete WiFi. Tutte le schede CyberPi connesse a una rete devono utilizzare lo stesso canale di comunicazione. Senza connessione al router, le schede CyberPi utilizzano di default lo stesso canale e possono quindi comunicare tra loro sulla LAN; Quando la scheda CyberPi è connessa a un router, il suo canale dipende dall\'impostazione del router, che potrebbe essere diversa dal canale predefinito, e pertanto potrebbe non riuscire a comunicare con un\'altra scheda CyberPi non connessa al router. Pertanto, per garantire una buona comunicazione, se utilizzi un router, collega tutte le schede CyberPi alla stessa rete locale.';
Blockly.Msg['CYBERPI_WIFI_BROADCAST_GET_TITLE'] = '[LAN] valore messaggio broadcast %1';
Blockly.Msg['CYBERPI_WIFI_BROADCAST_GET_TOOLTIP'] = 'Permette di ricevere il valore del messaggio trasmesso su una rete WiFi. Non è obbligatorio connettersi ad una rete WiFi esistente per inviare un messaggio. In questo caso, CyberPi ha creato una LAN locale.';