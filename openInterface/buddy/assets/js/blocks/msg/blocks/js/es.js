/**
 * @fileoverview English messages for Buddy. (EN)
 */

'use strict';

Blockly.Msg['LOCK'] = '[ðŸ”’] Blocking function : Put the rest of the program while the action ends. [ðŸ”“] Non -blocking function: does not block the execution of the program during its progress.';

Blockly.Msg['ACTUATORS_BUDDY_SAY_TITLE'] = '[La cabeza] hace un gesto %1 de %2 grados a %3 de velocidad';
Blockly.Msg['ACTUATORS_BUDDY_SAY_YES'] = 'sÃ­';
Blockly.Msg['ACTUATORS_BUDDY_SAY_NO'] = 'no';
Blockly.Msg['ACTUATORS_BUDDY_SAY_TOOLTIP'] = 'Mueve la cabeza de Buddy alrededor del eje \'sÃ­\'/\'no\'. La velocidad estÃ¡ en Â°/s y el Ã¡ngulo en Â°. Para el eje \'no\', la velocidad estÃ¡ entre -140 y 140 y el Ã¡ngulo entre -90 y 90. Para el eje \'sÃ­\', la velocidad estÃ¡ entre -49,2 y 49,2 y el Ã¡ngulo entre -35 y 45';
Blockly.Msg['ACTUATORS_BUDDY_SAY_STRAIGHT_TITLE'] = '[TÃªte] make a %1 gesture %2 %3';
Blockly.Msg['ACTUATORS_BUDDY_SAY_STRAIGHT_TOOLTIP'] = 'Move the head of the Buddy around the \'yes\'/\'no\' axis indefinitely.The speed is in Â°/s.For the \'no\' axis, the speed is between -140 and 140. For the \'yes\' axis, the speed is between -49.2 and 49.2.';
Blockly.Msg['ACTUATORS_STOP_MOVE_TITLE'] = '[Cabeza] detener el motor %1';
Blockly.Msg['ACTUATORS_STOP_YES_MOVE'] = 'sÃ­';
Blockly.Msg['ACTUATORS_STOP_NO_MOVE'] = 'no';
Blockly.Msg['ACTUATORS_STOP_MOVE_TOOLTIP'] = 'Detener los motores de los ejes \'sÃ­\'/\'no\' del CompaÃ±ero';
Blockly.Msg['ACTUATORS_GET_POSITION_TITLE'] = '[Cabeza] recupera la posiciÃ³n a lo largo del eje %1';
Blockly.Msg['ACTUATORS_GET_POSITION_YES'] = 'sÃ­';
Blockly.Msg['ACTUATORS_GET_POSITION_NO'] = 'no';
Blockly.Msg['ACTUATORS_GET_POSITION_TOOLTIP'] = 'Devuelve la posiciÃ³n de la cabeza del compaÃ±ero a lo largo del eje \'sÃ­\'/\'no\'. Para el eje \'no\', la posiciÃ³n estÃ¡ entre -90 y 90. Para el eje \'sÃ­\', la posiciÃ³n estÃ¡ entre -35 y 45';
Blockly.Msg['ACTUATORS_ROTATE_BUDDY_TITLE'] = '[Las ruedas] hacen girar al Buddy a una velocidad de %1 en un Ã¡ngulo de %2';
Blockly.Msg['ACTUATORS_ROTATE_BUDDY_TOOLTIP'] = 'Haz que el Buddy gire a una velocidad y Ã¡ngulo determinados. La velocidad estÃ¡ entre -360Â°/s y 360Â°/s y el Ã¡ngulo entre -360Â° y 360Â°';
Blockly.Msg['ACTUATORS_ROTATE_BUDDY_WITH_ANGLE_TITLE'] = '[Wheels] turn about %1 Â° at a speed of %2 Â°/s %3';
Blockly.Msg['ACTUATORS_ROTATE_BUDDY_WITH_ANGLE_TOOLTIP'] = 'Haz que el Buddy gire a una velocidad y Ã¡ngulo determinados. La velocidad estÃ¡ entre -360Â°/s y 360Â°/s y el Ã¡ngulo entre -360Â° y 360Â°';
Blockly.Msg['ACTUATORS_MOVE_BUDDY_TITLE'] = '[Ruedas] mueven a Buddy a %1 de velocidad durante una distancia de %2';
Blockly.Msg['ACTUATORS_MOVE_BUDDY_TOOLTIP'] = 'La velocidad de las ruedas estÃ¡ en m/s, (+): Hacia adelante, (-): Marcha atrÃ¡s, entre -0,7m/s y 0,7m/s, distancia en metros';
Blockly.Msg['ACTUATORS_MOVE_BUDDY_WITH_DISTANCE_TITLE'] = '[Wheels] move %1 cm at a speed of %2 m/s %3';
Blockly.Msg['ACTUATORS_MOVE_BUDDY_WITH_DISTANCE_TOOLTIP'] = 'The speed of the wheels is in m/s, (+): move forward, (-): back down, between â€“0.7m/s and 0.7m/s, distance in centimeters.';
Blockly.Msg['ACTUATORS_EMERGENCY_STOP_MOTORS_TITLE'] = '[Ruedas] detener los motores';
Blockly.Msg['ACTUATORS_EMERGENCY_STOP_MOTORS_TOOLTIP'] = 'Parada de emergencia de los motores Buddy';
Blockly.Msg['DISPLAY_LED_RIGHT'] = 'hombro derecho';
Blockly.Msg['DISPLAY_LED_LEFT'] = 'hombro izquierdo';
Blockly.Msg['DISPLAY_LED_HEART'] = 'corazÃ³n';
Blockly.Msg['DISPLAY_BLINK_LED_TITLE'] = '[LED] parpadea el led %1 con un color %2 durante un periodo de %3';
Blockly.Msg['DISPLAY_BLINK_LED_TOOLTIP'] = 'Parpadea un led del CompaÃ±ero. Los leds disponibles son el hombro derecho, el hombro izquierdo y el corazÃ³n';
Blockly.Msg['DISPLAY_BLINK_ALL_LED_TITLE'] = '[LED] blink LEDs in %1 over a period of %2 %3';
Blockly.Msg['DISPLAY_BLINK_ALL_LED_TOOLTIP'] = 'Blink all LEDs from the Buddy. Leds available: right shoulder, left shoulder, heart.';
Blockly.Msg['DISPLAY_UPDATE_ALL_LED_TITLE'] = '[LED] turn on all LEDs in %1 %2';
Blockly.Msg['DISPLAY_UPDATE_ALL_LED_TOOLTIP'] = 'Continuously lights all the LEDs with the color you have chosen.';
Blockly.Msg['DISPLAY_FADE_ALL_LED_TITLE'] = '[LED] fade all LEDs in %1 period %2 %3';
Blockly.Msg['DISPLAY_FADE_ALL_LED_TOOLTIP'] = 'Gradually lights all LEDs periodically with the color and the period chosen.';
Blockly.Msg['DISPLAY_UPDATE_LED_COLOR_TITLE'] = '[LED] turn on %1 in %2 %3';
Blockly.Msg['DISPLAY_UPDATE_LED_COLOR_TOOLTIP'] = 'Continuous lights the selected LED with the chosen color';
Blockly.Msg['DISPLAY_UPDATE_ALL_LED_WITH_PATTERN_TITLE'] = '[LED] %1 in %2 over a period %3 with %4 steps %5';
Blockly.Msg['DISPLAY_UPDATE_ALL_LED_WITH_PATTERN_TOOLTIP'] = 'Light all the LEDs with the color and the chosen pattern.';
Blockly.Msg['DISPLAY_PATTERN_1'] = 'flash all LEDs (off then on)';
Blockly.Msg['DISPLAY_PATTERN_2'] = 'flash all LEDs (on then off)';
Blockly.Msg['DISPLAY_PATTERN_3'] = 'turn off all LEDs';
Blockly.Msg['DISPLAY_PATTERN_4'] = 'turn on all LEDs';
Blockly.Msg['DISPLAY_STOP_ALL_LED_TITLE'] = '[LED] apaga todos los LEDs';
Blockly.Msg['DISPLAY_STOP_ALL_LED_TOOLTIP'] = 'Apagar todos los LEDs';
Blockly.Msg['DISPLAY_STOP_LED_TITLE'] = '[LED] turn off %1 %2';
Blockly.Msg['DISPLAY_STOP_LED_TOOLTIP'] = 'Extinguishes the selected LED.';
Blockly.Msg['DISPLAY_SET_FACIAL_EXPRESSION_TITLE'] = '[Cara] Cambia la expresiÃ³n facial a %1 a la velocidad de %2';
Blockly.Msg['DISPLAY_SET_FACIAL_EXPRESSION_SPEED'] = 'speed';
Blockly.Msg['DISPLAY_SET_FACIAL_EXPRESSION_TOOLTIP'] = 'Dar al CompaÃ±ero diferentes expresiones faciales';
Blockly.Msg['DISPLAY_SET_FACIAL_EXPRESSION_NEUTRAL'] = 'neutral';
Blockly.Msg['DISPLAY_SET_FACIAL_EXPRESSION_GRUMPY'] = 'gruÃ±Ã³n';
Blockly.Msg['DISPLAY_SET_FACIAL_EXPRESSION_HAPPY'] = 'feliz';
Blockly.Msg['DISPLAY_SET_FACIAL_EXPRESSION_ANGRY'] = 'enfadado';
Blockly.Msg['DISPLAY_SET_FACIAL_EXPRESSION_LISTENING'] = 'escuchando';
Blockly.Msg['DISPLAY_SET_FACIAL_EXPRESSION_LOVE'] = 'amor';
Blockly.Msg['DISPLAY_SET_FACIAL_EXPRESSION_SAD'] = 'triste';
Blockly.Msg['DISPLAY_SET_FACIAL_EXPRESSION_SCARED'] = 'asustado';
Blockly.Msg['DISPLAY_SET_FACIAL_EXPRESSION_SICK'] = 'enfermo';
Blockly.Msg['DISPLAY_SET_FACIAL_EXPRESSION_SURPRISED'] = 'sorprendido';
Blockly.Msg['DISPLAY_SET_FACIAL_EXPRESSION_THINKING'] = 'pensativo';
Blockly.Msg['DISPLAY_SET_FACIAL_EXPRESSION_TIRED'] = 'cansado';
Blockly.Msg['DISPLAY_SET_MOOD_TITLE'] = '[Face] Change facial expression %1 with LED animation %2';
Blockly.Msg['DISPLAY_SET_MOOD_SPEED'] = 'speed';
Blockly.Msg['DISPLAY_SET_MOOD_TOOLTIP'] = 'Give the buddy different facial expressions. LEDs light up different colors depending on the selected emotion.';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_TITLE'] = '[Cara] jugar un truco %1 velocidad %2';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_SPEED'] = 'speed';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_TOOLTIP'] = 'Juega con diferentes trucos';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_DOUBTFUL'] = 'dudoso';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_AWAKE'] = 'despierto';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_BLINK_EYES'] = 'parpadeo';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_BLINK_LEFT_EYE'] = 'parpadear el ojo izquierdo';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_BLINK_RIGHT_EYE'] = 'parpadear el ojo derecho';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_CLOSE_EYES'] = 'cierra los ojos';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_CLOSE_LEFT_EYE'] = 'cierra el ojo izquierdo';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_CLOSE_RIGHT_EYE'] = 'cerrar el ojo derecho';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_FALL_ASLEEP'] = 'dormir';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_GROWLING'] = 'gruÃ±ido';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_OPEN_EYES'] = 'abre los ojos';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_OPEN_LEFT_EYE'] = 'abre el ojo izquierdo';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_OPEN_RIGHT_EYE'] = 'abrir el ojo derecho';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_SMILE'] = 'sonreÃ­r';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_SURPRISED'] = 'sorprendido';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_SUSPICIOUS'] = 'sospechoso';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_TEASE'] = 'burlÃ³n';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_WHAT'] = 'avergonzado';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_WHISTLE'] = 'silbido';
Blockly.Msg['DISPLAY_PLAY_FACIAL_EVENT_YAWN'] = 'bostezo';
Blockly.Msg['DISPLAY_SET_LABIAL_EXPRESSION_TITLE'] = '[Cara] cambiar la expresiÃ³n de la boca %1';
Blockly.Msg['DISPLAY_SET_LABIAL_EXPRESSION_TOOLTIP'] = 'Cambiar la expresiÃ³n de la boca de Buddy';
Blockly.Msg['DISPLAY_SET_LABIAL_EXPRESSION_SPEAK_ANGRY'] = 'enfadado';
Blockly.Msg['DISPLAY_SET_LABIAL_EXPRESSION_NO_FACE'] = 'no';
Blockly.Msg['DISPLAY_SET_LABIAL_EXPRESSION_SPEAK_HAPPY'] = 'feliz';
Blockly.Msg['DISPLAY_SET_LABIAL_EXPRESSION_SPEAK_NEUTRAL'] = 'neutral';
Blockly.Msg['DISPLAY_SET_FACE_POSIVITY_TITLE'] = '[Face] Change positivity %1 %';
Blockly.Msg['DISPLAY_SET_FACE_POSIVITY_TOOLTIP'] = 'Changes the level of face positivity.Positivity: can take a value from 0.0 to 1.0 (0% to 100%).';
Blockly.Msg['DISPLAY_SET_FACE_ENERGY_TITLE'] = '[Face] Change energy %1 %';
Blockly.Msg['DISPLAY_SET_FACE_ENERGY_TOOLTIP'] = 'Changes the energy level of the facial.Energy: can take value 0.0 to 1.0 (0% to 100%).';
Blockly.Msg['DISPLAY_PLAY_FACIAL_RELATIVE_EVENT_TITLE'] = '[Face] play facial animation at %1 % speed';
Blockly.Msg['DISPLAY_PLAY_FACIAL_RELATIVE_EVENT_TOOLTIP'] = 'Plays the animation of the face in relation to the current expression.';
Blockly.Msg['DISPLAY_LOOK_AT_XY_TITLE'] = '[Face] look at (%1,%2) %3';
Blockly.Msg['DISPLAY_LOOK_AT_XY_TOOLTIP'] = 'Make the eyes look in one direction.';
Blockly.Msg['DISPLAY_LOOK_AT_SMOOTH'] = 'smooth';
Blockly.Msg['DISPLAY_LOOK_AT_INSTANT'] = 'instantaneous';
Blockly.Msg['DISPLAY_LOOK_AT_TITLE'] = '[Face] look %1 %2';
Blockly.Msg['DISPLAY_LOOK_AT_TOOLTIP'] = 'Make the eyes look in one direction.';
Blockly.Msg['DISPLAY_LOOK_AT_CENTER'] = 'In the center';
Blockly.Msg['DISPLAY_LOOK_AT_TOP'] = 'at the top';
Blockly.Msg['DISPLAY_LOOK_AT_LEFT'] = 'to the left';
Blockly.Msg['DISPLAY_LOOK_AT_RIGHT'] = 'to the right';
Blockly.Msg['DISPLAY_LOOK_AT_BOTTOM'] = 'downstairs';
Blockly.Msg['DISPLAY_LOOK_AT_TOP_LEFT'] = 'on the top corner left';
Blockly.Msg['DISPLAY_LOOK_AT_TOP_RIGHT'] = 'top right';
Blockly.Msg['DISPLAY_LOOK_AT_BOTTOM_RIGHT'] = 'at the bottom right';
Blockly.Msg['DISPLAY_LOOK_AT_BOTTOM_LEFT'] = 'at the bottom left';
Blockly.Msg['SENSORS_ISDETECTED'] = 'is';
Blockly.Msg['SENSORS_ISNTDETECTED'] = 'is not';
Blockly.Msg['SENSORS_US_DETECT_OBSTACLE_TITLE'] = '[Ultrasound] if an obstacle %1 within %2 cm on the %3 then';
Blockly.Msg['SENSORS_US_DETECT_OBSTACLE_TOOLTIP'] = 'Measures the distance (in mm) on the left or the right of the buddy is verified if an obstacle is less than a certain distance.';
Blockly.Msg['SENSORS_GET_DISTANCE_TITLE'] = '[Ultrasonido] mide la distancia %1';
Blockly.Msg['SENSORS_GET_DISTANCE_LEFT'] = 'izquierda';
Blockly.Msg['SENSORS_GET_DISTANCE_RIGHT'] = 'derecha';
Blockly.Msg['SENSORS_GET_DISTANCE_TOOLTIP'] = 'Mide la distancia (en mm) a la izquierda o a la derecha del CompaÃ±ero';
Blockly.Msg['SENSORS_TOF_DETECT_OBSTACLE_TITLE'] = '[Infrared ToF] if an obstacle %1 is within %2 cm on the %3 then';
Blockly.Msg['SENSORS_TOF_DETECT_OBSTACLE_TOOLTIP'] = 'Measures the distance (in mm) on the left or right of the Buddy thanks to the Buddy infrared sensors and checks if an obstacle is less than a certain distance.';
Blockly.Msg['SENSORS_GET_LIGHT_TITLE'] = '[ToF infrarrojo] mide la distancia a %1';
Blockly.Msg['SENSORS_GET_LIGHT_TOOLTIP'] = 'Mide la distancia (en mm) usando los sensores infrarrojos del Buddy';
Blockly.Msg['SENSORS_GET_LIGHT_LEFT'] = 'izquierda';
Blockly.Msg['SENSORS_GET_LIGHT_RIGHT'] = 'derecha';
Blockly.Msg['SENSORS_GET_LIGHT_FRONT'] = 'frente';
Blockly.Msg['SENSORS_GET_LIGHT_BACK'] = 'atrÃ¡s';
Blockly.Msg['SENSORS_ONHEADTOUCHSENSORSTOUCHED_TITLE'] = '[Touch] if the %1 side of the head %2 touched then';
Blockly.Msg['SENSORS_ONHEADTOUCHSENSORSTOUCHED_TOOLTIP'] = 'Check if one side of the head is or is not touched.';
Blockly.Msg['SENSORS_ONBODYTOUCHSENSORSTOUCHED_TITLE'] = '[Touch] if %1 %2 touched then';
Blockly.Msg['SENSORS_ONBODYTOUCHSENSORSTOUCHED_TOOLTIP'] = 'Check if the head is or is not touched.';
Blockly.Msg['SENSORS_ISTOUCHED'] = 'is';
Blockly.Msg['SENSORS_ISNTTOUCHED'] = 'is not';
Blockly.Msg['SENSORS_HEAD_TOUCH_SENSORS_TITLE'] = '[Touch] se toca el lado %1 de la cabeza';
Blockly.Msg['SENSORS_HEAD_TOUCH_SENSORS_TOOLTIP'] = 'Comprueba si se toca la cabeza';
Blockly.Msg['SENSORS_HEAD_TOUCH_SENSORS_TOP'] = 'arriba';
Blockly.Msg['SENSORS_HEAD_TOUCH_SENSORS_LEFT'] = 'izquierda';
Blockly.Msg['SENSORS_HEAD_TOUCH_SENSORS_RIGHT'] = 'derecha';
Blockly.Msg['SENSORS_FACE_TOUCH_SENSORS_TITLE'] = '[Touch] %1 is touched';
Blockly.Msg['SENSORS_FACE_TOUCH_SENSORS_TOOLTIP'] = 'Check if part of the face is touched.';
Blockly.Msg['SENSORS_FACE_TOUCH_SENSORS_LEFT_EYE'] = 'the left eye';
Blockly.Msg['SENSORS_FACE_TOUCH_SENSORS_RIGHT_EYE'] = 'the right eye';
Blockly.Msg['SENSORS_FACE_TOUCH_SENSORS_MOUTH'] = 'the mouth';
Blockly.Msg['SENSORS_FACE_TOUCH_SENSORS_FACE'] = 'the face';
Blockly.Msg['SENSORS_ONFACETOUCHSENSORSTOUCHED_TITLE'] = '[Touch] if %1 %2 touched then';
Blockly.Msg['SENSORS_ONFACETOUCHSENSORSTOUCHED_TOOLTIP'] = 'Check whether part of the face is touched or not.';
Blockly.Msg['SENSORS_BODY_TOUCH_SENSORS_TITLE'] = '[Touch] %1 es tocado';
Blockly.Msg['SENSORS_BODY_TOUCH_SENSORS_TOOLTIP'] = 'Comprueba si se toca alguna parte del cuerpo';
Blockly.Msg['SENSORS_BODY_TOUCH_SENSORS_TORSO'] = 'torso';
Blockly.Msg['SENSORS_BODY_TOUCH_SENSORS_LEFT'] = 'hombro izquierdo';
Blockly.Msg['SENSORS_BODY_TOUCH_SENSORS_RIGHT'] = 'hombro derecho';
Blockly.Msg['SENSORS_GET_BATTERY_LEVEL_TITLE'] = 'nivel [de la baterÃ­a]';
Blockly.Msg['SENSORS_GET_BATTERY_LEVEL_TOOLTIP'] = 'Devuelve el nivel de baterÃ­a del Buddy';
Blockly.Msg['SENSORS_IS_CHARGING_TITLE'] = '[BaterÃ­a] se estÃ¡ cargando';
Blockly.Msg['SENSORS_IS_CHARGING_TOOLTIP'] = 'Comprueba si el Buddy se estÃ¡ cargando';
Blockly.Msg['SENSORS_GET_AMBIANT_SOUND_TITLE'] = '[MicrÃ³fono] nivel de sonido (dB)';
Blockly.Msg['SENSORS_GET_AMBIANT_SOUND_TOOLTIP'] = 'Devuelve el nivel de sonido ambiental en decibelios';
Blockly.Msg['SENSORS_GET_SOUND_LOCALISATION_TITLE'] = 'PosiciÃ³n [del micrÃ³fono] (en grados) del sonido';
Blockly.Msg['SENSORS_GET_SOUND_LOCALISATION_TOOLTIP'] = 'Devuelve el Ã¡ngulo en grados de la ubicaciÃ³n del sonido entre 0Â° y 360Â°';
Blockly.Msg['SENSORS_GET_TRIGGER_SCORE_TITLE'] = 'PuntuaciÃ³n [del micrÃ³fono] de la pronunciaciÃ³n \'OK Buddy\'';
Blockly.Msg['SENSORS_GET_TRIGGER_SCORE_TOOLTIP'] = 'Devuelve la puntuaciÃ³n que evalÃºa la pronunciaciÃ³n de la frase de activaciÃ³n: \'OK Buddy\'';
Blockly.Msg['SENSORS_GET_BODY_ACC_TITLE'] = 'AceleraciÃ³n [del cuerpo] a lo largo del eje %1';
Blockly.Msg['SENSORS_GET_BODY_ACC_TOOLTIP'] = 'Devuelve el valor de la aceleraciÃ³n (en mg) del cuerpo de Buddy a lo largo del eje x,y o z';
Blockly.Msg['SENSORS_GET_BODY_ACC_X'] = 'X';
Blockly.Msg['SENSORS_GET_BODY_ACC_Y'] = 'Y';
Blockly.Msg['SENSORS_GET_BODY_ACC_Z'] = 'Z';
Blockly.Msg['SENSORS_GET_BODY_GYR_TITLE'] = '[Cuerpo] velocidad angular a lo largo del eje %1';
Blockly.Msg['SENSORS_GET_BODY_GYR_TOOLTIP'] = 'Devuelve el valor de la velocidad angular del cuerpo de Buddy a lo largo del eje x,y o z';
Blockly.Msg['SENSORS_GET_BODY_GYR_X'] = 'X';
Blockly.Msg['SENSORS_GET_BODY_GYR_Y'] = 'Y';
Blockly.Msg['SENSORS_GET_BODY_GYR_Z'] = 'Z';
Blockly.Msg['SENSORS_GET_HEAD_ACC_TITLE'] = '[Cabeza] aceleraciÃ³n a lo largo del eje %1';
Blockly.Msg['SENSORS_GET_HEAD_ACC_TOOLTIP'] = 'Devuelve el valor de la aceleraciÃ³n (en mg) de la cabeza de Buddy a lo largo del eje x,y o z';
Blockly.Msg['SENSORS_GET_HEAD_ACC_X'] = 'X';
Blockly.Msg['SENSORS_GET_HEAD_ACC_Y'] = 'Y';
Blockly.Msg['SENSORS_GET_HEAD_ACC_Z'] = 'Z';
Blockly.Msg['SENSORS_GET_HEAD_GYR_TITLE'] = '[Cabeza] velocidad angular a lo largo del eje %1';
Blockly.Msg['SENSORS_GET_HEAD_GYR_TOOLTIP'] = 'Devuelve el valor de la velocidad angular de la cabeza de Buddy a lo largo del eje x,y o z';
Blockly.Msg['SENSORS_GET_HEAD_GYR_X'] = 'X';
Blockly.Msg['SENSORS_GET_HEAD_GYR_Y'] = 'Y';
Blockly.Msg['SENSORS_GET_HEAD_GYR_Z'] = 'Z';
Blockly.Msg['SENSORS_COLOR_DETECT_TITLE'] = '[Color] color dominante';
Blockly.Msg['SENSORS_COLOR_DETECT_TOOLTIP'] = 'Devuelve el color dominante de la imagen';
Blockly.Msg['VISION_START_CAMERA_TITLE'] = '[Camera] turn on %1';
Blockly.Msg['VISION_START_CAMERA_TOOLTIP'] = 'Turn on the Buddy camera';
Blockly.Msg['VISION_STOP_CAMERA_TITLE'] = '[Camera] turn off %1';
Blockly.Msg['VISION_STOP_CAMERA_TOOLTIP'] = 'Turn off Buddy\'s camera';
Blockly.Msg['VISION_GET_GRAND_ANGLE_FRAME_TITLE'] = '[Camera] get the image of the camera';
Blockly.Msg['VISION_GET_GRAND_ANGLE_FRAME_TOOLTIP'] = 'Recover the image of the wide angle camera (BitMap 640*480px format).';
Blockly.Msg['VISION_GET_CV_RESULT_FRAME_TITLE'] = '[Camera] get the image using the CV algorithm';
Blockly.Msg['VISION_GET_CV_RESULT_FRAME_TOOLTIP'] = 'Recovers the image generated by the latest CV algorithm executed (BitMap 640*480px format).';
Blockly.Msg['VISION_DETECT_ARUKO_MARKERS_TITLE'] = '[Object] identification of ARUCO markers';
Blockly.Msg['VISION_DETECT_ARUKO_MARKERS_TOOLTIP'] = 'Detects ARUCO markers (April Tag) with the camera.The marker must be of the 36h11 dictionary.';
Blockly.Msg['VISION_DETECT_FACES_TITLE'] = '[Object] face identification';
Blockly.Msg['VISION_DETECT_FACES_TOOLTIP'] = 'Detect human faces with the camera.The threshold, optional parameter, is between 0 and 1.';
Blockly.Msg['VISION_DETECT_FACES_THRES'] = 'threshold';
Blockly.Msg['VISION_DETECT_PERSON_TITLE'] = '[Object] identification of people';
Blockly.Msg['VISION_DETECT_PERSON_TOOLTIP'] = 'Detects humans with the camera.The threshold, optional parameter, is between 0 and 1.';
Blockly.Msg['VISION_DETECT_PERSON_THRES'] = 'threshold';
Blockly.Msg['VISION_IF_PERSON_DETECTED_IN_AREA_TITLE'] = '[Object] if a person %1 %2 is detected then';
Blockly.Msg['VISION_IF_PERSON_DETECTED_IN_AREA_TOOLTIP'] = 'Detect the person in front of the camera.';
Blockly.Msg['VISION_DETECTION_AREA_CENTER'] = 'in the center', Blockly.Msg['VISION_DETECTION_AREA_RIGHT'] = 'to the right', Blockly.Msg['VISION_DETECTION_AREA_LEFT'] = 'to the left', Blockly.Msg['VISION_IF_PERSON_DETECTED_TITLE'] = '[Object] if a person %1 is detected then';
Blockly.Msg['VISION_IF_PERSON_DETECTED_TOOLTIP'] = 'Detect the person in front of the camera.The threshold, optional parameter, is between 0 and 1.';
Blockly.Msg['VISION_START_MOTION_DETECTION_TITLE'] = '[Movement] Start movement detection';
Blockly.Msg['VISION_START_MOTION_DETECTION_TOOLTIP'] = 'Launches the movement detection process.';
Blockly.Msg['VISION_STOP_MOTION_DETECTION_TITLE'] = '[Movement] Stop movement detection';
Blockly.Msg['VISION_STOP_MOTION_DETECTION_TOOLTIP'] = 'Stop the movement detection process.';
Blockly.Msg['VISION_MOTION_DETECT_TITLE'] = '[Movement] Detecting movements';
Blockly.Msg['VISION_MOTION_DETECT_TOOLTIP'] = 'Detect movements in front of the camera.';
Blockly.Msg['VISION_SET_MOTION_THRES_TITLE'] = '[Movement] Define the detection threshold %1';
Blockly.Msg['VISION_SET_MOTION_THRES_TOOLTIP'] = 'Defines the movement detection threshold.';
Blockly.Msg['VISION_MOTION_DETECT_WITH_TRESH_TITLE'] = '[Movement] Detection with the threshold %1';
Blockly.Msg['VISION_MOTION_DETECT_WITH_TRESH_TOOLTIP'] = 'Launches the detection of a movement in front of the camera for the specified threshold.';
Blockly.Msg['VISION_GET_MOTION_DETECTION_TITLE'] = '[Movement] find information about the object';
Blockly.Msg['VISION_GET_MOTION_DETECTION_TOOLTIP'] = 'Returns a table containing the amplitude and the position of the highest measured optical flow in the image.The position (origin in the upper left corner) is expressed in %. ';
Blockly.Msg['VISION_START_VISUAL_TRACKING_TITLE'] = '[Tracking] start Tracking';
Blockly.Msg['VISION_START_VISUAL_TRACKING_TOOLTIP'] = 'Launches the follow -up process.';
Blockly.Msg['VISION_START_VISUAL_TRACKING_THRES'] = 'threshold';
Blockly.Msg['VISION_STOP_VISUAL_TRACKING_TITLE'] = '[Tracking] stop tracking';
Blockly.Msg['VISION_STOP_VISUAL_TRACKING_TOOLTIP'] = 'Stop tracking process.';
Blockly.Msg['VISION_GET_TRACKING_TITLE'] = '[Tracking] obtain informations';
Blockly.Msg['VISION_GET_TRACKING_TOOLTIP'] = 'Recovers the dragged target. Returns a table that contains: 1 - True if a person is successfully followed, False if the follow -up is lost or if no one is present in the image.2 - The position of the monitoring of the follow -up.';
Blockly.Msg['VI_START_SPEAKING_TITLE'] = '[Voz] dice %1 con la boca %2';
Blockly.Msg['VI_START_SPEAKING_TOOLTIP'] = 'Hace que el CompaÃ±ero hable con un determinado movimiento de boca. Es posible marcar una pausa en el texto. Para ello, basta con aÃ±adir <tiempo_en_milisegundos> sustituyendo <tiempo_en_milisegundos> por el nÃºmero de milisegundos deseado para la pausa.';
Blockly.Msg['VI_START_SPEAKING_SPEAK_ANGRY'] = 'enojado';
Blockly.Msg['VI_START_SPEAKING_NO_FACE'] = 'cerrado';
Blockly.Msg['VI_START_SPEAKING_SPEAK_HAPPY'] = 'feliz';
Blockly.Msg['VI_START_SPEAKING_NEUTRAL'] = 'neutral';
Blockly.Msg['VI_STOP_SPEAKING_TITLE'] = '[Voz] deja de hablar';
Blockly.Msg['VI_STOP_SPEAKING_TOOLTIP'] = 'Calla a Buddy';
Blockly.Msg['VI_IS_SPEAKING_TITLE'] = '[Voz] estÃ¡ hablando';
Blockly.Msg['VI_IS_SPEAKING_TOOLTIP'] = 'Comprueba si Buddy estÃ¡ hablando';
Blockly.Msg['VI_SET_SPEAKER_VOICE_TITLE'] = '[Voz] cambia a %1';
Blockly.Msg['VI_SET_SPEAKER_VOICE_TOOLTIP'] = 'Cambiar el idioma de Buddy';
Blockly.Msg['VI_SET_SPEAKER_VOICE_ROXANE'] = 'roxane (fr)';
Blockly.Msg['VI_SET_SPEAKER_VOICE_KATE'] = 'kate (en)';
Blockly.Msg['VI_SET_SPEAKER_VOLUME_TITLE'] = '[Voz] cambiar volumen %1';
Blockly.Msg['VI_SET_SPEAKER_VOLUME_TOOLTIP'] = 'Cambia el volumen de la voz de Buddy. Puede tomar un valor entre 0% y 300%. El valor por defecto es 100%. Cuanto mayor sea el valor, mayor serÃ¡ el volumen';
Blockly.Msg['VI_GET_SPEAKER_VOLUME_TITLE'] = 'Volumen [de la voz]';
Blockly.Msg['VI_GET_SPEAKER_VOLUME_TOOLTIP'] = 'Sube el volumen de voz de Buddy';
Blockly.Msg['VI_SET_SPEAKER_SPEED_TITLE'] = '[Voz] cambia la velocidad %1';
Blockly.Msg['VI_SET_SPEAKER_SPEED_TOOLTIP'] = 'Puede tomar un valor entre 50% y 400%. El valor por defecto es 100%';
Blockly.Msg['VI_GET_SPEAKER_SPEED_TITLE'] = 'Velocidad [de voz]';
Blockly.Msg['VI_GET_SPEAKER_SPEED_TOOLTIP'] = 'Devuelve la velocidad de voz de Buddy';
Blockly.Msg['VI_SET_SPEAKER_PITCH_TITLE'] = '[Voz] cambia el tono %1';
Blockly.Msg['VI_SET_SPEAKER_PITCH_TOOLTIP'] = 'Cambia el tono de la voz de Buddy. Puede tomar un valor entre 50% y 200%. El valor por defecto es 100%. Cuanto mÃ¡s bajo sea el tono, mÃ¡s grave serÃ¡ la voz';
Blockly.Msg['VI_GET_SPEAKER_PITCH_TITLE'] = 'Tono [de la voz]';
Blockly.Msg['VI_GET_SPEAKER_PITCH_TOOLTIP'] = 'Devuelve el tono de la voz de Buddy';
Blockly.Msg['IO_WAIT_TITLE'] = 'espera %1 %2';
Blockly.Msg['IO_WAIT_TOOLTIP'] = 'Detiene la ejecuciÃ³n del cÃ³digo (duraciÃ³n en segundos o milisegundos)';
Blockly.Msg['IO_WAIT_SECOND'] = 'segundo(s)';
Blockly.Msg['IO_WAIT_MILLISECOND'] = 'milisegundo(s)';
Blockly.Msg['IO_WAIT_MICROSECOND'] = 'microsegundo(s)';
Blockly.Msg['IO_WAIT_UNTIL_TITLE'] = 'espera hasta %1';
Blockly.Msg['IO_WAIT_UNTIL_TOOLTIP'] = 'Detener la ejecuciÃ³n del cÃ³digo hasta que se cumpla la condiciÃ³n';
Blockly.Msg['IO_INITCHRONOMETER_TITLE'] = 'inicializar el cronÃ³metro';
Blockly.Msg['IO_INITCHRONOMETER_TOOLTIP'] = 'Permite inicializar el cronÃ³metro (en segundos)';
Blockly.Msg['IO_GETCHRONOMETER_TITLE'] = 'Obtener cronÃ³metro en %1';
Blockly.Msg['IO_GETCHRONOMETER_TOOLTIP'] = 'Devuelve el valor del cronÃ³metro de la inicializaciÃ³n en segundos o milisegundos.';
// AI IMAGE
Blockly.Msg['VITTAIA_LOAD_MODEL_TITLE'] = '%1 load the AI image model %2';
Blockly.Msg['VITTAIA_LOAD_MODEL_TOOLTIP'] = 'Loads the AI image model passed as a parameter. The default model is for recognizing cats and dogs. You can generate a new model from the "AI Training" interface of Vittascience available in the Programming section.';
Blockly.Msg['VITTAIA_LOAD_LOCAL_MODEL_TITLE'] = '%1 load the local AI image model';
Blockly.Msg['VITTAIA_LOAD_LOCAL_MODEL_TOOLTIP'] = 'Loads the already trained image model located in the browser\'s local memory';
Blockly.Msg['VITTAIA_LOAD_MODEL_DEFAULT_TITLE'] = '%1 load the AI image model %2';
Blockly.Msg['VITTAIA_LOAD_MODEL_DEFAULT_TOOLTIP'] = 'Loads an already trained image model. Change the model using the option.';
Blockly.Msg['VITTAIA_MODEL_DOGS_CATS'] = "Dogs and Cats";
Blockly.Msg['VITTAIA_MAKE_PREDICTIONS_WEBCAM_TITLE'] = '%1 start detection on the camera image';
Blockly.Msg['VITTAIA_MAKE_PREDICTIONS_WEBCAM_TOOLTIP'] = 'Makes predictions from the camera image model. A prediction includes 2 elements: the class and the probability.';
Blockly.Msg['VITTAIA_MAKE_PREDICTIONS_FILE_TITLE'] = '%1 start detection on the imported image';
Blockly.Msg['VITTAIA_MAKE_PREDICTIONS_FILE_TOOLTIP'] = 'Makes predictions from the imported image model. A prediction includes 2 elements: the class and the probability.';
Blockly.Msg['VITTAIA_GET_HIGHEST_PROBABILITY_CLASS_TITLE'] = '%1 detected class';
Blockly.Msg['VITTAIA_GET_HIGHEST_PROBABILITY_CLASS_TOOLTIP'] = 'Returns the class associated with the model having the highest detection probability.';
Blockly.Msg['VITTAIA_GET_CONFIDENCE_RATE_TITLE'] = '%1 confidence rate';
Blockly.Msg['VITTAIA_GET_CONFIDENCE_RATE_TOOLTIP'] = 'Returns the confidence rate of the class with the highest probability.';
Blockly.Msg['VITTAIA_GET_PREDICTIONS_TITLE'] = '%1 predicciones';
Blockly.Msg['VITTAIA_GET_PREDICTIONS_TOOLTIP'] = 'Devuelve un arreglo que contiene todas las predicciones del modelo.';
Blockly.Msg['VITTAIA_DETECT_CLASS_TITLE'] = '%1 if the class %2 %3 detected then';
Blockly.Msg['VITTAIA_IS'] = "is";
Blockly.Msg['VITTAIA_ISNOT'] = "is not";
Blockly.Msg['VITTAIA_DETECT_CLASS_TOOLTIP'] = 'Starts detection using a camera image or an imported image to make a prediction checks if the class indicated in the block is detected.';
Blockly.Msg['VITTAIA_IMAGE_UPLOADED_TITLE'] = '%1 image uploaded';
Blockly.Msg['VITTAIA_IMAGE_UPLOADED_TOOLTIP'] = 'Allows uploading an image from the computer to be then tested by the model by launching a detection. Press the \'Upload\' icon of the block to add the image.';
Blockly.Msg['VITTAIA_WEBCAM_CAPTURE_TITLE'] = '%1 [camera] capture';
Blockly.Msg['VITTAIA_WEBCAM_CAPTURE_TOOLTIP'] = 'Allows to perform a capture with the computer\'s camera.';
Blockly.Msg['VITTAIA_WEBCAM_LIST_AVAILABLES_TITLE'] = '%1 [camera] list of available cameras';
Blockly.Msg['VITTAIA_WEBCAM_LIST_AVAILABLES_TOOLTIP'] = 'Allows listing all the cameras available on the computer.';
Blockly.Msg['VITTAIA_WEBCAM_INIT_TITLE'] = '%1 [camera] select the camera %2';
Blockly.Msg['VITTAIA_WEBCAM_INIT_TOOLTIP'] = 'Allows initializing the computer\'s camera (by default 0).';
Blockly.Msg['VITTAIA_WEBCAM_REFRESH_TITLE'] = '%1 [camera] refresh the camera';
Blockly.Msg['VITTAIA_WEBCAM_REFRESH_TOOLTIP'] = 'Allows to refresh the camera window.';