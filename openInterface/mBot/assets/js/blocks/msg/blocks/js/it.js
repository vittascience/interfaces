/**
 * @fileoverview English messages for mBot. (EN)
 */
'use strict';
//COMMENT - Arduino
Blockly.Msg['CALL_EXPRESSION_COMMENT_TITLE'] = 'comment %1';
Blockly.Msg['CALL_EXPRESSION_COMMENT_TOOLTIP'] = 'This block allows you to add a comment to your code. It is not executed by the program, but it can help you understand your code later.';
// Display - MeMCore
Blockly.Msg['MCORE_CONTROL_BUILTIN_LED_TITLE'] = '[MeMCore] contrôler la LED bleue intégrée à l\'état %1';
Blockly.Msg['MCORE_CONTROL_BUILTIN_LED_TOOLTIP'] = 'Permet de contrôler l\'état de la LED bleue intégrée à la carte MeMCore.';
// Input/Output - MeMCore
Blockly.Msg['IO_WAIT_TITLE'] = 'attendre %1 %2';
Blockly.Msg['IO_WAIT_TOOLTIP'] = 'Effectue une pause dans l\'exécution du code.';
Blockly.Msg['IO_WAIT_SECOND'] = 'seconde(s)';
Blockly.Msg['IO_WAIT_MILLISECOND'] = 'milliseconde(s)';
Blockly.Msg['IO_WAIT_MICROSECOND'] = 'microseconde(s)';
Blockly.Msg['IO_WAIT_UNTIL_TITLE'] = 'attendre jusqu\'à %1';
Blockly.Msg['IO_WAIT_UNTIL_TOOLTIP'] = 'Arrête l\'excution du code jusqu\'à ce que la condition soit satisfaite.';
Blockly.Msg['IO_INITCHRONOMETER_TITLE'] = 'démarrer le chronomètre';
Blockly.Msg['IO_INITCHRONOMETER_TOOLTIP'] = 'Initialise un chronomètre à 0 (en secondes).';
Blockly.Msg['IO_GETCHRONOMETER_TITLE'] = 'valeur du chronomètre en %1';
Blockly.Msg['IO_GETCHRONOMETER_TOOLTIP'] = 'Renvoie la valeur du chronomètre à partir de l\'initialisation (en secondes ou millisecondes).';
// Input/Output - Pins
Blockly.Msg['IO_DIGITAL_SIGNAL_TITLE'] = '%1';
Blockly.Msg['IO_DIGITAL_SIGNAL_HIGH'] = 'HAUT (1)';
Blockly.Msg['IO_DIGITAL_SIGNAL_LOW'] = 'BAS (0)';
Blockly.Msg['IO_DIGITAL_SIGNAL_TOOLTIP'] = 'Retourne une valeur booléene (HAUT ou BAS).';
Blockly.Msg['IO_READDIGITALPIN_TITLE'] = 'état de la broche numérique %1';
Blockly.Msg['IO_READDIGITALPIN_TOOLTIP'] = 'Permet de lire la valeur d\'une entrée digitale (0 ou 1).';
Blockly.Msg['IO_WRITEDIGITALPIN_TITLE'] = 'écrire sur la broche numérique %1 l\'état %2';
Blockly.Msg['IO_WRITEDIGITALPIN_TOOLTIP'] = 'Permet d\'écrire une valeur sur une entrée digitale (0 ou 1).';
Blockly.Msg['IO_WRITEANALOGPIN_TITLE'] = 'écrire sur la broche analogique %1 la valeur %2';
Blockly.Msg['IO_WRITEANALOGPIN_TOOLTIP'] = 'Permet d\'écrire une valeur sur une entrée analogique (0-255).';
Blockly.Msg['IO_READANALOGPIN_TITLE'] = 'lire la broche analogique %1';
Blockly.Msg['IO_READANALOGPIN_TOOLTIP'] = 'Permet de lire la valeur d\'une entrée analogique (0-1023).';
Blockly.Msg['IO_SETPWM_TITLE'] = 'appliquer un signal PWM de rapport cyclique %1 (%) sur la broche %2 ';
Blockly.Msg['IO_SETPWM_TOOLTIP'] = 'Permet d\'appliquer un signal PWM sur une broche pwm (~) en paramétrant le rapport cyclique (en %). Pour les broches D3, D9, D10 et D11, la fréquence du signal est de 490 Hz (soit 2.04 ms). Pour les broches D5 et D6, elle est de 980 Hz (soit 1.02 ms).';
Blockly.Msg['IO_READPULSEIN_TITLE'] = 'lire l\'impulsion (μs) de l\'état %1 sur la broche %2';
Blockly.Msg['IO_READPULSEIN_TOOLTIP'] = 'Renvoie la durée de l\'impulsion entrante à l\'état HAUT ou à l\'état BAS (en μs). Fonctionne pour des impulsions de 10 μs à 3 min.';
Blockly.Msg['IO_ATTACH_INTERRUPT_TITLE'] = 'si %1 détécté sur la broche %2 alors';
Blockly.Msg['IO_ATTACH_INTERRUPT_TOOLTIP'] = 'Permet de créer un évènement sur les broches 2 et 3. Ce bloc exécute des instructions à n\'importe quel instant dès qu\'un front montant/descendant ou les deux est détécté sur les broches 2 et 3.';
Blockly.Msg['IO_RISING_EDGE'] = 'front montant';
Blockly.Msg['IO_FALLING_EDGE'] = 'front descendant';
Blockly.Msg['IO_BOTH_EDGE'] = 'changement d\'état';
// Communication - Serial connection
Blockly.Msg['COMMUNICATION_SERIAL_BEGIN_TITLE'] = 'initialize serial communication at %1 bauds';
Blockly.Msg['COMMUNICATION_SERIAL_BEGIN_TOOLTIP'] = 'This block initializes the serial communication at a given baud rate. It must be used in the setup block.';
Blockly.Msg['COMMUNICATION_SERIAL_WRITE_TITLE'] = 'écrire dans la console %1';
Blockly.Msg['COMMUNICATION_SERIAL_WRITE_TOOLTIP'] = 'Ce bloc sert à écrire n\'importe quel type de données sur le port série. Elles s\'afficheront alors dans la console lors de l\'exécution du programme.';
Blockly.Msg['COMMUNICATION_SERIAL_WRITE_WITH'] = 'avec';
Blockly.Msg['COMMUNICATION_SERIAL_WRITE_NEWLINES'] = 'saut(s) de ligne';
Blockly.Msg['COMMUNICATION_SERIAL_ONDATARECEIVED_TITLE'] = 'si une donnée est reçue du port série dans %1 alors';
Blockly.Msg['COMMUNICATION_SERIAL_ONDATARECEIVED_TOOLTIP'] = 'Permet d\'exécuter des instructions si une donnée est reçue par le port série dans la variable \'serialData\'.';
Blockly.Msg['COMMUNICATION_WRITEGRAPH_TITLE'] = 'tracer le graphe';
Blockly.Msg['COMMUNICATION_WRITEGRAPH_TOOLTIP'] = 'Ce bloc permet d\'écrire des données (numériques) qui seront visibles dans le traceur. Il peut être utilisé avec un ou plusieurs blocs au format "Nom" et "Données". Pour visualiser les graphiques, cliquer sur l\'icone \'Mode Graphique\' dans la console.';
Blockly.Msg['COMMUNICATION_DATA'] = 'Donnée';
Blockly.Msg['COMMUNICATION_PRINT_DATAS_TITLE'] = 'Nom %1 Valeur %2';
Blockly.Msg['COMMUNICATION_PRINT_DATAS_TOOLTIP'] = 'Ce bloc est à utiliser avec le bloc "Tracer le graphique". Il doit lui-même contenir le nom de la valeur à afficher (texte), et la valeur en question (nombre).';
Blockly.Msg['COMMUNICATION_COMPUTER_PLAYNOTE_TITLE'] = 'jouer la note %1 sur l\'ordinateur';
Blockly.Msg['COMMUNICATION_COMPUTER_PLAYNOTE_TOOLTIP'] = 'Joue la note selectionnée jusqu\'à l\'exécution du bloc "Fin de la note".';
Blockly.Msg['NOTE_C'] = 'Do';
Blockly.Msg['NOTE_C_SHARP'] = 'Do#';
Blockly.Msg['NOTE_D'] = 'Ré';
Blockly.Msg['NOTE_D_SHARP'] = 'Ré#';
Blockly.Msg['NOTE_E'] = 'Mi';
Blockly.Msg['NOTE_F'] = 'Fa';
Blockly.Msg['NOTE_F_SHARP'] = 'Fa#';
Blockly.Msg['NOTE_G'] = 'Sol';
Blockly.Msg['NOTE_G_SHARP'] = 'Sol#';
Blockly.Msg['NOTE_A'] = 'La';
Blockly.Msg['NOTE_A_SHARP'] = 'La#';
Blockly.Msg['NOTE_B'] = 'Si';
Blockly.Msg['COMMUNICATION_COMPUTER_SETFREQUENCY_TITLE'] = 'Jouer la fréquence %1 (Hz) sur l\'ordinateur';
Blockly.Msg['COMMUNICATION_COMPUTER_SETFREQUENCY_TOOLTIP'] = 'Ce bloc permet de jouer une fréquence donnée sur l\'ordinateur';
Blockly.Msg['COMMUNICATION_COMPUTER_STOPMUSIC_TITLE'] = 'terminer la note sur l\'ordinateur';
Blockly.Msg['COMMUNICATION_COMPUTER_STOPMUSIC_TOOLTIP'] = 'Arrête la note en cours.';
// Robots - mBot basic modules
Blockly.Msg['ROBOTS_MBOT_GO_TITLE'] = '[Moteurs] contrôler le robot %1 vitesse %2 (%)';
Blockly.Msg['ROBOTS_MBOT_GO_FORWARD'] = 'avancer';
Blockly.Msg['ROBOTS_MBOT_GO_REVERSE'] = 'reculer';
Blockly.Msg['ROBOTS_MBOT_GO_TOOLTIP'] = IMG_MODULE_MBOT + Blockly.Tooltip.SEP + 'Permet de contrôler la marche (AVANT/ARRIERE) ainsi que sa vitesse (de 0 à 100 %) du robot mBot';
Blockly.Msg['ROBOTS_MBOT_CONTROLMOTOR_TITLE'] = '[Moteurs] contrôler le moteur %1 direction %2 vitesse %3 (%)';
Blockly.Msg['ROBOTS_MBOT_RIGHT'] = 'droit';
Blockly.Msg['ROBOTS_MBOT_LEFT'] = 'gauche';
Blockly.Msg['ROBOTS_MBOT_RIGHT&LEFT'] = 'droit & gauche';
Blockly.Msg['ROBOTS_MBOT_RIGHT_F'] = 'droite';
Blockly.Msg['ROBOTS_MBOT_LEFT_F'] = 'gauche';
Blockly.Msg['ROBOTS_MBOT_RIGHT&LEFT_F'] = 'droite & gauche';
Blockly.Msg['ROBOTS_MBOT_CONTROLMOTOR_TOOLTIP'] = IMG_MODULE_MBOT + Blockly.Tooltip.SEP + 'Permet de contrôler les moteurs droit (9) et gauche (10) en changeant la direction (↻ : AVANT, ↺ : ARRIERE) et la vitesse (de 0 à 100 %) du robot mBot.';
Blockly.Msg['ROBOTS_MBOT_STOPMOTORS_TITLE'] = '[Moteurs] arrêter le moteur %1';
Blockly.Msg['ROBOTS_MBOT_STOPMOTORS_TOOLTIP'] = IMG_MODULE_MBOT + Blockly.Tooltip.SEP + 'Permet d\'arrêter le moteur droit ou gauche du robot mBot.';
Blockly.Msg['ROBOTS_MBOT_SETRGBLED_TITLE'] = '[Carte] définir la couleur R %1 G %2 B %3 de la LED %4';
Blockly.Msg['ROBOTS_MBOT_SETRGBLED_TOOLTIP'] = IMG_MODULE_MBOT + Blockly.Tooltip.SEP + 'Permet de contrôler la couleur de la LED doite ou gauche sur la carte du robot mBot tel que les valeurs R,G,B soient comprises entre 0 et 255.';
Blockly.Msg['ROBOTS_MBOT_SETPALETTERGBLED_TITLE'] = '[Carte] définir la couleur %1 de la LED %2';
Blockly.Msg['ROBOTS_MBOT_SETPALETTERGBLED_TOOLTIP'] = IMG_MODULE_MBOT + Blockly.Tooltip.SEP + 'Permet de contrôler la couleur de la LED doite ou gauche sur la carte du robot mBot en choisissant une couleur dans la palette.';
Blockly.Msg['ROBOTS_MBOT_SETBUZZER_TITLE'] = '[Carte] contrôler le buzzer à la fréquence %1 pendant %2 (ms)';
Blockly.Msg['ROBOTS_MBOT_SETBUZZER_TOOLTIP'] = IMG_MODULE_MBOT + Blockly.Tooltip.SEP + 'Permet de définir une fréquence pendant un temps en millisecondes sur le buzzer du robot mBot.';
Blockly.Msg['ROBOTS_MBOT_PLAYMUSIC_TITLE'] = '[Carte] jouer la musique %1';
Blockly.Msg['ROBOTS_MBOT_PLAYMUSIC_TOOLTIP'] = IMG_MODULE_MBOT + Blockly.Tooltip.SEP + 'Permet de jouer une musique avec le buzzer du robot mBot.';
Blockly.Msg['ROBOTS_MBOT_GETLIGHT_TITLE'] = '[Carte] luminosité';
Blockly.Msg['ROBOTS_MBOT_GETLIGHT_TOOLTIP'] = IMG_MODULE_MBOT + Blockly.Tooltip.SEP + 'Renvoie la valeur du capteur de luminosité présent sur la carte du robot mBot.';
Blockly.Msg['ROBOTS_MBOT_GETBUTTONSTATE_TITLE'] = '[Carte] bouton est pressé ?';
Blockly.Msg['ROBOTS_MBOT_GETBUTTONSTATE_TOOLTIP'] = IMG_MODULE_MBOT + Blockly.Tooltip.SEP + 'Renvoie l\'état du bouton (HAUT) ou (BAS) de la carte du robot mBot.';
Blockly.Msg['ROBOTS_MBOT_SENDIRMESSAGE_TITLE'] = '[Carte] envoyer le message %1 par IR';
Blockly.Msg['ROBOTS_MBOT_SENDIRMESSAGE_TOOLTIP'] = IMG_MODULE_MBOT + Blockly.Tooltip.SEP + 'Permet d\'envoyer un message par Infrarouge avec le robot.';
Blockly.Msg['ROBOTS_MBOT_GETREMOTECONTROLBUTTON_TITLE'] = '[Télécommande] bouton %1 est appuyé';
Blockly.Msg['ROBOTS_MBOT_GETREMOTECONTROLBUTTON_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_REMOTE_CONTROL + Blockly.Tooltip.SEP + 'Returns vrai ou faux si l\'un des boutons de la télécommande du robot mBot est appuyé.';
// Display - LED matrix
Blockly.Msg['ROBOTS_MAKEBLOCK_MATRIX_DRAWSTRING_TITLE'] = '[Matrice de LED] afficher le texte %1 à la position x %2 y %3 sur le port %4';
Blockly.Msg['ROBOTS_MAKEBLOCK_MATRIX_DRAWSTRING_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_MATRIX16X8_DISPLAY + Blockly.Tooltip.SEP + 'Permet d\'afficher un texte sur la matrice de LED 16x8 de Makeblock. Specifier la position de 0 à 15 pour x et de 0 à 7 pour y. Brancher l\'afficheur sur un port RJ45 de 1 à 4 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_MATRIX_SHOWNUMBER_TITLE'] = '[Matrice de LED] afficher le nombre %1 sur le port %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_MATRIX_SHOWNUMBER_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_MATRIX16X8_DISPLAY + Blockly.Tooltip.SEP + 'Permet d\'afficher un nombre sur la matrice de LED 16x8 de Makeblock. Brancher l\'afficheur sur un port RJ45 de 1 à 4 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_MATRIX_SHOWCLOCK_TITLE'] = '[Matrice de LED] afficher l\'heure %1 : %2 sur le port %3';
Blockly.Msg['ROBOTS_MAKEBLOCK_MATRIX_SHOWCLOCK_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_MATRIX16X8_DISPLAY + Blockly.Tooltip.SEP + 'Permet d\'afficher l\'heure sur la matrice de LED 16x8 de Makeblock. Brancher l\'afficheur sur un port RJ45 de 1 à 4 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_MATRIX_DRAWBITMAPICON_TITLE'] = '[Matrice de LED] afficher %1 à la position x %2 y %3 sur le port %4';
Blockly.Msg['ROBOTS_MAKEBLOCK_MATRIX_DRAWBITMAPICON_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_MATRIX16X8_DISPLAY + Blockly.Tooltip.SEP + 'Permet d\'afficher un dessin sur la matrice de LED 16x8 de Makeblock. Specifier la position de 0 à 15 pour x et de 0 à 7 pour y. Brancher l\'afficheur sur un port RJ45 de 1 à 4 du robot mBot.';
// Display - Neopixel
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_DEFINE_TITLE'] = '[Neopixel] définir %1 LED sur le port %2 slot %3';
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_DEFINE_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_NEOPIXEL + Blockly.Tooltip.SEP + 'Permet de définir le nombre de LED du neopixel de Makeblock. Ce bloc doit être utilisé dans le setup. Choisir le slot (1 ou 2) sur le module neopixel. Brancher le module sur un port RJ45 de 1 à 4 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_CONTROLLED_TITLE'] = '[Neopixel] contrôler la LED %1 à R %2 G %3 B %4 sur le port %5 slot %6';
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_CONTROLLED_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_NEOPIXEL + Blockly.Tooltip.SEP + 'Permet d\'allumer une LED de couleur (R,G,B) entre 0 et 255 du neopixel de Makeblock. Choisir le slot (1 ou 2) sur le module neopixel. Brancher le module sur un port RJ45 de 1 à 4 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_PALETTECONTROLLED_TITLE'] = '[Neopixel] contrôler la LED %1 à %2 sur le port %3 slot %4';
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_PALETTECONTROLLED_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_NEOPIXEL + Blockly.Tooltip.SEP + 'Permet d\'allumer une LED du neopixel de Makeblock en choisissant une couleur dans la palette. Choisir le slot (1 ou 2) sur le module neopixel. Brancher le module sur un port RJ45 de 1 à 4 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_SETALLLEDRGB_TITLE'] = '[Neopixel] contrôler toutes les LED à R %1 G %2 B %3 sur le port %4 slot %5';
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_SETALLLEDRGB_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_NEOPIXEL + Blockly.Tooltip.SEP + 'Permet de contrôler toutes les LED du neopixel de Makeblock à la couleur choisie telle que (R,G,B) soit de 0 à 255. Choisir le slot (1 ou 2) sur le module neopixel. Brancher le module sur un port RJ45 de 1 à 4 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_SETALLLEDCOLOR_TITLE'] = '[Neopixel] contrôler toutes les LED à %1 sur le port %2 slot %3';
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_SETALLLEDCOLOR_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_NEOPIXEL + Blockly.Tooltip.SEP + 'Permet de contrôler toutes les LED du neopixel de Makeblock à la couleur choisie. Utiliser la palette pour changer la couleur. Choisir le slot (1 ou 2) sur le module neopixel. Brancher le module sur un port RJ45 de 1 à 4 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_RAINBOW_TITLE'] = '[Neopixel] Arc-en-ciel sur le port %1 slot %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_RAINBOW_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_NEOPIXEL + Blockly.Tooltip.SEP + 'Afficher le spectre des couleurs sur les LED RGB du module neopixel de Makeblock. Choisir le slot (1 ou 2) sur le module neopixel. Brancher le module sur un port RJ45 de 1 à 4 du robot mBot.';
// Display - RGB LED
Blockly.Msg['ROBOTS_MAKEBLOCK_SETRGBLED_TITLE'] = '[RGB LED] définir la couleur R %1 G %2 B %3 de la LED %4 sur le port %5';
Blockly.Msg['ROBOTS_MAKEBLOCK_SETRGBLED_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_RGB_LED + Blockly.Tooltip.SEP + 'Permet de contrôler la couleur des LED tel que les valeurs R,G,B soient comprises entre 0 et 255 avec le module à LED RGB de Makeblock. Brancher le module sur un port RJ45 de 1 à 4 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_ALL_LED'] = 'toutes';
Blockly.Msg['ROBOTS_MAKEBLOCK_SETPALETTERGBLED_TITLE'] = '[RGB LED] définir la couleur %1 de la LED %2 sur le port %3';
Blockly.Msg['ROBOTS_MAKEBLOCK_SETPALETTERGBLED_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_RGB_LED + Blockly.Tooltip.SEP + 'Permet de contrôler la couleur des LED avec la palette avec le module à LED RGB de Makeblock. Brancher le module sur un port RJ45 de 1 à 4 du robot mBot.';
// Display - 4 Digit
Blockly.Msg['ROBOTS_MAKEBLOCK_4DIGIT_SETNUMBER_TITLE'] = '[Afficheur 7-segment] afficher le nombre %1 sur le port %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_4DIGIT_SETNUMBER_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_7SEGMENT_DISPLAY + Blockly.Tooltip.SEP + 'Permet d\'afficher un nombre sur le module 7-segment de Makeblock. Brancher l\'afficheur sur un port RJ45 de 1 à 4 du robot mBot.';
// Robots - Makeblock sensors
Blockly.Msg['ROBOTS_MAKEBLOCK_ULTRASONICRANGER_TITLE'] = '[Capteur à ultrasons] distance en %1 sur le port %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_ULTRASONICRANGER_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_ULTRASONIC + Blockly.Tooltip.SEP + 'Renvoie la distance en (cm) ou (pouces) mesurée grâce au capteur à ultrasons. Brancher le capteur sur un port RJ45 de 1 à 4 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_READLINEFINDER_TITLE'] = '[Suiveur de ligne] capteur %1 au-dessus d\'une ligne noire sur le port %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_READLINEFINDER_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_LINEFINDER + Blockly.Tooltip.SEP + 'Renvoie la valeur des capteurs de ligne noire (0 ou 1) avec sensor1 (gauhe) et sensor2 (droite). Brancher le capteur sur un port RJ45 de 1 à 4 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_LEFT_1'] = 'gauche';
Blockly.Msg['ROBOTS_MAKEBLOCK_RIGHT_2'] = 'droit';
Blockly.Msg['ROBOTS_MAKEBLOCK_READPIRSENSOR_TITLE'] = '[Capteur de mouvement] état sur le port %1';
Blockly.Msg['ROBOTS_MAKEBLOCK_READPIRSENSOR_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_PIR_MOTION + Blockly.Tooltip.SEP + 'Renvoie l\'état du capteur de mouvement de Makeblock. Renvoie 1 si le mouvement est détécté, 0 sinon. Brancher le capteur sur un port RJ45 de 1 à 4 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_WATERPROOFTEMPERATURE_TITLE'] = '[Capteur étanche DS18B20] température sur le port %1 slot %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_WATERPROOFTEMPERATURE_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_WATERPROOF_TEMPERATURE + Blockly.Tooltip.SEP + 'Permet de mesurer la température avec le capteur étanche ds18b20 de Makeblock. Brancher le capteur sur un port RJ45 de 1 à 4 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETLIGHT_TITLE'] = '[Capteur de lumière] intensité sur le port %1';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETLIGHT_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_LIGHT + Blockly.Tooltip.SEP + 'Permet de lire le niveau de lumière avec le capteur de lumière Makeblock. Brancher le capteur sur un port RJ45 de 1 à 2 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETCOLOR_TITLE'] = '[Capteur de couleur] %1 sur le port %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETCOLOR_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_COLOR + Blockly.Tooltip.SEP + 'Permet de lire le niveau d\'une des trois couleurs primaires avec le capteur de couleur Makeblock. Il est possible d\'obtenir la couleur mesurée, la correspondance est la suivante : 0 (Blanc), 1 (Rosé), 2 (Rouge), 3 (Orange), 4 (Jaune), 5 (Vert), 5 (Cyan), 6 (Bleu), 7 (Violet), 8 (Noir), 9 (Or). Brancher le capteur sur un port RJ45 de 1 à 4 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_COLOR'] = 'couleur';
Blockly.Msg['ROBOTS_MAKEBLOCK_RED'] = 'niveau de rouge';
Blockly.Msg['ROBOTS_MAKEBLOCK_GREEN'] = 'niveau de vert';
Blockly.Msg['ROBOTS_MAKEBLOCK_BLUE'] = 'niveau de bleu';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETSOUND_TITLE'] = '[Capteur de son] intensité sur le port %1';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETSOUND_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_SOUND + Blockly.Tooltip.SEP + 'Permet de lire le niveau sonore avec le capteur de son Makeblock. Brancher le capteur sur un port RJ45 de 1 à 2 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETGAS_TITLE'] = '[Capteur de gas MQ2] %1 sur le port %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETGAS_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_GAS + Blockly.Tooltip.SEP + 'Permet de lire la quantité de gas avec le capteur de gas MQ2 de Makeblock. Il est possible d\'obtenir l\'état du capteur si la valeur mesurée est au dessus (ou en dessous) d\'un certain seuil. Utiliser le potentiomètre sur le module afin de modifier la concentration seuil. Brancher le capteur sur un port RJ45 de 1 ou 2 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_GAS_DIGITAL'] = 'état';
Blockly.Msg['ROBOTS_MAKEBLOCK_GAS_ANALOG'] = 'valeur';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETFLAME_TITLE'] = '[Capteur de flamme] %1 sur le port %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETFLAME_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_FLAME + Blockly.Tooltip.SEP + 'Permet de détecter une flamme avec le capteur de flamme de Makeblock. Il est possible d\'obtenir l\'état du capteur si la valeur mesurée est au dessus (ou en dessous) d\'un certain seuil. Utiliser le potentiomètre sur le module afin de modifier le seuil de détection d\'une flamme. Ce capteur détecte dans l\'IR avec des longueurs d\'onde comprises entre 700nm et 1200nm. Brancher le capteur sur un port RJ45 de 1 ou 2 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_FLAME_DIGITAL'] = 'état';
Blockly.Msg['ROBOTS_MAKEBLOCK_FLAME_ANALOG'] = 'valeur';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETCOMPASSDATA_TITLE'] = '[Compas] %1 sur le port %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETCOMPASSDATA_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_COMPASS + Blockly.Tooltip.SEP + 'Permet de mesurer la valeur selon les axes ainsi que l\'angle avec le compass de Makeblock. Brancher le capteur sur un port RJ45 de 1 ou 4 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_COMPASS_X'] = 'axe X';
Blockly.Msg['ROBOTS_MAKEBLOCK_COMPASS_Y'] = 'axe Y';
Blockly.Msg['ROBOTS_MAKEBLOCK_COMPASS_Z'] = 'axe Z';
Blockly.Msg['ROBOTS_MAKEBLOCK_COMPASS_ANGLE'] = 'angle (°)';
// Robots - Makeblock actuators
Blockly.Msg['ROBOTS_MAKEBLOCK_SETSERVOANGLE_TITLE'] = '[Servomoteur] contrôler l\'angle à %1 sur le port %2 slot %3';
Blockly.Msg['ROBOTS_MAKEBLOCK_SETSERVOANGLE_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_SERVO + Blockly.Tooltip.SEP + 'Permet de contrôler l\'angle (de 0 à 180) d\'un servomoteur connecté à un adaptateur RJ45 de Makeblock. Choisir le slot (1 ou 2) de l\'adaptateur RJ45. Brancher le module sur un port RJ45 de 1 à 4 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_CONTROLMINIFAN_TITLE'] = '[Ventilateur] activer %1 sur le port %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_CONTROLMINIFAN_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_MINI_FAN + Blockly.Tooltip.SEP + 'Permet d\'activer ou désactiver le ventilateur de Makeblock. Brancher le module sur un port RJ45 de 1 à 4 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_CLOCKWISE'] = 'dans le sens horaire';
Blockly.Msg['ROBOTS_MAKEBLOCK_ANTICLOCKWISE'] = 'dans le sens anti-horaire';
Blockly.Msg['ROBOTS_MAKEBLOCK_STOP'] = 'à l\'arrêt';
// Robots - Makeblock input/output
Blockly.Msg['ROBOTS_MAKEBLOCK_GETSWITCHSTATE_TITLE'] = '[Interrupteur Fin de course] état sur le port %1 slot %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETSWITCHSTATE_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_SWITCH + Blockly.Tooltip.SEP + 'Renvoie l\'état de l\'interrupteur makeBlock connecté à l\'adaptateur RJ45. Choisir le slot (1 ou 2) de l\'adaptateur. Brancher l\'adaptateur sur un port RJ45 de 1 à 4.';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETJOYSTICKAXIS_TITLE'] = '[Joystick] valeur suivant l\'axe %1 sur le port %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETJOYSTICKAXIS_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_JOYSTICK + Blockly.Tooltip.SEP + 'Permet de lire la valeur de l\'axe X ou Y avec le module joystick de Makeblock. Brancher le capteur sur un port RJ45 de 1 à 2 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETPOTENTIOMETER_TITLE'] = '[Potentiomètre] valeur sur le port %1';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETPOTENTIOMETER_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_POTENTIOMETER + Blockly.Tooltip.SEP + 'Permet de lire la valeur du potentiomètre Makeblock. Brancher le capteur sur un port RJ45 de 1 à 2 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETPRESSEDBUTTON_TITLE'] = '[Module 4 boutons] bouton sur le port %1';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETPRESSEDBUTTON_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_4_BUTTONS + Blockly.Tooltip.SEP + 'Renvoie le bouton pressé (KEY_1, KEY_2, KEY_3 ou KEY_4) du module 4 boutons de Makeblock. Brancher le capteur sur un port RJ45 de 1 à 2 du robot mBot.';
Blockly.Msg['ROBOTS_MAKEBLOCK_READTOUCHSENSOR_TITLE'] = '[Capteur tactile] état sur le port %1';
Blockly.Msg['ROBOTS_MAKEBLOCK_READTOUCHSENSOR_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_TOUCH_SENSOR + Blockly.Tooltip.SEP + 'Renvoie l\'état du capteur tactile de Makeblock. Brancher le capteur sur un port RJ45 de 1 à 4 du robot mBot.';