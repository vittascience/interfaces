/**
 * @fileoverview English messages for mBot. (EN)
 */
'use strict';
//COMMENT - Arduino
Blockly.Msg['CALL_EXPRESSION_COMMENT_TITLE'] = "comentario %1";
Blockly.Msg['CALL_EXPRESSION_COMMENT_TOOLTIP'] = "Permite agregar un comentario en el código.";
// Display - MeMCore
Blockly.Msg['MCORE_CONTROL_BUILTIN_LED_TITLE'] = '[MeMCore] pone el LED azul incorporado en el estado %1';
Blockly.Msg['MCORE_CONTROL_BUILTIN_LED_TOOLTIP'] = 'Activar y desactivar el LED azul de la placa MeMCore';
// Input/Output - MeMCore
Blockly.Msg['IO_WAIT_TITLE'] = 'espera %1 %2';
Blockly.Msg['IO_WAIT_TOOLTIP'] = 'Detener la ejecución del código (duración en segundos o milisegundos)';
Blockly.Msg['IO_WAIT_SECOND'] = 'segundo(s)';
Blockly.Msg['IO_WAIT_MILLISECOND'] = 'milisegundo(s)';
Blockly.Msg['IO_WAIT_MICROSECOND'] = 'microsegundo(s)';
Blockly.Msg['IO_WAIT_UNTIL_TITLE'] = 'espera hasta %1';
Blockly.Msg['IO_WAIT_UNTIL_TOOLTIP'] = 'Detener la ejecución del código hasta que se cumpla la condición';
Blockly.Msg['IO_INITCHRONOMETER_TITLE'] = 'inicializar el cronómetro';
Blockly.Msg['IO_INITCHRONOMETER_TOOLTIP'] = 'Permite inicializar el cronómetro (en segundos)';
Blockly.Msg['IO_GETCHRONOMETER_TITLE'] = 'Obtener cronómetro en %1';
Blockly.Msg['IO_GETCHRONOMETER_TOOLTIP'] = 'Devuelve el valor del cronómetro desde la inicialización en segundos o milisegundos';
// Input/Output - Pins
Blockly.Msg['IO_DIGITAL_SIGNAL_TITLE'] = '%1';
Blockly.Msg['IO_DIGITAL_SIGNAL_HIGH'] = 'ALTO (1)';
Blockly.Msg['IO_DIGITAL_SIGNAL_LOW'] = 'BAJO (0)';
Blockly.Msg['IO_DIGITAL_SIGNAL_TOOLTIP'] = 'Devuelve un valor booleano (HIGH o LOW)';
Blockly.Msg['IO_READDIGITALPIN_TITLE'] = 'leer pin digital %1';
Blockly.Msg['IO_READDIGITALPIN_TOOLTIP'] = 'Este bloque lee una de las entradas digitales y devuelve el valor';
Blockly.Msg['IO_WRITEDIGITALPIN_TITLE'] = 'escribir en el pin digital %1 estado %2';
Blockly.Msg['IO_WRITEDIGITALPIN_TOOLTIP'] = 'Habilitar para escribir el estado en el pin digital';
Blockly.Msg['IO_WRITEANALOGPIN_TITLE'] = 'Escribir en el pin analógico %1 valor %2';
Blockly.Msg['IO_WRITEANALOGPIN_TOOLTIP'] = 'Enable to write on analog pin the value (0-255).';
Blockly.Msg['IO_READANALOGPIN_TITLE'] = 'read analog pin %1';
Blockly.Msg['IO_READANALOGPIN_TOOLTIP'] = 'Habilitar para leer el valor analógico de los pines (0-1023)';
Blockly.Msg['IO_SETPWM_TITLE'] = 'Aplicar señal pwm con ciclo de trabajo %1 (%) en el pin %2';
Blockly.Msg['IO_SETPWM_TOOLTIP'] = 'Aplicar una señal PWM en el pin pwm (~) con ajuste de ciclo de trabajo (en %). Para los pines D3, D9, D10 y D11, la frecuencia de la señal es de 490 Hz (período de 2,04 ms). Para los pines D5 y D6, es de 980 Hz (período de 1,02 ms)';
Blockly.Msg['IO_READPULSEIN_TITLE'] = 'leer pulso de estado %1 en el pin %2';
Blockly.Msg['IO_READPULSEIN_TOOLTIP'] = 'Devuelve la duración del pulso en (en μs). Elección del estado a medir (HIGH o LOW). Funciona con pulsos de 10 μs a 3 min de duración';
Blockly.Msg['IO_ATTACH_INTERRUPT_TITLE'] = 'en %1 detectado en el pin %2 entonces';
Blockly.Msg['IO_ATTACH_INTERRUPT_TOOLTIP'] = 'Habilitar para establecer el evento en los pines 2 o 3. Este bloque ejecuta instrucciones en cualquier momento en cuanto se detecta un flanco de subida/bajada o ambos en los pines 2 o 3.';
Blockly.Msg['IO_RISING_EDGE'] = 'flanco de subida';
Blockly.Msg['IO_FALLING_EDGE'] = 'flanco descendente';
Blockly.Msg['IO_BOTH_EDGE'] = 'cambio';
// Communication - Serial connection
Blockly.Msg['COMMUNICATION_SERIAL_BEGIN_TITLE'] = 'iniciar la comunicación serie a %1 baudios';
Blockly.Msg['COMMUNICATION_SERIAL_BEGIN_TOOLTIP'] = 'Permite iniciar la comunicación serie a una velocidad de transmisión de datos (en baudios).';
Blockly.Msg['COMMUNICATION_SERIAL_WRITE_TITLE'] = 'escribir en el puerto serie %1';
Blockly.Msg['COMMUNICATION_SERIAL_WRITE_TOOLTIP'] = 'Este bloque se utiliza para escribir cualquier tipo de datos en el puerto serie. Se mostrarán en la consola cuando el programa se esté ejecutando';
Blockly.Msg['COMMUNICATION_SERIAL_WRITE_WITH'] = 'con';
Blockly.Msg['COMMUNICATION_SERIAL_WRITE_NEWLINES'] = 'newline(s)';
Blockly.Msg['COMMUNICATION_SERIAL_ONDATARECEIVED_TITLE'] = 'sobre datos en serie recibidos en %1 entonces';
Blockly.Msg['COMMUNICATION_SERIAL_ONDATARECEIVED_TOOLTIP'] = 'Permite ejecutar instrucciones si se reciben datos por el puerto serie en la variable \'serialData\'';
Blockly.Msg['COMMUNICATION_WRITEGRAPH_TITLE'] = 'mostrar en el gráfico';
Blockly.Msg['COMMUNICATION_WRITEGRAPH_TOOLTIP'] = 'Este bloque permite escribir datos (digitales) que serán visibles en el plotter. Se puede utilizar con uno o más bloques en formato "Nombre" y "Datos".';
Blockly.Msg['COMMUNICATION_DATA'] = 'Datos';
Blockly.Msg['COMMUNICATION_PRINT_DATAS_TITLE'] = 'Nombre %1 Datos %2';
Blockly.Msg['COMMUNICATION_PRINT_DATAS_TOOLTIP'] = 'Este bloque debe utilizarse en el bloque "Escribir en gráfico". Debe contener el nombre del valor (de texto) a mostrar y el valor en cuestión';
Blockly.Msg['COMMUNICATION_COMPUTER_PLAYNOTE_TITLE'] = 'reproducir música %1 en el puerto serie';
Blockly.Msg['COMMUNICATION_COMPUTER_PLAYNOTE_TOOLTIP'] = 'Reproducir la nota seleccionada hasta la ejecución del bloque "Detener la música"';
Blockly.Msg['NOTE_C'] = 'Do';
Blockly.Msg['NOTE_C_SHARP'] = 'Do#';
Blockly.Msg['NOTE_D'] = 'Re';
Blockly.Msg['NOTE_D_SHARP'] = 'Re#';
Blockly.Msg['NOTE_E'] = 'Mi';
Blockly.Msg['NOTE_F'] = 'Fa';
Blockly.Msg['NOTE_F_SHARP'] = 'Fa#';
Blockly.Msg['NOTE_G'] = 'Sol';
Blockly.Msg['NOTE_G_SHARP'] = 'Sol#';
Blockly.Msg['NOTE_A'] = 'La';
Blockly.Msg['NOTE_A_SHARP'] = 'La#';
Blockly.Msg['NOTE_B'] = 'Si';
Blockly.Msg['COMMUNICATION_COMPUTER_SETFREQUENCY_TITLE'] = 'reproduce la frecuencia %1 (Hz) en el ordenador';
Blockly.Msg['COMMUNICATION_COMPUTER_SETFREQUENCY_TOOLTIP'] = 'Este bloque permite reproducir una frecuencia determinada en el ordenador';
Blockly.Msg['COMMUNICATION_COMPUTER_STOPMUSIC_TITLE'] = 'detener la música del puerto serie';
Blockly.Msg['COMMUNICATION_COMPUTER_STOPMUSIC_TOOLTIP'] = 'detener la nota actual del puerto serie';
// Robots - mBot basic modules
Blockly.Msg['ROBOTS_MBOT_GO_TITLE'] = '[Motores] controlan el robot %1 velocidad %2 (%)';
Blockly.Msg['ROBOTS_MBOT_GO_FORWARD'] = 'hacia adelante';
Blockly.Msg['ROBOTS_MBOT_GO_REVERSE'] = 'marcha atrás';
Blockly.Msg['ROBOTS_MBOT_GO_TOOLTIP'] = IMG_MODULE_MBOT + Blockly.Tooltip.SEP + 'Permite controlar la marcha del coche (ADELANTE/INVERSO) y la velocidad del motor (de 0 a 100 %) del robot mBot';
Blockly.Msg['ROBOTS_MBOT_CONTROLMOTOR_TITLE'] = '[Motores] controlar motor %1 dirección %2 velocidad %3 (%)';
Blockly.Msg['ROBOTS_MBOT_RIGHT'] = 'derecha';
Blockly.Msg['ROBOTS_MBOT_LEFT'] = 'izquierda';
Blockly.Msg['ROBOTS_MBOT_RIGHT&LEFT'] = 'derecha e izquierda';
Blockly.Msg['ROBOTS_MBOT_RIGHT_F'] = 'derecha';
Blockly.Msg['ROBOTS_MBOT_LEFT_F'] = 'izquierda';
Blockly.Msg['ROBOTS_MBOT_RIGHT&LEFT_F'] = 'derecha e izquierda';
Blockly.Msg['ROBOTS_MBOT_CONTROLMOTOR_TOOLTIP'] = IMG_MODULE_MBOT + Blockly.Tooltip.SEP + 'Permite controlar el motor derecho (9) y el motor izquierdo (10) cambiando la dirección (↻ : FOWARD, ↺ : REVERSE) o la velocidad (de 0 a 100 %) del robot mBot';
Blockly.Msg['ROBOTS_MBOT_STOPMOTORS_TITLE'] = '[Motores] parar motor %1';
Blockly.Msg['ROBOTS_MBOT_STOPMOTORS_TOOLTIP'] = IMG_MODULE_MBOT + Blockly.Tooltip.SEP + 'Habilitar para detener el motor derecho, el izquierdo o ambos del robot mBot';
Blockly.Msg['ROBOTS_MBOT_SETRGBLED_TITLE'] = '[mCore] establecer el color R %1 G %2 B %3 en el LED %4';
Blockly.Msg['ROBOTS_MBOT_SETRGBLED_TOOLTIP'] = IMG_MODULE_MBOT + Blockly.Tooltip.SEP + 'Habilitar para controlar el color del LED RGB en la placa del robot mBot como valor (R,G,B) es de 0 a 255';
Blockly.Msg['ROBOTS_MBOT_SETPALETTERGBLED_TITLE'] = '[mCore] establece el color %1 en el LED %2';
Blockly.Msg['ROBOTS_MBOT_SETPALETTERGBLED_TOOLTIP'] = IMG_MODULE_MBOT + Blockly.Tooltip.SEP + 'Permite controlar el color del LED RGB en la placa del robot mBot eligiendo el color en la paleta';
Blockly.Msg['ROBOTS_MBOT_SETBUZZER_TITLE'] = '[mCore] establecer zumbador a la frecuencia %1 durante %2 (ms)';
Blockly.Msg['ROBOTS_MBOT_SETBUZZER_TOOLTIP'] = IMG_MODULE_MBOT + Blockly.Tooltip.SEP + 'Permite controlar el zumbido del mBot a cualquier frecuencia durante cualquier tiempo en milisegundos';
Blockly.Msg['ROBOTS_MBOT_PLAYMUSIC_TITLE'] = '[mCore] reproducir música %1';
Blockly.Msg['ROBOTS_MBOT_PLAYMUSIC_TOOLTIP'] = IMG_MODULE_MBOT + Blockly.Tooltip.SEP + 'Habilitar para reproducir música en el zumbido del mBot';
Blockly.Msg['ROBOTS_MBOT_GETLIGHT_TITLE'] = '[mCore] nivel de luz';
Blockly.Msg['ROBOTS_MBOT_GETLIGHT_TOOLTIP'] = IMG_MODULE_MBOT + Blockly.Tooltip.SEP + 'Devuelve el nivel de luz del sensor del robot del mBot';
Blockly.Msg['ROBOTS_MBOT_GETBUTTONSTATE_TITLE'] = '¿El botón [mCore] está pulsado?';
Blockly.Msg['ROBOTS_MBOT_GETBUTTONSTATE_TOOLTIP'] = IMG_MODULE_MBOT + Blockly.Tooltip.SEP + 'Devuelve el estado del botón del robot mBot';
Blockly.Msg['ROBOTS_MBOT_SENDIRMESSAGE_TITLE'] = '[mCore] enviar mensaje %1 por IR';
Blockly.Msg['ROBOTS_MBOT_SENDIRMESSAGE_TOOLTIP'] = IMG_MODULE_MBOT + Blockly.Tooltip.SEP + 'Enviar mensaje por infrarrojos con el robot';
Blockly.Msg['ROBOTS_MBOT_GETREMOTECONTROLBUTTON_TITLE'] = '[Control remoto] botón %1 está presionado';
Blockly.Msg['ROBOTS_MBOT_GETREMOTECONTROLBUTTON_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_REMOTE_CONTROL + Blockly.Tooltip.SEP + 'Devuelve verdadero o falso si se pulsa algún botón del mando a distancia mBot';
// Display - LED matrix
Blockly.Msg['ROBOTS_MAKEBLOCK_MATRIX_DRAWSTRING_TITLE'] = '[Matriz LED] mostrar texto %1 en la posición x %2 y %3 en el puerto %4';
Blockly.Msg['ROBOTS_MAKEBLOCK_MATRIX_DRAWSTRING_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_MATRIX16X8_DISPLAY + Blockly.Tooltip.SEP + 'Permite dibujar una cadena en la matriz de LEDs 16x8 de Makeblock. La posición especificada tiene un rango x (0-15) e y (0-7). Conecte la pantalla en el puerto RJ45 de 1 a 4';
Blockly.Msg['ROBOTS_MAKEBLOCK_MATRIX_SHOWNUMBER_TITLE'] = '[Matriz LED] mostrar número %1 en el puerto %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_MATRIX_SHOWNUMBER_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_MATRIX16X8_DISPLAY + Blockly.Tooltip.SEP + 'Permite mostrar el número en la matriz LED 16x8 de Makeblock. Conecta la pantalla en el puerto RJ45 del 1 al 4';
Blockly.Msg['ROBOTS_MAKEBLOCK_MATRIX_SHOWCLOCK_TITLE'] = '[Matriz LED] mostrar reloj %1 : %2 en puerto %3';
Blockly.Msg['ROBOTS_MAKEBLOCK_MATRIX_SHOWCLOCK_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_MATRIX16X8_DISPLAY + Blockly.Tooltip.SEP + 'Permite mostrar el reloj en la matriz LED 16x8 de Makeblock. Conecte la pantalla en el puerto RJ45 del 1 al 4';
Blockly.Msg['ROBOTS_MAKEBLOCK_MATRIX_DRAWBITMAPICON_TITLE'] = '[Matriz LED] mostrar dibujo %1 en la posición x %2 y %3 en el puerto %4';
Blockly.Msg['ROBOTS_MAKEBLOCK_MATRIX_DRAWBITMAPICON_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_MATRIX16X8_DISPLAY + Blockly.Tooltip.SEP + 'Permite mostrar el dibujo en la matriz LED 16x8 de Makeblock. La posición especificada tiene un rango x (0-15) e y (0-7). Conecte la pantalla en el puerto RJ45 de 1 a 4';
// Display - Neopixel
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_DEFINE_TITLE'] = '[Neopixel] define %1 LED en el puerto %2 ranura %3';
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_DEFINE_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_NEOPIXEL + Blockly.Tooltip.SEP + 'Permite definir el número de LED del neopixel de Makeblock. Este bloque tiene que ser utilizado en la configuración. Elija la ranura (1 o 2) del adaptador RJ45. Conecte el módulo en el puerto RJ45 de 1 a 4';
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_CONTROLLED_TITLE'] = '[Neopixel] establece el LED %1 en R %2 G %3 B %4 en el puerto %5 ranura %6';
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_CONTROLLED_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_NEOPIXEL + Blockly.Tooltip.SEP + 'Habilitar la configuración del color del LED como (R,G,B) de 0 a 255 en el neopixel de Makeblock. Elija la ranura (1 o 2) del adaptador RJ45. Conecte el módulo en el puerto RJ45 de 1 a 4';
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_PALETTECONTROLLED_TITLE'] = '[Neopixel] establece el LED %1 a %2 en el puerto %3 ranura %4';
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_PALETTECONTROLLED_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_NEOPIXEL + Blockly.Tooltip.SEP + 'Habilitar la configuración del color del LED eligiendo en la paleta del neopixel de Makeblock. Elija la ranura (1 o 2) del adaptador RJ45. Conecte el módulo en el puerto RJ45 de 1 a 4';
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_SETALLLEDRGB_TITLE'] = '[Neopixel] establece todos los LED al color R %1 G %2 B %3 en el puerto %4 ranura %5';
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_SETALLLEDRGB_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_NEOPIXEL + Blockly.Tooltip.SEP + 'Permite controlar todos los LED del módulo Makeblock neopixel al valor de color elegido como (R,G,B) de 0 a 255. Elección de la ranura (1 o 2) del adaptador RJ45. Conecte el módulo en el puerto RJ45 de 1 a 4';
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_SETALLLEDCOLOR_TITLE'] = '[Neopixel] establece todos los LED al color %1 en el puerto %2 ranura %3';
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_SETALLLEDCOLOR_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_NEOPIXEL + Blockly.Tooltip.SEP + 'Permite controlar todos los LED del módulo Makeblock neopixel al valor de color elegido. Elección de la ranura (1 o 2) del adaptador RJ45. Conecte el módulo en el puerto RJ45 del 1 al 4';
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_RAINBOW_TITLE'] = '[Neopixel] establece un arco iris en el puerto %1 ranura %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_NEOPIXEL_RAINBOW_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_NEOPIXEL + Blockly.Tooltip.SEP + 'Permite mostrar un arco iris en el módulo Makeblock neopixel, establece el pin y el número de LED. Elija la ranura (1 o 2) del adaptador RJ45. Conecte el módulo en el puerto RJ45 de 1 a 4';
// Display - RGB LED
Blockly.Msg['ROBOTS_MAKEBLOCK_SETRGBLED_TITLE'] = '[LED RGB] establece el color R %1 G %2 B %3 en el LED %4 del puerto %5';
Blockly.Msg['ROBOTS_MAKEBLOCK_SETRGBLED_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_RGB_LED + Blockly.Tooltip.SEP + 'Permite mostrar el color establecido como valor (R,G,B) de 0 a 255 en el LED RGB de Makeblock. Conecte la pantalla en el puerto RJ45 de 1 a 4';
Blockly.Msg['ROBOTS_MAKEBLOCK_ALL_LED'] = 'all';
Blockly.Msg['ROBOTS_MAKEBLOCK_SETPALETTERGBLED_TITLE'] = '[LED RGB] establece el color %1 en el LED %2 del puerto %3';
Blockly.Msg['ROBOTS_MAKEBLOCK_SETPALETTERGBLED_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_RGB_LED + Blockly.Tooltip.SEP + 'Permite mostrar el color establecido como (R,G,B) eligiendo en la paleta en el LED RGB de Makeblock. Conecta la pantalla en el puerto RJ45 de 1 a 4';
// Display - 4 Digit
Blockly.Msg['ROBOTS_MAKEBLOCK_4DIGIT_SETNUMBER_TITLE'] = '[Pantalla de 7 segmentos] mostrar %1 en el puerto %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_4DIGIT_SETNUMBER_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_7SEGMENT_DISPLAY + Blockly.Tooltip.SEP + 'Permite mostrar el número en la pantalla de 7 segmentos de Makeblock. Conecta el display en el puerto RJ45 del 1 al 4';
// Robots - Makeblock sensors
Blockly.Msg['ROBOTS_MAKEBLOCK_ULTRASONICRANGER_TITLE'] = '[Sensor Ultrasónico] distancia en %1 en el puerto %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_ULTRASONICRANGER_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_ULTRASONIC + Blockly.Tooltip.SEP + 'Devuelve la medida de la distancia (en centímetros) del sensor ultrasónico de Makeblock. Conecte el sensor en el puerto RJ45 de 1 a 4';
Blockly.Msg['ROBOTS_MAKEBLOCK_READLINEFINDER_TITLE'] = '[Line Follower] sensor %1 dentro de la línea negra en el puerto %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_READLINEFINDER_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_LINEFINDER + Blockly.Tooltip.SEP + 'Devuelve el estado del módulo seguidor de línea (0 ó 1) del sensor1 (izquierda) o del sensor2 (derecha). Conecte el sensor en el puerto RJ45 de 1 a 4';
Blockly.Msg['ROBOTS_MAKEBLOCK_LEFT_1'] = 'izquierda';
Blockly.Msg['ROBOTS_MAKEBLOCK_RIGHT_2'] = 'derecha';
Blockly.Msg['ROBOTS_MAKEBLOCK_READPIRSENSOR_TITLE'] = '[Sensor de movimiento PIR] estado en el puerto %1';
Blockly.Msg['ROBOTS_MAKEBLOCK_READPIRSENSOR_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_PIR_MOTION + Blockly.Tooltip.SEP + 'Devuelve el estado (1 si se detecta, 0 si no) del sensor de movimiento PIR de Makeblock. Conecte el sensor en el puerto RJ45 de 1 a 4';
Blockly.Msg['ROBOTS_MAKEBLOCK_WATERPROOFTEMPERATURE_TITLE'] = '[Sensor DS18B20] temperatura en puerto %1 ranura %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_WATERPROOFTEMPERATURE_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_WATERPROOF_TEMPERATURE + Blockly.Tooltip.SEP + 'Permite leer la medida de la temperatura con el sensor Makeblock waterproof ds18b20. Elección de la ranura (1 o 2) del adaptador RJ45. Conecte el sensor en el puerto RJ45 del 1 al 4';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETLIGHT_TITLE'] = '[Sensor de luz] nivel de luz en el puerto %1';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETLIGHT_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_LIGHT + Blockly.Tooltip.SEP + 'Permite leer el nivel de luz con el sensor de luz de Makeblock. Conecte el sensor en el puerto RJ45 de 1 a 2';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETCOLOR_TITLE'] = '[Sensor de color] %1 en el puerto %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETCOLOR_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_COLOR + Blockly.Tooltip.SEP + 'Permite leer el nivel de uno de los tres colores primarios con el sensor de color de Makeblock. También devuelve el color medido como 0 (Blanco), 1 (Pinke), 2 (Rojo), 3 (Naranja), 4 (Amarillo), 5 (Verde), 5 (Cian), 6 (Azul), 7 (Púrpura), 8 (Negro), 9 (Oro). Conecte el sensor en el puerto RJ45 del 1 al 4';
Blockly.Msg['ROBOTS_MAKEBLOCK_COLOR'] = 'color';
Blockly.Msg['ROBOTS_MAKEBLOCK_RED'] = 'nivel de rojo';
Blockly.Msg['ROBOTS_MAKEBLOCK_GREEN'] = 'nivel de verde';
Blockly.Msg['ROBOTS_MAKEBLOCK_BLUE'] = 'nivel de azul';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETSOUND_TITLE'] = 'nivel de sonido [del sensor de sonido] en el puerto %1';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETSOUND_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_SOUND + Blockly.Tooltip.SEP + 'Permite leer el nivel de sonido con el sensor de sonido de Makeblock. Conecte el sensor en el puerto RJ45 de 1 a 2';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETGAS_TITLE'] = '[Sensor de gas MQ2] %1 en el puerto %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETGAS_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_GAS + Blockly.Tooltip.SEP + 'Permite leer la cantidad de gas con el sensor de gas MQ2 de Makeblock. Es posible obtener un valor de estado como 0 (sin gas) o 1 (gas). Utilice el potenciómetro del módulo para ajustar el umbral de concentración adecuado. Conecte el sensor en el puerto RJ45 1 o 2';
Blockly.Msg['ROBOTS_MAKEBLOCK_GAS_DIGITAL'] = 'estado';
Blockly.Msg['ROBOTS_MAKEBLOCK_GAS_ANALOG'] = 'valor';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETFLAME_TITLE'] = '[Sensor de llama] %1 en el puerto %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETFLAME_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_FLAME + Blockly.Tooltip.SEP + 'Permite leer la llama detectable con el sensor de llama Makeblock. Es posible obtener un valor de estado como 0 (sin llama) o 1 (llama). Utilice el potenciómetro del módulo para ajustar el umbral de límite de llama adecuado. Este sensor detecta la luz infrarroja con una longitud de onda de 700 nm a 1200 nm. Conecte el sensor en el puerto RJ45 1 o 2';
Blockly.Msg['ROBOTS_MAKEBLOCK_FLAME_DIGITAL'] = 'estado';
Blockly.Msg['ROBOTS_MAKEBLOCK_FLAME_ANALOG'] = 'valor';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETCOMPASSDATA_TITLE'] = '[Compas] %1 en el puerto %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETCOMPASSDATA_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_COMPASS + Blockly.Tooltip.SEP + 'Permite leer los datos de la brújula de Makeblock. Brancher le capteur sur un port RJ45 de 1 ou 4 du robot mBot';
Blockly.Msg['ROBOTS_MAKEBLOCK_COMPASS_X'] = 'Eje X';
Blockly.Msg['ROBOTS_MAKEBLOCK_COMPASS_Y'] = 'Eje Y';
Blockly.Msg['ROBOTS_MAKEBLOCK_COMPASS_Z'] = 'eje Z';
Blockly.Msg['ROBOTS_MAKEBLOCK_COMPASS_ANGLE'] = 'ángulo (°)';
// Robots - Makeblock actuators
Blockly.Msg['ROBOTS_MAKEBLOCK_SETSERVOANGLE_TITLE'] = '[Servomotor] fija el ángulo a %1 en el pin %2 ranura %3';
Blockly.Msg['ROBOTS_MAKEBLOCK_SETSERVOANGLE_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_SERVO + Blockly.Tooltip.SEP + 'Permite controlar el ángulo del servomotor (de 0 a 180) conectado a un adaptador RJ45 de Makeblock. Elija la ranura (1 o 2) del adaptador RJ45. Conecte el módulo en el puerto RJ45 de 1 a 4';
Blockly.Msg['ROBOTS_MAKEBLOCK_CONTROLMINIFAN_TITLE'] = '[Miniventilador] establece la dirección en %1 en el puerto %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_CONTROLMINIFAN_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_MINI_FAN + Blockly.Tooltip.SEP + 'Habilitar para controlar el mini ventilador de Makeblock';
Blockly.Msg['ROBOTS_MAKEBLOCK_CLOCKWISE'] = 'en el sentido de las agujas del reloj';
Blockly.Msg['ROBOTS_MAKEBLOCK_ANTICLOCKWISE'] = 'en sentido contrario a las agujas del reloj';
Blockly.Msg['ROBOTS_MAKEBLOCK_STOP'] = 'stop';
// Robots - Makeblock input/output
Blockly.Msg['ROBOTS_MAKEBLOCK_GETSWITCHSTATE_TITLE'] = '[End-running Switch] state on port %1 slot %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETSWITCHSTATE_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_SWITCH + Blockly.Tooltip.SEP + 'Permite leer el estado del módulo de interruptor Makeblock. Elija la ranura (1 o 2) del adaptador RJ45. Conecte el sensor en el puerto RJ45 del 1 al 4';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETJOYSTICKAXIS_TITLE'] = '[Joystick] valor del eje %1 en el puerto %2';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETJOYSTICKAXIS_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_JOYSTICK + Blockly.Tooltip.SEP + 'Permite leer el valor del eje (X o Y) del módulo de joystick Makeblock. Conecte el sensor en el puerto RJ45 de 1 a 2';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETPOTENTIOMETER_TITLE'] = '[Potenciómetro] valor en el puerto %1';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETPOTENTIOMETER_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_POTENTIOMETER + Blockly.Tooltip.SEP + 'Permite leer el valor del potenciómetro del módulo Makeblock. Conecte el sensor en el puerto RJ45 de 1 a 2';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETPRESSEDBUTTON_TITLE'] = '[módulo 4 botones] botón pulsado en el puerto %1';
Blockly.Msg['ROBOTS_MAKEBLOCK_GETPRESSEDBUTTON_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_4_BUTTONS + Blockly.Tooltip.SEP + 'Devuelve el botón pulsado del módulo de 4 botones de Makeblock. Conecta el módulo en el puerto RJ45 de 1 a 2';
Blockly.Msg['ROBOTS_MAKEBLOCK_READTOUCHSENSOR_TITLE'] = '[Sensor táctil] estado en el puerto %1';
Blockly.Msg['ROBOTS_MAKEBLOCK_READTOUCHSENSOR_TOOLTIP'] = IMG_MODULE_MAKEBLOCK_TOUCH_SENSOR + Blockly.Tooltip.SEP + 'Devuelve el estado del sensor táctil de Makeblock. Conecta el módulo en el puerto RJ45 de 1 a 4';