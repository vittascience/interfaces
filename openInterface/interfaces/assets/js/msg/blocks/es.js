/**
* @fileoverview Mensajes comunes en español para interfaces. (ES)
*/

'use strict';

Blockly.Msg["VARIABLES_DEFAULT_NAME"] = "variable";
Blockly.Msg["UNNAMED_KEY"] = "sin nombre";
Blockly.Msg["TODAY"] = "hoy";
Blockly.Msg["ORDINAL_NUMBER_SUFFIX"] = "";

// Espacio de trabajo.
Blockly.Msg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Decir algo…";
Blockly.Msg["WORKSPACE_ARIA_LABEL"] = "Espacio de trabajo de Blocky";
Blockly.Msg["COLLAPSED_WARNINGS_WARNING"] = "Los bloques plegados contienen advertencias.";

// Menú contextual.
Blockly.Msg["DUPLICATE_BLOCK"] = "Duplicar";
Blockly.Msg["ADD_COMMENT"] = "Añadir un comentario";
Blockly.Msg["REMOVE_COMMENT"] = "Eliminar un comentario";
Blockly.Msg["DUPLICATE_COMMENT"] = "Duplicar el comentario";
Blockly.Msg["EXTERNAL_INPUTS"] = "Entradas externas";
Blockly.Msg["INLINE_INPUTS"] = "Entradas en línea";
Blockly.Msg["DELETE_BLOCK"] = "Eliminar el bloque";
Blockly.Msg["DELETE_X_BLOCKS"] = "Eliminar %1 bloques";
Blockly.Msg["DELETE_ALL_BLOCKS"] = "Retire estos %1 bloques ?";
Blockly.Msg["CLEAN_UP"] = "Limpiar los bloques";
Blockly.Msg["COLLAPSE_BLOCK"] = "Reducir";
Blockly.Msg["COLLAPSE_ALL"] = "Reducir los bloques";
Blockly.Msg["EXPAND_BLOCK"] = "Desarrollar el bloque";
Blockly.Msg["EXPAND_ALL"] = "Desarrollar los bloques";
Blockly.Msg["DISABLE_BLOCK"] = "Desactivar el bloque";
Blockly.Msg["ENABLE_BLOCK"] = "Activar el bloque";
Blockly.Msg["HELP"] = "Ayuda";
Blockly.Msg["UNDO"] = "Anular";
Blockly.Msg["REDO"] = "Rehacer";

// IOS.
Blockly.Msg["IOS_OK"] = "OK";
Blockly.Msg["IOS_CANCEL"] = "Anular";
Blockly.Msg["IOS_ERROR"] = "Error";
Blockly.Msg["IOS_PROCEDURES_INPUTS"] = "Entradas";
Blockly.Msg["IOS_PROCEDURES_ADD_INPUT"] = "+ Agregar una entrada";
Blockly.Msg["IOS_PROCEDURES_ALLOW_STATEMENTS"] = "Órdenes autorizadas";
Blockly.Msg["IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR"] = "Esta función tiene entradas duplicadas.";
Blockly.Msg["IOS_VARIABLES_ADD_VARIABLE"] = "+ Agregar un variable";
Blockly.Msg["IOS_VARIABLES_ADD_BUTTON"] = "Agregar";
Blockly.Msg["IOS_VARIABLES_RENAME_BUTTON"] = "";
Blockly.Msg["IOS_VARIABLES_DELETE_BUTTON"] = "Borrar";
Blockly.Msg["IOS_VARIABLES_VARIABLE_NAME"] = "Nombre de la variable";
Blockly.Msg["IOS_VARIABLES_EMPTY_NAME_ERROR"] = "No puede usar un nombre de variable vacía.";

// Renombre de variables.
Blockly.Msg["CHANGE_VALUE_TITLE"] = "Cambiar el valor :";
Blockly.Msg["RENAME_VARIABLE"] = "Renombrar la variable…";
Blockly.Msg["RENAME_VARIABLE_TITLE"] = "Renombrar todas las variables « %1 » en :";

// Creation de variable.
Blockly.Msg["NEW_VARIABLE"] = "Crear una variable...";
Blockly.Msg["NEW_STRING_VARIABLE"] = "Crear una variable de cadena…";
Blockly.Msg["NEW_NUMBER_VARIABLE"] = "Crear una variable de número…";
Blockly.Msg["NEW_COLOUR_VARIABLE"] = "Crear una variable de color…";
Blockly.Msg["NEW_VARIABLE_TITLE"] = "El nombre de la nueva variable:";
Blockly.Msg["NEW_VARIABLE_TYPE_TITLE"] = "Nuevo tipo de variable :";
Blockly.Msg["VARIABLE_ALREADY_EXISTS"] = "Ya existe una variable llamada '%1'.";
Blockly.Msg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "Ya existe una variable llamada '%1' para otro typo : '%2'.";

 // Deleción de variable.
Blockly.Msg["DELETE_VARIABLE"] = "Eliminar la variable '%1'";
Blockly.Msg["DELETE_VARIABLE_CONFIRMATION"] = "Eliminar %1 usos de la variable ' %2' ?";
Blockly.Msg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Imposible eliminar la variable '%1' porque es parte de la definición de la función '%2'";

 // Texto de advertencia.
Blockly.Msg["LOGIC_COMPARE_WARNING"] = "Imposible comparar la primera entrada del tipo '%1' \n con el segundo tipo '%2'";
Blockly.Msg["LOGIC_TERNARY_WARNING"] = "Imposible devolver la primera entrada del tipo '%1' \n con el segundo tipo '%2'";
Blockly.Msg["VARIABLES_SET_WARNING"] = "La variable '%1' ya se ha declarado al tipo '%2' \n \n y este bloque trata de pasarlo al tipo '%3'."
Blockly.Msg["VARIABLES_SET_WARNING_NUMBERS"] = "<Ayuda>: Tal vez use el bloque <convertir x en 'float'> \n en la inicialización de la variable.";
 
 // Bloques de inicio.
Blockly.Msg["ON_START_TITLE"] = "Al inicio";
Blockly.Msg["ON_START_TOOLTIP"] = "Agregue instrucciones a este bloque para ejecutarlas al inicio de la tarjeta programable.";
Blockly.Msg["FOREVER_TITLE"] = "Repita indefinidamente";
Blockly.Msg["FOREVER_TOOLTIP"] = "Agregue instrucciones a este bloque para ejecutarlas en un bucle.";

 // Colores.
Blockly.Msg["COLOR_LEVEL_RED"] = "nivel de rojo";
Blockly.Msg["COLOR_LEVEL_GREEN"] = "nivel de verde";
Blockly.Msg["COLOR_LEVEL_BLUE"] = "nivel de azul";
 
 // Bloques de color.
Blockly.Msg["COLOUR_PICKER_HELPURL"] = "https://fr.wikipedia.org/wiki/Colores";
Blockly.Msg["COLOUR_PICKER_TOOLTIP"] = "Elija un color en la paleta.";
Blockly.Msg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";
Blockly.Msg["COLOUR_RANDOM_TITLE"] = "Color aleatorio";
Blockly.Msg["COLOUR_RANDOM_TOOLTIP"] = "Elija un color aleatorio.";
Blockly.Msg["COLOUR_RGB_HELPURL"] = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg["COLOUR_RGB_TOOLTIP"] = "Cree un color con la cantidad especificada de rojo, verde y azul.Los valores deben estar entre 0 y 100.";
Blockly.Msg["COLOUR_BLEND_HELPURL"] = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg["COLOUR_BLEND_TITLE"] = "Mezclar";
Blockly.Msg["COLOUR_BLEND_COLOUR1"] = "color 1";
Blockly.Msg["COLOUR_BLEND_COLOUR2"] = "color 2";
Blockly.Msg["COLOUR_BLEND_RATIO"] = "tasa";
Blockly.Msg["COLOUR_BLEND_TOOLTIP"] = "Mezclar dos colores en una proporción dada (de 0.0 a 1.0).";
Blockly.Msg["COLOUR_RED"] = "rojo";
Blockly.Msg["COLOUR_GREEN"] = "verde";
Blockly.Msg["COLOUR_BLUE"] = "azul";
Blockly.Msg["COLOUR_CYAN"] = "cian";
Blockly.Msg["COLOUR_FUCHSIA"] = "fucsia";
Blockly.Msg["COLOUR_YELLOW"] = "amarillo";
Blockly.Msg["COLOUR_BLACK"] = "negro";
Blockly.Msg["COLOUR_WHITE"] = "blanco";
Blockly.Msg["COLOUR_PURPLE"] = "morada";

// Exception
Blockly.Msg["EXCEPTION_RAISE_TOOLTIP"] = "lanzar una excepción";
Blockly.Msg["EXCEPTION_EXCEPTION_TOOLTIP"] = "crear una excepción";
Blockly.Msg["EXCEPTION_TYPE_TOOLTIP"] = "Todos los tipos de excepción posibles";
Blockly.Msg["EXCEPTION_TRY_TOOLTIP"] = "Ejecuta un bloque de código y permite ejecutar un bloque de código en caso de excepción";

 // Bloques de lógica.
Blockly.Msg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";
Blockly.Msg["CONTROLS_IF_TOOLTIP_1"] = "Si un valor es correcto, ejecute ciertos ordenes.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_2"] = "Si un valor es correcto, ejecute el primer bloque de ordenes.Si no, ejecute el segundo bloque de ordenes.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_3"] = "Si el primer valor es correcto, ejecute el primer bloque de ordenes.Si no, si el segundo valor es correcto, ejecute el segundo bloque de ordenes.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_4"] = "Si el primer valor es correcto, ejecute el primer bloque de ordenes. Sinon, si el segundo valor es correcto, ejecute el segundo bloque de ordene. Si ninguno de los valores es correcto, ejecute el último bloque de ordenes.";
Blockly.Msg["CONTROLS_IF_MSG_IF"] = "si %1 entonces";
Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"] = "si no si";
Blockly.Msg["CONTROLS_IF_MSG_THEN"] = "entonces";
Blockly.Msg["CONTROLS_IF_MSG_ELSE"] = "si no";
Blockly.Msg["CONTROLS_IF_IF_TOOLTIP"] = "Agregar, eliminar o reordenar las secciones para reconfigurar este bloque si.";
Blockly.Msg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Agregar una condición al bloque si.";
Blockly.Msg["CONTROLS_IF_ELSE_TOOLTIP"] = "Agregar una condición final bolsa al bloque si.";
Blockly.Msg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"];
Blockly.Msg["CONTROLS_IF_ELSE_TITLE_ELSE"] = Blockly.Msg["CONTROLS_IF_MSG_ELSE"];
Blockly.Msg["CONTROLS_IF_IF_TITLE_IF"] = Blockly.Msg["CONTROLS_IF_MSG_IF"];
Blockly.Msg["LOGIC_COMPARE_HELPURL"] = "https://fr.wikipedia.org/wiki/In%C3%A9galit%C3%A9_(math%C3%A9matiques)";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Devolver true si las dos entradas son iguales.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Devolver true si las dos entradas son diferentes.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LT"] = "Devolver true si la primera entrada es más pequeña que la segunda.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Devolver true si la primera entrada es más pequeña o igual a la segunda.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GT"] = "Devolver true si la primera entrada es más grande que la segunda.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Devolver true si la primera entrada es mayor o igual a la segunda.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_IS"] = "Devolver true si la primera entrada es idéntica a la segunda";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_ISNOT"] = "Devolver true si la primera entrada no es idéntica a la segunda";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_IN"] = "Devolver true si la primera entrada está presente en la segunda";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_NOTIN"] = "Devolver true si la primera entrada no está presente en la segunda";
Blockly.Msg["LOGIC_COMPARE_2_TOOLTIP"] = "Devolver true si el valor está entre un mínimo y un máximo.";
Blockly.Msg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";
Blockly.Msg["LOGIC_OPERATION_AND"] = "y";
Blockly.Msg["LOGIC_OPERATION_OR"] = "o";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_AND"] = "Devolver verdad si las dos entradas son ciertas.";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_OR"] = "Devolver verdad si al menos una de las entradas es cierta.";
Blockly.Msg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";
Blockly.Msg["LOGIC_BOOLEAN_TRUE"] = "verdad";
Blockly.Msg["LOGIC_BOOLEAN_FALSE"] = "falsa";
Blockly.Msg["LOGIC_BOOLEAN_TOOLTIP"] = "Devuelve verdadero o falso.";
Blockly.Msg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";
Blockly.Msg["LOGIC_NEGATE_TITLE"] = "no %1";
Blockly.Msg["LOGIC_NEGATE_TOOLTIP"] = "Devuelve verdad si la entrada es falsa.Devuelve falso si la entrada es verdadera.";
Blockly.Msg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg["LOGIC_NULL_TITLE"] = "nulo";
Blockly.Msg["LOGIC_NULL_TOOLTIP"] = "Devuelve nulo.";
Blockly.Msg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg["LOGIC_TERNARY_CONDITION"] = "prueba";
Blockly.Msg["LOGIC_TERNARY_IF_TRUE"] = "si cierto";
Blockly.Msg["LOGIC_TERNARY_IF_FALSE"] = "si falso";
Blockly.Msg["LOGIC_TERNARY_TOOLTIP"] = "Verifique la condición en 'prueba'.Si es cierto, devuelve el valor 'si cierto';De lo contrario, devuelve el valor 'si falso'.";
Blockly.Msg["LOGIC_ASSERT_TOOLTIP"] = "Comprueba si una condición es verdadera. Si la condición es falsa, genera un error e interrumpe la ejecución del programa.";
Blockly.Msg["LOGIC_ASSERT_HELPURL"] = "https://en.wikipedia.org/wiki/Assertion_(software_development)";

 // Bloques de bucle.
Blockly.Msg["CONTROLS_REPEAT_HELPURL"] = "http://fr.wikipedia.org/wiki/Boucle_for";
Blockly.Msg["CONTROLS_REPEAT_TITLE"] = "repetir %1 veces";
Blockly.Msg["CONTROLS_REPEAT_TOOLTIP"] = "Ejecutar instrucciones varias veces.";
Blockly.Msg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "repetir hasta";
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "repetir mientras";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Mientras un valor sea falso, ejecute instrucciones.";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Mientras un valor sea cierto, ejecute instrucciones.";
Blockly.Msg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";
Blockly.Msg["CONTROLS_FOR_TITLE"] = "contar con %1 de %2 à %3 por posos de %4";
Blockly.Msg["CONTROLS_FOR_TOOLTIP"] = "Hacer tomar a la variable « %1 » los valores desde los primeros numeros hasta los ultimos, incorporando el paso especificado y ejecutar las instrucciones especificadas.";
Blockly.Msg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";
Blockly.Msg["CONTROLS_FOREACH_TITLE"] = "Para cada elemento %1 en la lista %2";
Blockly.Msg["CONTROLS_FOREACH_TOOLTIP"] = "Para cada elemento de la lista, asigne el valor del elemento a la variable '%1', luego ejecute instrucciones.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "dejar el bucle";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "ir a la siguiente iteración de bucle";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Salir del bucle englobante.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Omitir el resto de este bucle, y continuar con la siguiente iteración.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_PASS_TITLE"] = "no hacer nada";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_PASS_TOOLTIP"] = "No hacer nada.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Atención : Este bloque solo debe usarse en un bucle.";
Blockly.Msg["CONTROLS_LISTCOMP_TITLE"] = "Crear una lista con %1 para %2 en %3";
Blockly.Msg["CONTROLS_LISTCOMP_TOOLTIP"] = "Crear una comprensión de lista";
Blockly.Msg["CONTROLS_RANGE_TITLE_1"] = "Crear una secuencia con : end ";
Blockly.Msg["CONTROLS_RANGE_TITLE_2"] = ", inicio ";
Blockly.Msg["CONTROLS_RANGE_TITLE_3"] = ", paso ";
Blockly.Msg["CONTROLS_RANGE_TOOLTIP"] = "Crear una secuencia de números";

 // Bloques de matemáticas.
Blockly.Msg["MATH_ADDITION_SYMBOL"] = "+";
Blockly.Msg["MATH_SUBTRACTION_SYMBOL"] = "-";
Blockly.Msg["MATH_DIVISION_SYMBOL"] = "÷";
Blockly.Msg["MATH_MULTIPLICATION_SYMBOL"] = "×";
Blockly.Msg["MATH_POWER_SYMBOL"] = "^";
Blockly.Msg["MATH_NUMBER_HELPURL"] = "https://fr.wikipedia.org/wiki/Nombre";
Blockly.Msg["MATH_NUMBER_TOOLTIP"] = "Un nombre.";
Blockly.Msg["MATH_ARITHMETIC_HELPURL"] = "https://fr.wikipedia.org/wiki/Arithmetique";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Devuelve la suma de los dos números.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Devuelve la diferencia de los dos números.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Devuelve el cociente de los dos números.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Devuelve el producto de los dos números.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Devuelve el primer número a la potencia del segundo.";
Blockly.Msg["MATH_SINGLE_HELPURL"] = "https://fr.wikipedia.org/wiki/Racine_carree";
Blockly.Msg["MATH_SINGLE_OP_ROOT"] = "raíz cuadrada";
Blockly.Msg["MATH_SINGLE_OP_ABSOLUTE"] = "valor absoluto";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ROOT"] = "Devuelve la raíz cuadrada de un número.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ABS"] = "Devuelve el valor absoluto de un número.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_NEG"] = "Devuelve lo contrario de un número";
Blockly.Msg["MATH_SINGLE_TOOLTIP_EXP"] = "Devuelve e a la potencia de un número.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LN"] = "Devuelve el logaritmo natural de un número.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LOG10"] = "Devuelve el logaritmo decimal de un número.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_POW10"] = "Devuelve 10 a la potencia de un número.";
Blockly.Msg["MATH_TRIG_HELPURL"] = "https://fr.wikipedia.org/wiki/Fonction_trigonom%C3%A9trique";
Blockly.Msg["MATH_TRIG_COS"] = "cos";
Blockly.Msg["MATH_TRIG_SIN"] = "sin";
Blockly.Msg["MATH_TRIG_TAN"] = "tan";
Blockly.Msg["MATH_TRIG_ACOS"] = "acos";
Blockly.Msg["MATH_TRIG_ASIN"] = "asin";
Blockly.Msg["MATH_TRIG_ATAN"] = "atan";
Blockly.Msg["MATH_TRIG_TOOLTIP_COS"] = "Devuelve el coseno de un ángulo en grados (no en radianes).";
Blockly.Msg["MATH_TRIG_TOOLTIP_SIN"] = "Devuelve el seno de un ángulo a los grados (no en radianes).";
Blockly.Msg["MATH_TRIG_TOOLTIP_TAN"] = "Devuelve la tangente de un ángulo en grados (no en radianes).";
Blockly.Msg["MATH_TRIG_TOOLTIP_ACOS"] = "Devuelve el arcosino de un número.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ASIN"] = "Devuelve el arcsinus de un número.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ATAN"] = "Devuelve el arctangent de un número.";
Blockly.Msg["MATH_TRIG_TOOLTIP_COS_RAD"] = "Devuelve el coseno de un ángulo en radianes.";
Blockly.Msg["MATH_TRIG_TOOLTIP_SIN_RAD"] = "Devuelve el seno de un ángulo en radianes.";
Blockly.Msg["MATH_TRIG_TOOLTIP_TAN_RAD"] = "Devuelve la tangente de un ángulo en radianes.";
Blockly.Msg["MATH_CONSTANT_HELPURL"] = "https://fr.wikipedia.org/wiki/Table_de_constantes_math%C3%A9matiques";
Blockly.Msg["MATH_CONSTANT_TOOLTIP"] = "Devuelve una de las constantes : π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), ou ∞ (infini).";
Blockly.Msg["MATH_IS_EVEN"] = "es par";
Blockly.Msg["MATH_IS_ODD"] = "es impar";
Blockly.Msg["MATH_IS_PRIME"] = "es primero";
Blockly.Msg["MATH_IS_WHOLE"] = "está entero";
Blockly.Msg["MATH_IS_POSITIVE"] = "es positivo";
Blockly.Msg["MATH_IS_NEGATIVE"] = "es negativo";
Blockly.Msg["MATH_IS_DIVISIBLE_BY"] = "es divisible por";
Blockly.Msg["MATH_IS_TOOLTIP"] = "Compruebe si un número es par, impar, primero, completo, positivo, negativo o si es divisible por cierto número.Devuelve cierto o falso.";
Blockly.Msg["MATH_MAP_TITLE"] = "Transforme el valor %1 de [ %2 a %3] a [ %4 a %5]";
Blockly.Msg["MATH_MAP_TOOLTIP"] = "Transforma un valor incluido en un intervalo [min; max] en otro intervalo [min; max]";
Blockly.Msg["MATH_ROUND_HELPURL"] = "https://fr.wikipedia.org/wiki/Arrondi_(math%C3%A9matiques)";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUND"] = "redondear";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "redondear por defecto";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDUP"] = "redondear por exceso";
Blockly.Msg["MATH_ROUND_TOOLTIP"] = "Redondear de un número por arriba o por abajo.";
Blockly.Msg["MATH_ROUND_NDIGITS_TITLE"] = "redondear %1 a %2 decimal(es)";
Blockly.Msg["MATH_ROUND_NDIGITS_TOOLTIP"] = "Redondear un número a n cifras significativas.";
Blockly.Msg["MATH_MODULO_HELPURL"] = "https://fr.wikipedia.org/wiki/Modulo_(op%C3%A9ration)";
Blockly.Msg["MATH_MODULO_TITLE"] = "resto de %1 ÷ %2";
Blockly.Msg["MATH_MODULO_TOOLTIP"] = "Consulte el resto de la división euclidiana de los dos números.";
Blockly.Msg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";
Blockly.Msg["MATH_CONSTRAIN_TITLE"] = "Restringir %1 entre %2 y %3";
Blockly.Msg["MATH_CONSTRAIN_TOOLTIP"] = "Restringir un número entre los límites especificados (incluidos).";
Blockly.Msg["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg["MATH_RANDOM_INT_TITLE"] = "entero aleatorio entre %1 y %2";
Blockly.Msg["MATH_RANDOM_INT_TOOLTIP"] = "Devolver un entero aleatorio entre los dos límites especificados, incluidos.";
Blockly.Msg["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "número aleatorio entre 0 y 1";
Blockly.Msg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Devolver un número aleatorio entre 0.0 (incluido) y 1.0 (excluido), es decir [0, 1 [en matemáticas.";
Blockly.Msg["MATH_ATAN2_HELPURL"] = "https://fr.wikipedia.org/wiki/Atan2";
Blockly.Msg["MATH_ATAN2_TITLE"] = "atan2 de X:%1 Y:%2";
Blockly.Msg["MATH_ATAN2_TOOLTIP"] = "Devuelve el arco tangente del punto (x, y) en grados entre -180 y 180.";
Blockly.Msg["MATH_ATAN2_RAD_TOOLTIP"] = "Devuelve el arco tangente del punto (x, y) en radianes entre -π y π.";
Blockly.Msg["MATH_MIN_MAX_TOOLTIP"] = "Devuelve el menor o mayor número entre los valores dados.";

// Bloques de texto.
Blockly.Msg["TEXT_TEXT_HELPURL"] = "https://fr.wikipedia.org/wiki/Cha%C3%AEne_de_caract%C3%A8res";
Blockly.Msg["TEXT_TEXT_TOOLTIP"] = "Una letra, una palabra o una línea de texto.";
Blockly.Msg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";
Blockly.Msg["TEXT_JOIN_TITLE_CREATEWITH"] = "Crea el texto";
Blockly.Msg["TEXT_JOIN_TOOLTIP"] = "Cree un pedazo de texto agregando cualquier cantidad de elementos.";
Blockly.Msg["TEXT_NEWLINE_TITLE"] = "%1 salto(s) de línea";
Blockly.Msg["TEXT_NEWLINE_TOOLTIP"] = "Agregar saltos de línea a un texto.";
Blockly.Msg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";
Blockly.Msg["TEXT_APPEND_TITLE"] = "Agregar el texto %2 a %1";
Blockly.Msg["TEXT_APPEND_VARIABLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["TEXT_APPEND_TOOLTIP"] = "Agregar texto a la variable '%1'";
Blockly.Msg["TEXT_SPLIT_TITLE"] = "separar el texto %1 con %2";
Blockly.Msg["TEXT_SPLIT_TOOLTIP"] = "Devuelve la lista de elementos del texto separado por el separador.";
Blockly.Msg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";
Blockly.Msg["TEXT_LENGTH_TITLE"] = "Longitud del %1";
Blockly.Msg["TEXT_LENGTH_TOOLTIP"] = "Devuelve el número de letras (espacios incluidos) en el texto proporcionado.";
Blockly.Msg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";
Blockly.Msg["TEXT_ISEMPTY_TITLE"] = "%1 esta vacio";
Blockly.Msg["TEXT_ISEMPTY_TOOLTIP"] = "Devuelve verdad si el texto proporcionado está vacío.";
Blockly.Msg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";
Blockly.Msg["TEXT_INDEXOF_OPERATOR_FIRST"] = "Encontrar la primera aparición de la cadena";
Blockly.Msg["TEXT_INDEXOF_OPERATOR_LAST"] = "Encontrar la última aparición de la cadena";
Blockly.Msg["TEXT_INDEXOF_TITLE"] = "en el texto %1 %2 %3";
Blockly.Msg["TEXT_INDEXOF_TOOLTIP"] = "Devuelve el índice de la primera/última aparición del primer canal en el segundo.Devuelve %1 si no se encuentra la cadena.";
Blockly.Msg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";
Blockly.Msg["TEXT_CHARAT_TITLE"] = "en el texto %1 %2";
Blockly.Msg["TEXT_CHARAT_FIRST"] = "Obtener la primera letra";
Blockly.Msg["TEXT_CHARAT_LAST"] = "Obtener la última letra ";
Blockly.Msg["TEXT_CHARAT_FROM_START"] = "Obtener la letra de índice";
Blockly.Msg["TEXT_CHARAT_FROM_END"] = "Obtener la letra de índice (desde el final)";
Blockly.Msg["TEXT_CHARAT_RANDOM"] = "Obtener una carta al azar";
Blockly.Msg["TEXT_CHARAT_TAIL"] = "";
Blockly.Msg["TEXT_CHARAT_TOOLTIP"] = "Devuelve la letra a la posición indicada.";
Blockly.Msg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FIRST"] = "Obtener la subcadena desde la primera letra";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_START"] = "Obtenga la subcadena de la letra de índice";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_END"] = "Obtener la subcadena de la letra de índice (desde el final)";
Blockly.Msg["TEXT_GET_SUBSTRING_END_LAST"] = "Hasta la última letra";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_START"] = "Hasta la letra de índice";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_END"] = "hasta la letra de índice (desde el final)";
Blockly.Msg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "en el texto";
Blockly.Msg["TEXT_GET_SUBSTRING_TAIL"] = "";
Blockly.Msg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Devuelve una parte indicada del texto.";
Blockly.Msg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";
Blockly.Msg["TEXT_CHANGECASE_TITLE"] = "poner %1 en %2";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "Minúscula";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "Mayúscula al comienzo de cada palabra";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "MAYUSCULA";
Blockly.Msg["TEXT_CHANGECASE_TOOLTIP"] = "Devuelve una copia del texto a otra casilla.";
Blockly.Msg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";
Blockly.Msg["TEXT_TRIM_TITLE"] = "Eliminar espacios %1 de %2";
Blockly.Msg["TEXT_TRIM_OPERATOR_BOTH"] = "a ambos lados";
Blockly.Msg["TEXT_TRIM_OPERATOR_LEFT"] = "en el lado izquierdo";
Blockly.Msg["TEXT_TRIM_OPERATOR_RIGHT"] = "en el lado derecho";
Blockly.Msg["TEXT_TRIM_TOOLTIP"] = "Devuelve una copia del texto con los espacios eliminados de un extremo o ambos.";
Blockly.Msg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";
Blockly.Msg["TEXT_COUNT_TITLE"] = "Cuenta las ocurrencias de %1 en %2";
Blockly.Msg["TEXT_COUNT_TOOLTIP"] = "Cuente cuántas veces aparece un texto determinado en otro.";
Blockly.Msg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";
Blockly.Msg["TEXT_REPLACE_TITLE"] = "Reemplazar %1 por %2 en %3";
Blockly.Msg["TEXT_REPLACE_TOOLTIP"] = "Reemplace todas las ocurrencias de un texto con otro.";
Blockly.Msg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";
Blockly.Msg["TEXT_REVERSE_TITLE"] = "Invertir %1";
Blockly.Msg["TEXT_REVERSE_TOOLTIP"] = "Invertir el orden de los caracteres en el texto.";
Blockly.Msg["TEXT_COMMENT_TITLE"] = "Comentario %1";
Blockly.Msg["TEXT_COMMENT_TOOLTIP"] = "Agregue un comentario en el código.";
Blockly.Msg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";
Blockly.Msg["TEXT_PRINT_TITLE"] = "Mostrar %1";
Blockly.Msg["TEXT_PRINT_TOOLTIP"] = "Mostrar texto, número u otro valor especificado.";
Blockly.Msg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";
Blockly.Msg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Pedir un nombre al usuario.";
Blockly.Msg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Pedir un mensaje de texto al usuario.";
Blockly.Msg["TEXT_PROMPT_TYPE_NUMBER"] = "Pide para un número con un mensaje";
Blockly.Msg["TEXT_PROMPT_TYPE_TEXT"] = "Pide para un texto con un mensaje";
Blockly.Msg["TEXT_COUNT_CHARACTERS_TITLE"] = "conta le occorrenze di %1 in %2";
Blockly.Msg["TEXT_COUNT_CHARACTERS_TOOLTIP"] = "Conta il numero di lettere maiuscole, minuscole, cifre o caratteri speciali in una stringa.";
Blockly.Msg["TEXT_COUNT_CHARACTERS_UPPER"] = "maiuscole";
Blockly.Msg["TEXT_COUNT_CHARACTERS_LOWER"] = "minuscole";
Blockly.Msg["TEXT_COUNT_CHARACTERS_DIGITS"] = "cifre";
Blockly.Msg["TEXT_COUNT_CHARACTERS_SPECIAL"] = "caratteri speciali";
Blockly.Msg["TEXT_RANDOM_STRING_TITLE"] = "genera una stringa di lunghezza %1";
Blockly.Msg["TEXT_RANDOM_STRING_TOOLTIP"] = "Genera una stringa contenente un mix di lettere maiuscole, minuscole, cifre o caratteri speciali. La lunghezza di questa stringa può essere modificata nel blocco.";
 
// Bloques de variables.
Blockly.Msg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";
Blockly.Msg["VARIABLES_SET"] = "Asignar a %1 valor %2";
Blockly.Msg["VARIABLES_GLOBAL"] = "variable global %1";
Blockly.Msg["VARIABLES_GLOBAL_TOOLTIP"] = "Crea una variable global.";
Blockly.Msg["VARIABLES_GLOBAL_HELPURL"] = "https://www.w3schools.com/python/python_variables_global.asp";
Blockly.Msg["VARIABLES_SET_CREATE_GET"] = "Crear 'obtener %1'";
Blockly.Msg["VARIABLES_SET_TOOLTIP"] = "Fija esta variable para que sea igual al valor de la entrada.";
Blockly.Msg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";
Blockly.Msg["VARIABLES_GET_CREATE_SET"] = "Crear 'Fijar %1'";
Blockly.Msg["VARIABLES_GET_TOOLTIP"] = "Devuelve el valor de esta variable.";
Blockly.Msg["VARIABLES_INCREMENT_HELPURL"] = "https://fr.wikipedia.org/wiki/Idiome_de_programmation";
Blockly.Msg["VARIABLES_INCREMENT_TITLE"] = "Agregar a %1 el valor %2";
Blockly.Msg["VARIABLES_INCREMENT_TOOLTIP"] = "Agregar un número a esta variable.";
Blockly.Msg["VARIABLES_FORCE_TYPE_TITLE"] = "convertir %1 en %2";
Blockly.Msg["VARIABLES_FORCE_TYPE_CHAR"] = "carácter (char)";
Blockly.Msg["VARIABLES_FORCE_TYPE_TEXT"] = "texto";
Blockly.Msg["VARIABLES_FORCE_TYPE_BOOLEAN"] = "booleano (bool)";
Blockly.Msg["VARIABLES_FORCE_TYPE_INTEGER"] = "entero (int)";
Blockly.Msg["VARIABLES_FORCE_TYPE_FLOAT"] = "flotante (float)";
Blockly.Msg["VARIABLES_FORCE_TYPE_LONG"] = "gran número (long)";
Blockly.Msg["VARIABLES_FORCE_TYPE_SHORT"] = "número pequeño (short)";
Blockly.Msg["VARIABLES_FORCE_TYPE_TOOLTIP"] = "Le permite convertir una variable en el tipo elegido.";
Blockly.Msg["VARIABLES_TYPEOF_TITLE"] = "tipo de %1";
Blockly.Msg["VARIABLES_TYPEOF_TOOLTIP"] = "Devuelve el tipo de esta variable.";
Blockly.Msg["VARIABLES_TUPLE_TITLE"] = "Tuple con los valores :";
Blockly.Msg["VARIABLES_TUPLE_TOOLTIP"] = "Crear una tupla de estos valores";

 // Listas de bloques. Blockly.Msg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
Blockly.Msg["LISTS_CREATE_EMPTY_TITLE"] = "lista vacía";
Blockly.Msg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Devolver una lista, de longitud 0, que no ningún registro";
Blockly.Msg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg["LISTS_CREATE_WITH_INPUT_WITH"] = "Lista con los elementos";
Blockly.Msg["LISTS_CREATE_WITH_TOOLTIP"] = "Lista con cualquier número de elementos";
Blockly.Msg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg["LISTS_REPEAT_TITLE"] = "Lista con el elemento %1 repetido %2 veces";
Blockly.Msg["LISTS_REPEAT_TOOLTIP"] = "Crea una lista que consiste en el valor proporcionado repetido el número de veces indicado";
Blockly.Msg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";
Blockly.Msg["LISTS_LENGTH_TITLE"] = "longitud de %1";
Blockly.Msg["LISTS_LENGTH_TOOLTIP"] = "Devuelve la longitud de una lista";
Blockly.Msg["MATH_ONLIST_HELPURL"] = "";
Blockly.Msg["MATH_ONLIST_OPERATOR_AVERAGE"] = "promedio de la lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_MAX"] = "máximo de la lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_MEDIAN"] = "mediana de la lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_MIN"] = "mínimo de la lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_MODE"] = "mayoría de la lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_RANDOM"] = "elemento aleatorio de la lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_STD_DEV"] = "desviación estándar de la lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_SUM"] = "suma de la lista";
Blockly.Msg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Devuelve la media (aritmética) de los valores numéricos de la lista";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MAX"] = "Devuelve el mayor número de la lista";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Devuelve el número mediano de la lista";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MIN"] = "Devuelve el número más pequeño de la lista";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MODE"] = "Devuelve una lista de los elementos más comunes de la lista";
Blockly.Msg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Devuelve un elemento de la lista al azar";
Blockly.Msg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Devuelve la desviación estándar de la lista";
Blockly.Msg["MATH_ONLIST_TOOLTIP_SUM"] = "Devuelve la suma de todos los números de la lista";
Blockly.Msg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";
Blockly.Msg["LISTS_ISEMPTY_TITLE"] = "%1 está vacío";
Blockly.Msg["LISTS_ISEMPTY_TOOLTIP"] = "Devuelve verdadero si la lista está vacía";
Blockly.Msg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";
Blockly.Msg["LISTS_REVERSE_TITLE"] = "lista inversa %1";
Blockly.Msg["LISTS_REVERSE_TOOLTIP"] = "Invierte la copia de una lista";
Blockly.Msg["LISTS_SHUFFLE_TITLE"] = "mezclar la lista %1";
Blockly.Msg["LISTS_SHUFFLE_TOOLTIP"] = "Mezclar los elementos de una lista (sin crear una copia).";
Blockly.Msg["LISTS_INLIST"] = "en lista";
Blockly.Msg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
Blockly.Msg["LISTS_INDEX_OF_FIRST"] = "encontrar la primera aparición del elemento";
Blockly.Msg["LISTS_INDEX_OF_LAST"] = "encontrar la última ocurrencia del elemento";
Blockly.Msg["LISTS_INDEX_OF_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_INDEX_OF_TOOLTIP"] = "Devuelve el índice de la primera/última aparición del elemento en la lista. Devuelve %1 si no se encuentra el elemento";
Blockly.Msg["LISTS_GET_INDEX_HELPURL"] = Blockly.Msg["LISTS_INDEX_OF_HELPURL"];
Blockly.Msg["LISTS_GET_INDEX_GET"] = "get";
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE"] = "obtener y eliminar";
Blockly.Msg["LISTS_GET_INDEX_REMOVE"] = "borrar";
Blockly.Msg["LISTS_GET_INDEX_FIRST"] = "el primer elemento";
Blockly.Msg["LISTS_GET_INDEX_LAST"] = "el último elemento";
Blockly.Msg["LISTS_GET_INDEX_FROM_START"] = "el elemento";
Blockly.Msg["LISTS_GET_INDEX_FROM_END"] = "el elemento índice (desde el final)";
Blockly.Msg["LISTS_GET_INDEX_RANDOM"] = "un elemento aleatorio";
Blockly.Msg["LISTS_GET_INDEX_TAIL"] = "";
Blockly.Msg["LISTS_GET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 es el último elemento";
Blockly.Msg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 es el primer elemento";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FROM_END"] = "Devuelve el elemento en la posición especificada de una lista (desde el final)";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Devuelve el primer elemento de una lista";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Devuelve el elemento en la posición especificada en una lista";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Devuelve el último elemento de una lista";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Devuelve un elemento aleatorio en una lista";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Borra y devuelve el primer elemento de una lista";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Borra y devuelve el elemento en la posición especificada en una lista";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Borra y devuelve el último elemento de una lista";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Borra y devuelve un elemento al azar en una lista";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Borra el primer elemento de una lista";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Elimina el elemento en la posición especificada en una lista";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Borra el último elemento de una lista";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Borra un elemento aleatorio de una lista";
Blockly.Msg["LISTS_APPEND_TITLE"] = "en la lista %1 añadir elemento %2";
Blockly.Msg["LISTS_APPEND_TOOLTIP"] = "Añadir un elemento al final de la lista";
Blockly.Msg["LISTS_APPEND_HELPURL"] = "";
Blockly.Msg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";
Blockly.Msg["LISTS_SET_INDEX_INPUT_TO"] = "como";
Blockly.Msg["LISTS_SET_INDEX_SET"] = "put";
Blockly.Msg["LISTS_SET_INDEX_INSERT"] = "insertar en";
Blockly.Msg["LISTS_SET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Inserta el elemento al principio de una lista";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Inserta el elemento en la posición especificada en una lista";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Añade el elemento al final de una lista";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Inserta el elemento al azar en una lista";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Establece el primer elemento de una lista";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Actualiza el elemento a la posición especificada en una lista";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Establece el último elemento de una lista";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Establece un elemento aleatorio en una lista";
Blockly.Msg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";
Blockly.Msg["LISTS_GET_SUBLIST_START_FIRST"] = "obtener la sublista desde el principio";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_START"] = "obtener la sublista desde el elemento índice";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_END"] = "obtener sublista desde el elemento índice (desde el final)";
Blockly.Msg["LISTS_GET_SUBLIST_END_LAST"] = "hasta el final";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_START"] = "al elemento índice";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_END"] = "al elemento del índice (desde el final)";
Blockly.Msg["LISTS_GET_SUBLIST_TAIL"] = "";
Blockly.Msg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_GET_SUBLIST_TOOLTIP"] = "Crea una copia de la parte especificada de una lista";
Blockly.Msg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg["LISTS_SPLIT_TEXT_FROM_LIST"] = "crear una lista a partir de un texto";
Blockly.Msg["LISTS_SPLIT_LIST_FROM_TEXT"] = "crear texto desde la lista";
Blockly.Msg["LISTS_SPLIT_TOOLTIP_JOIN"] = "combinar una lista de textos en uno, separados por un separador";
Blockly.Msg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Cortar un texto en una lista de textos, cortando en cada separador";
Blockly.Msg["LISTS_SPLIT_WITH_DELIMITER"] = "con separador";
Blockly.Msg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg["LISTS_SORT_ORDER_ASCENDING"] = "creciente";
Blockly.Msg["LISTS_SORT_ORDER_DESCENDING"] = "decreciente";
Blockly.Msg["LISTS_SORT_TITLE"] = "sort %1 %2 %3";
Blockly.Msg["LISTS_SORT_TOOLTIP"] = "Ordenar una copia de una lista";
Blockly.Msg["LISTS_SORT_TYPE_IGNORECASE"] = "alfabético, ignorando mayúsculas y minúsculas";
Blockly.Msg["LISTS_SORT_TYPE_NUMERIC"] = "numérico";
Blockly.Msg["LISTS_SORT_TYPE_TEXT"] = "alfabético";
 
 // Bloques de procedimientos.
 Blockly.Msg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";
 Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"] = "definir";
 Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "function_name";
 Blockly.Msg["PROCEDURES_BEFORE_PARAMS"] = "con:";
 Blockly.Msg["PROCEDURES_CALL_BEFORE_PARAMS"] = Blockly.Msg["PROCEDURES_BEFORE_PARAMS"];
 Blockly.Msg["PROCEDURES_DEFNORETURN_DO"] = "";
 Blockly.Msg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Crea una función sin salida";
 Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"] = "Describe esta función...";
 Blockly.Msg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";
 Blockly.Msg["PROCEDURES_DEFRETURN_TITLE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"];
 Blockly.Msg["PROCEDURES_DEFRETURN_PROCEDURE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"];
 Blockly.Msg["PROCEDURES_DEFRETURN_DO"] = Blockly.Msg["PROCEDURES_DEFNORETURN_DO"];
 Blockly.Msg["PROCEDURES_DEFRETURN_COMMENT"] = Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"];
 Blockly.Msg["PROCEDURES_DEFRETURN_RETURN"] = "return";
 Blockly.Msg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Crear una función con salida";
 Blockly.Msg["PROCEDURES_ALLOW_STATEMENTS"] = "permitir comandos";
 Blockly.Msg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Aviso: Esta función tiene parámetros duplicados";
 Blockly.Msg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://fr.wikipedia.org/wiki/Sous-programme";
 Blockly.Msg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Ejecuta la función definida por el usuario '%1'";
 Blockly.Msg["PROCEDURES_CALLRETURN_HELPURL"] = "https://fr.wikipedia.org/wiki/Sous-programme";
 Blockly.Msg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Ejecuta la función definida por el usuario '%1' y utiliza su resultado";
 Blockly.Msg["PROCEDURES_HIGHLIGHT_DEF"] = "Resaltar la definición de la función";
 Blockly.Msg["PROCEDURES_CREATE_DO"] = "Crear '%1'";
 Blockly.Msg["PROCEDURES_IFRETURN_TITLE"] = "si";
 Blockly.Msg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";
 Blockly.Msg["PROCEDURES_IFRETURN_TOOLTIP"] = "Si un valor es verdadero, entonces devuelve un segundo valor";
 Blockly.Msg["PROCEDURES_IFRETURN_WARNING"] = "Advertencia: Este bloque sólo puede utilizarse en una definición de función";
 
// Dict blocks
Blockly.Msg["DICTIONARIES_CREATE_EMPTY_TITLE"] = "crear un diccionario vacío";
Blockly.Msg["DICTIONARIES_CREATE_EMPTY_TOOLTIP"] = "Inicializa un diccionario vacío.";
Blockly.Msg["DICTIONARIES_CREATE_WITH_TITLE"] = "crear un diccionario con";
Blockly.Msg["DICTIONARIES_CREATE_WITH_TOOLTIP"] = "inicializar un diccionario con valores";
Blockly.Msg["DICTIONARIES_FROM_LIST_TITLE"] = "Crear un diccionario a partir de %1";
Blockly.Msg["DICTIONARIES_FROM_LIST_TOOLTIP"] = "Crear un diccionario a partir de una lista";
Blockly.Msg["DICTIONARIES_LENGTH_TITLE"] = "tamaño de %1";
Blockly.Msg["DICTIONARIES_LENGTH_TOOLTIP"] = "Devuelve el tamaño del diccionario.";
Blockly.Msg["DICTIONARIES_ADD_TUPLE_TITLE"] = "añadir a %1 la pareja clave-valor (%2,%3)";
Blockly.Msg["DICTIONARIES_ADD_TUPLE_TOOLTIP"] = "Añade una tupla de diccionario. Si la clave ya existe, se sustituirá el valor.";
Blockly.Msg["DICTIONARIES_LOOP_TITLE"] = "Para cada %1 %2 diccionario %3";
Blockly.Msg["DICTIONARIES_LOOP_TOOLTIP"] = "Recorre las claves, los valores o los tules (clave, valor) del diccionario.";
Blockly.Msg["DICTIONARIES_LOOP_KEY"] = "clave";
Blockly.Msg["DICTIONARIES_LOOP_VALUE"] = "valor";
Blockly.Msg["DICTIONARIES_LOOP_TUPLE"] = "tupla";
Blockly.Msg["DICTIONARIES_GET_ITEM_TITLE"] = "en el diccionario %1 obtener el valor asociado a la clave %2";
Blockly.Msg["DICTIONARIES_GET_ITEM_TOOLTIP"] = "Devuelve el valor asociado a una clave del diccionario o Ninguno si la clave no existe.";
Blockly.Msg["DICTIONARIES_UPDATE_ITEM_TITLE"] = "en el diccionario %1 cambiar el valor %2 asociada a la clave %3";
Blockly.Msg["DICTIONARIES_UPDATE_ITEM_TOOLTIP"] = "Modifica el valor asociado a la clave en el diccionario.";
Blockly.Msg["DICTIONARIES_INCLUDE_TITLE"] = "la %1 %2 %3 presente en el diccionario %4";
Blockly.Msg["DICTIONARIES_INCLUDE_TOOLTIP"] = "Comprobar si la clave/valor está presente o no en el diccionario.";
Blockly.Msg["DICTIONARIES_INCLUDE_IN"] = "es";
Blockly.Msg["DICTIONARIES_INCLUDE_NOT"] = "no es";
Blockly.Msg["DICTIONARIES_INCLUDE_KEY"] = "clave";
Blockly.Msg["DICTIONARIES_INCLUDE_VALUE"] = "valor";
Blockly.Msg["DICTIONARIES_DELETE_TUPLE_TITLE"] = "eliminar del diccionario %1 la tupla asociada a la clave %2";
Blockly.Msg["DICTIONARIES_DELETE_TUPLE_TOOLTIP"] = "Eliminar una tupla del diccionario.";
Blockly.Msg["DICTIONARIES_CLEAR_TITLE"] = "borrar todos los datos del diccionario %1";
Blockly.Msg["DICTIONARIES_CLEAR_TOOLTIP"] = "Borra todos los tules del diccionario.";

// Other block
Blockly.Msg["OTHER_AST_RAW"] = "Código sin traducir";

// COMMON BLOCKS  (python traduction)
Blockly.Msg["COMMUNICATION_SERIAL_WRITE_SEPARATOR_TITLE"] = "escribir en la consola";
Blockly.Msg["COMMUNICATION_SERIAL_WRITE_SEPARATOR_TOOLTIP"] = "Escribe los datos en la consola serie con un separador.";


// Cámara - Wio lite AI
Blockly.Msg['WIO_MAKE_PREDICTION_TITLE'] = '[Wio lite] lanzar una predicción';
Blockly.Msg['WIO_MAKE_PREDICTION_TOOLTIP'] = IMG_WIO_LITE_AI + Blockly.Tooltip.SEP + 'Lanza una predicción usando la imagen de la cámara de Wio lite.';
Blockly.Msg['WIO_GET_DATA_TITLE'] = '[Wio lite] recuperar todos los datos';
Blockly.Msg['WIO_GET_DATA_TOOLTIP'] = IMG_WIO_LITE_AI + Blockly.Tooltip.SEP + 'Devuelve todos los datos de Wio lite (probabilidades asociadas a las clases del modelo).';
Blockly.Msg['WIO_GET_CLASS_DATA_BY_ID_TITLE'] = '[Wio lite] probabilidad de la clase n.º %1';
Blockly.Msg['WIO_GET_CLASS_DATA_BY_ID_TOOLTIP'] = IMG_WIO_LITE_AI + Blockly.Tooltip.SEP + 'Devuelve la probabilidad asociada a la clase cuyo ID se indica.';
Blockly.Msg['WIO_GET_CLASS_MAX_ID_TITLE'] = '[Wio lite] ID de la clase detectada';
Blockly.Msg['WIO_GET_CLASS_MAX_ID_TOOLTIP'] = IMG_WIO_LITE_AI + Blockly.Tooltip.SEP + 'Devuelve el ID de la clase detectada (la que tiene la mayor probabilidad).';
Blockly.Msg['WIO_GET_STATUS_TITLE'] = '[Wio lite] obtener %1';
Blockly.Msg['WIO_GET_STATUS'] = 'el estado';
Blockly.Msg['WIO_GET_VERSION'] = 'la versión';
Blockly.Msg['WIO_GET_STATUS_TOOLTIP'] = IMG_WIO_LITE_AI + Blockly.Tooltip.SEP + 'Devuelve la versión o el estado de Wio lite (0: ocupado, 1: listo, 2: resultado disponible).';