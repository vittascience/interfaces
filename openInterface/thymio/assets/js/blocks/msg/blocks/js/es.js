/**
 * @fileoverview English messages for Thymio. (EN)
 */
'use strict';
// Display THYMIO
Blockly.Msg['DISPLAY_TURNOFF_ALL_LEDS_TITLE'] = 'apagar todos los LED';
Blockly.Msg['DISPLAY_TURNOFF_ALL_LEDS_TOOLTIP'] = 'Apaga todos los LED del robot Thymio.';
Blockly.Msg['DISPLAY_RGBLED_TURNOFF_TITLE'] = 'apagar LED %1';
Blockly.Msg['DISPLAY_RGBLED_TURNOFF_TOOLTIP'] = 'Apaga los diferentes LED RGB del robot Thymio.';
Blockly.Msg['DISPLAY_RGBLED_TURNOFF_TOP'] = 'superior';
Blockly.Msg['DISPLAY_RGBLED_TURNOFF_BOTTOM_RIGHT'] = 'inferior derecha';
Blockly.Msg['DISPLAY_RGBLED_TURNOFF_BOTTOM_LEFT'] = 'inferior izquierda';
Blockly.Msg['DISPLAY_RGBLED_TURNOFF_CIRCLE'] = 'círculo frontal';
Blockly.Msg['DISPLAY_RGBLED_TURNOFF_HORIZONTAL_SENSORS'] = 'sensores horizontales';
Blockly.Msg['DISPLAY_RGBLED_TURNOFF_VERTICAL_SENSORS'] = 'sensores del suelo';
Blockly.Msg['DISPLAY_RGBLED_TURNOFF_LED_RC'] = 'control remoto';
Blockly.Msg['DISPLAY_RGBLED_TURNOFF_LED_BUTTONS'] = 'botones';
Blockly.Msg['DISPLAY_RGBLED_TURNOFF_LED_TEMPERATURE'] = 'temperatura';
Blockly.Msg['DISPLAY_RGBLED_TURNOFF_LED_MICROPHONE'] = 'micrófono';
Blockly.Msg['DISPLAY_RGBLED_SETCOLOR_TITLE'] = 'encender LED %1 con R%2 G%3 B%4';
Blockly.Msg['DISPLAY_RGBLED_SETCOLOR_TOOLTIP'] = 'Enciende los diferentes LED RGB del robot Thymio.';
Blockly.Msg['DISPLAY_RGBLED_SETCOLOR_PALETTE_TITLE'] = 'encender LED %1 con %2';
Blockly.Msg['DISPLAY_RGBLED_SETCOLOR_PALETTE_TOOLTIP'] = 'Enciende los diferentes LED RGB del robot Thymio utilizando una paleta de colores.';
Blockly.Msg['DISPLAY_RGBLED_SETCOLOR_TOP'] = 'superior';
Blockly.Msg['DISPLAY_RGBLED_SETCOLOR_BOTTOM_RIGHT'] = 'inferior derecha';
Blockly.Msg['DISPLAY_RGBLED_SETCOLOR_BOTTOM_LEFT'] = 'inferior izquierda';
Blockly.Msg['DISPLAY_CIRCLELED_TURNON_TITLE'] = 'Encender LED del círculo %1 frontal %2 frontal derecha %3 derecha %4 trasera derecha %5 trasera %6 trasera izquierda %7 izquierda %8 frontal izquierda %9';
Blockly.Msg['DISPLAY_CIRCLELED_TURNON_TOOLTIP'] = 'Enciende los diferentes LED del círculo frontal del robot Thymio.';
Blockly.Msg['DISPLAY_PROXIMITYLED_TURNON_TITLE'] = 'Encender LED del sensor de proximidad %1 frontal izquierda %2 frontal izquierda central %3 frontal central izquierda %4 frontal central derecha %5 frontal derecha central %6 frontal derecha %7 trasera izquierda %8 trasera derecha %9';
Blockly.Msg['DISPLAY_PROXIMITYLED_TURNON_TOOLTIP'] = 'Enciende los diferentes LED del círculo frontal del robot Thymio.';
Blockly.Msg['DISPLAY_GROUNDSENSORLED_TURNON_TITLE'] = 'Encender LED del sensor de suelo izquierdo %1 y derecho %2';
Blockly.Msg['DISPLAY_GROUNDSENSORLED_TURNON_TOOLTIP'] = 'Enciende los diferentes LED de los sensores de suelo del robot Thymio.';
Blockly.Msg['DISPLAY_LEDBUTTONS_TURNON_TITLE'] = 'Encender LED de los botones %1 frontal %2 trasera %3 %4 izquierda %5 derecha %6';
Blockly.Msg['DISPLAY_LEDBUTTONS_TURNON_TOOLTIP'] = 'Enciende los diferentes LED de los botones del robot Thymio.';
Blockly.Msg['DISPLAY_TEMPERATURELED_TURNON_TITLE'] = 'Encender LED de temperatura roja %1 azul %2';
Blockly.Msg['DISPLAY_TEMPERATURELED_TURNON_TOOLTIP'] = 'Permite encender los diferentes LED de temperatura del robot Thymio.';
Blockly.Msg['DISPLAY_RC_SOUND_SENSORLED_TURNON_TITLE'] = 'Encender LED %1 en %2';
Blockly.Msg['DISPLAY_RC_SOUND_SENSORLED_TURNON_TOOLTIP'] = 'Permite encender los LED del control remoto y el micrófono del robot Thymio.';
Blockly.Msg['DISPLAY_RC_SENSORLED_TURNON'] = 'del control remoto';
Blockly.Msg['DISPLAY_MIC_SENSORLED_TURNON'] = 'del micrófono';
Blockly.Msg['DISPLAY_TIMER_FLASH_LED_TITLE'] = 'encender y luego apagar los LEDs rgb con el color %1 cada %2 segundo(s)';
Blockly.Msg['DISPLAY_TIMER_FLASH_LED_TOOLTIP'] = 'Permite encender y luego apagar los LEDs del robot Thymio con un color dado y una duración dada.';
// Input Output THYMIO
Blockly.Msg['IO_WAIT_TITLE'] = 'esperar %1 %2';
Blockly.Msg['IO_WAIT_TOOLTIP'] = 'Hace una pausa en la ejecución del código.';
Blockly.Msg['IO_WAIT_SECOND'] = 'segundo(s)';
Blockly.Msg['IO_WAIT_MILLISECOND'] = 'milisegundo(s)';
Blockly.Msg['IO_WAIT_MICROSECOND'] = 'microsegundo(s)';
Blockly.Msg['IO_WAIT_UNTIL_TITLE'] = 'esperar hasta %1';
Blockly.Msg['IO_WAIT_UNTIL_TOOLTIP'] = 'Detiene la ejecución del código hasta que se cumpla la condición.';
Blockly.Msg['IO_SOUND_MIC_THRESHOLD_TITLE'] = 'Set microphone threshold to %1';
Blockly.Msg['IO_SOUND_MIC_THRESHOLD_TOOLTIP'] = 'Allows setting the microphone threshold.';
Blockly.Msg['IO_INITCHRONOMETER_TITLE'] = 'iniciar cronómetro';
Blockly.Msg['IO_INITCHRONOMETER_TOOLTIP'] = 'Inicializa un cronómetro a 0 (en segundos).';
Blockly.Msg['IO_GETCHRONOMETER_TITLE'] = 'valor del cronómetro en %1';
Blockly.Msg['IO_GETCHRONOMETER_TOOLTIP'] = 'Devuelve el valor del cronómetro desde la inicialización (en segundos o milisegundos).';
// THYMIO BUTTONS
Blockly.Msg['IO_BUTTON_STATE_TITLE'] = 'botón %1 presionado';
Blockly.Msg['IO_BUTTON_STATE_TOOLTIP'] = '';
Blockly.Msg['IO_BUTTON_STATE_PRESSED'] = 'está';
Blockly.Msg['IO_BUTTON_STATE_NOT_PRESSED'] = 'no está';
Blockly.Msg['IO_IS_BUTTON_PRESSED_TITLE'] = 'botón %1 presionado';
Blockly.Msg['IO_IS_BUTTON_PRESSED_TOOLTIP'] = 'Devuelve 1 si el botón está presionado, 0 en caso contrario.';
Blockly.Msg['IO_BUTTON_CENTER'] = 'central';
Blockly.Msg['IO_BUTTON_FORWARD'] = 'adelante';
Blockly.Msg['IO_BUTTON_BACKWARD'] = 'atrás';
Blockly.Msg['IO_BUTTON_LEFT'] = 'izquierda';
Blockly.Msg['IO_BUTTON_RIGHT'] = 'derecha';
Blockly.Msg['IO_IS_PRESSED'] = 'está';
Blockly.Msg['IO_IS_RELEASED'] = 'ha sido';
Blockly.Msg['IO_ON_BUTTON_PRESSED_TITLE'] = 'cuando el botón %1 %2 presionado';
Blockly.Msg['IO_ON_BUTTON_PRESSED_TOOLTIP'] = 'Ejecuta el código cuando el botón está presionado.';
// THYMIO EVENTS
Blockly.Msg['IO_ON_BUTTON_PRESSED_EVENT_TITLE'] = 'cuando se presione el botón %1';
Blockly.Msg['IO_ON_BUTTON_PRESSED_EVENT_TOOLTIP'] = 'Crea un evento y ejecuta el código cuando se presione el botón.';
Blockly.Msg['IO_ON_TIMER_EVENT_TITLE'] = 'cuando se active el temporizador %1';
Blockly.Msg['IO_ON_TIMER_EVENT_TOOLTIP'] = 'Crea un evento y ejecuta el código cuando se active el temporizador.';
Blockly.Msg['IO_ON_PROXIMITY_EVENT_TITLE'] = 'cuando el sensor %1 detecte %2';
Blockly.Msg['IO_ON_PROXIMITY_EVENT_TOOLTIP'] = 'Crea un evento y ejecuta el código cuando el sensor de proximidad detecte un objeto o no.';
Blockly.Msg['IO_TIMER_MS_TITLE'] = 'Iniciar temporizador %1 con paso de %2 ms';
Blockly.Msg['IO_TIMER_MS_TOOLTIP'] = 'Inicia el temporizador con un paso de 1 ms.';
Blockly.Msg['IO_TIMER_MS_1'] = 'primero';
Blockly.Msg['IO_TIMER_MS_2'] = 'segundo';
Blockly.Msg['IO_ON_PROXIMITY_LINE_EVENT_TITLE'] = 'cuando el sensor de suelo %1 detecta %2';
Blockly.Msg['IO_ON_PROXIMITY_LINE_EVENT_TOOLTIP'] = 'Crea un evento y ejecuta el código cuando el sensor de suelo detecta una línea o no.';
Blockly.Msg['IO_ON_TAP_EVENT_TITLE'] = 'cuando se detecta un toque';
Blockly.Msg['IO_ON_TAP_EVENT_TOOLTIP'] = 'Crear un evento y ejecutar el código cuando se detecta un toque.';
Blockly.Msg['IO_ON_COM_EVENT_TITLE'] = 'when a message from the %1 is received';
Blockly.Msg['IO_ON_COM_EVENT_TOOLTIP'] = 'Create an event and execute the code when the remote control detects a signal or not.';
Blockly.Msg['IO_ON_COM_RC5'] = 'control remoto';
Blockly.Msg['IO_ON_COM_IR'] = 'infrared communication';
Blockly.Msg['IO_ON_EVENT_BASIC_TITLE'] = 'when %1 is updated';
Blockly.Msg['IO_ON_EVENT_BASIC_TOOLTIP'] = 'Create an event and execute the code when the value is updated.';
Blockly.Msg['IO_ON_EVENT_BASIC_BUTTONS'] = 'the buttons are';
Blockly.Msg['IO_ON_EVENT_BASIC_PROXIMITY'] = 'the proximity sensors are';
Blockly.Msg['IO_ON_EVENT_BASIC_TEMPERATURE'] = 'the temperature is';
Blockly.Msg['IO_ON_EVENT_BASIC_ACC'] = 'the accelerometer is';
Blockly.Msg['IO_ON_EVENT_BASIC_MOTORS'] = 'the motors are';
Blockly.Msg['IO_ON_COM_EVENT_TITLE'] = 'when a message from the %1 is received';
Blockly.Msg['IO_ON_COM_EVENT_TOOLTIP'] = 'Create an event and execute the code when the remote control detects a signal or not.';
Blockly.Msg['IO_ON_COM_RC5'] = 'control remoto';
Blockly.Msg['IO_ON_COM_IR'] = 'infrared communication';
Blockly.Msg['IO_ON_EVENT_BASIC_TITLE'] = 'when %1 is updated';
Blockly.Msg['IO_ON_EVENT_BASIC_TOOLTIP'] = 'Create an event and execute the code when the value is updated.';
Blockly.Msg['IO_ON_EVENT_BASIC_BUTTONS'] = 'the buttons are';
Blockly.Msg['IO_ON_EVENT_BASIC_PROXIMITY'] = 'the proximity sensors are';
Blockly.Msg['IO_ON_EVENT_BASIC_TEMPERATURE'] = 'the temperature is';
Blockly.Msg['IO_ON_EVENT_BASIC_ACC'] = 'the accelerometer is';
Blockly.Msg['IO_ON_EVENT_BASIC_MOTORS'] = 'the motors are';
// SOUNDS
Blockly.Msg['IO_EVENT_MICROPHONE_TITLE'] = 'when sound %1';
Blockly.Msg['IO_EVENT_MICROPHONE_TOOLTIP'] = 'React to a sound event';
Blockly.Msg['IO_EVENT_MICROPHONE_THRESHOLD'] = 'exceeds a threshold';
Blockly.Msg['IO_EVENT_MICROPHONE_SOUND_FINISHED'] = 'has finished playing';
// Communication - Serial connection
Blockly.Msg['COMMUNICATION_SERIAL_WRITE_TITLE'] = 'escribir en la consola %1';
Blockly.Msg['COMMUNICATION_SERIAL_WRITE_TOOLTIP'] = 'Permite escribir datos en la consola.';
Blockly.Msg['COMMUNICATION_SERIAL_WRITE_WITH'] = 'con';
Blockly.Msg['COMMUNICATION_SERIAL_WRITE_NEWLINES'] = 'saltos de línea';
Blockly.Msg['COMMUNICATION_WRITEGRAPH_TITLE'] = 'trazar gráfico';
Blockly.Msg['COMMUNICATION_WRITEGRAPH_TOOLTIP'] = 'Este bloque permite escribir datos (numéricos) que serán visibles en el trazador. Se puede usar con uno o varios bloques en formato "Nombre" y "Datos". Para visualizar los gráficos, haz clic en el icono \'Modo Gráfico\' en la consola.';
Blockly.Msg['COMMUNICATION_DATA'] = 'Dato';
Blockly.Msg['COMMUNICATION_PRINT_DATAS_TITLE'] = 'Nombre %1 Valor %2';
Blockly.Msg['COMMUNICATION_PRINT_DATAS_TOOLTIP'] = 'Este bloque se utiliza con el bloque \'Trazar gráfico\'. Debe contener el nombre del valor a mostrar (texto) y el valor en sí (número).';
// Sensors
Blockly.Msg['SENSORS_READ_OBSTACLE_TITLE'] = 'el sensor de proximidad %1 detecta %2';
Blockly.Msg['SENSORS_READ_OBSTACLE_TOOLTIP'] = 'Permite detectar si hay un obstáculo presente.';
Blockly.Msg['SENSORS_GET_PROXIMITY_DETECT_TRUE'] = 'algo';
Blockly.Msg['SENSORS_GET_PROXIMITY_DETECT_FALSE'] = 'nada';
Blockly.Msg['SENSORS_GET_LINE_TITLE'] = 'el sensor de línea %1 detecta %2';
Blockly.Msg['SENSORS_GET_LINE_TOOLTIP'] = 'Permite detectar si hay una línea presente.';
Blockly.Msg['SENSORS_GET_LINE_LEFT'] = 'izquierda';
Blockly.Msg['SENSORS_GET_LINE_RIGHT'] = 'derecha';
Blockly.Msg['SENSORS_GET_LINE_BLACK'] = 'negro';
Blockly.Msg['SENSORS_GET_LINE_WHITE'] = 'blanco';
Blockly.Msg['SENSORS_GET_LINE_SOMETHING'] = 'algo';
Blockly.Msg['SENSORS_GET_LINE_NOTHING'] = 'nada';
// Sensors - Proximity
Blockly.Msg['SENSORS_GET_PROXIMITY_TITLE'] = 'distancia del sensor de proximidad %1';
Blockly.Msg['SENSORS_GET_PROXIMITY_TOOLTIP'] = 'Permite leer la distancia del sensor de proximidad.';
Blockly.Msg['SENSORS_GET_PROXIMITY_FRONT_LEFT'] = 'frontal izquierdo';
Blockly.Msg['SENSORS_GET_PROXIMITY_FRONT_LEFT_CENTRAL'] = 'frontal izquierdo/central';
Blockly.Msg['SENSORS_GET_PROXIMITY_FRONT_CENTRAL'] = 'frontal central';
Blockly.Msg['SENSORS_GET_PROXIMITY_FRONT_RIGHT_CENTRAL'] = 'frontal derecho/central';
Blockly.Msg['SENSORS_GET_PROXIMITY_FRONT_RIGHT'] = 'frontal derecho';
Blockly.Msg['SENSORS_GET_PROXIMITY_BACK_LEFT'] = 'trasero izquierdo';
Blockly.Msg['SENSORS_GET_PROXIMITY_BACK_RIGHT'] = 'trasero derecho';
Blockly.Msg['SENSORS_GET_PROXIMITY_GROUND_LEFT'] = 'del suelo izquierdo';
Blockly.Msg['SENSORS_GET_PROXIMITY_GROUND_RIGHT'] = 'del suelo derecho';
Blockly.Msg['SENSORS_GET_LINE_BOTH'] = 'izquierda & derecha';
Blockly.Msg['SENSORS_MOTOR_SPEED_TITLE'] = 'velocidad del motor %1';
Blockly.Msg['SENSORS_MOTOR_SPEED_TOOLTIP'] = 'Permite leer la velocidad de uno de los dos motores (izquierdo o derecho).';
Blockly.Msg['SENSORS_MOTOR_LEFT'] = 'izquierdo';
Blockly.Msg['SENSORS_MOTOR_RIGHT'] = 'derecho';
Blockly.Msg['SENSORS_GET_ACCELEROMETER_TITLE'] = 'valor %1 del acelerómetro';
Blockly.Msg['SENSORS_GET_ACCELEROMETER_TOOLTIP'] = 'Permite leer los valores del acelerómetro.';
Blockly.Msg['SENSORS_GET_TEMPERATURE_TITLE'] = 'temperatura';
Blockly.Msg['SENSORS_GET_TEMPERATURE_TOOLTIP'] = 'Permite leer el valor de temperatura.';
Blockly.Msg['SENSORS_GET_MICROPHONE_TITLE'] = 'valor de intensidad del micrófono';
Blockly.Msg['SENSORS_GET_MICROPHONE_TOOLTIP'] = 'Permite leer el valor de intensidad del micrófono.';
Blockly.Msg['SENSORS_GET_IR_COMMUNICATION_TITLE'] = 'valor recibido de la comunicación IR';
Blockly.Msg['SENSORS_GET_IR_COMMUNICATION_TOOLTIP'] = 'Permite leer el valor recibido de la comunicación infrarroja.';
Blockly.Msg['SENSORS_GET_IR_REMOTE_TITLE'] = 'valor %1 recibido del control remoto';
Blockly.Msg['SENSORS_GET_IR_REMOTE_TOOLTIP'] = 'Permite leer el valor recibido del control remoto infrarrojo.';
Blockly.Msg['SENSORS_GET_IR_ADRESS'] = 'dirección';
Blockly.Msg['SENSORS_GET_IR_COMMAND'] = 'comando';
// Actuators
Blockly.Msg['ROBOT_MOVE_TITLE'] = 'comenzar a moverse hacia %1 con velocidad %2';
Blockly.Msg['ROBOT_MOVE_TOOLTIP'] = 'Permite controlar los motores del robot Thymio para avanzar o retroceder.';
Blockly.Msg['ROBOT_MOVE_FORWARD'] = 'adelante';
Blockly.Msg['ROBOT_MOVE_BACKWARD'] = 'atrás';
Blockly.Msg['ROBOT_ROTATE_CLOCK_TITLE'] = 'controlar el robot para girar en sentido %1 con velocidad %2';
Blockly.Msg['ROBOT_ROTATE_CLOCK_TOOLTIP'] = 'Gira el Thymio en sentido horario o antihorario.';
Blockly.Msg['ROBOT_MOVE_CLOCK_WISE'] = 'horario';
Blockly.Msg['ROBOT_MOVE_COUNTER_CLOCK_WISE'] = 'antihorario';
Blockly.Msg['ROBOT_ROTATE_FOREVER_TITLE'] = 'controlar el robot para girar en %1 con velocidad %2';
Blockly.Msg['ROBOT_ROTATE_FOREVER_TOOLTIP'] = 'Gira el Thymio hacia la izquierda o la derecha';
Blockly.Msg['ROBOT_ROTATE_FRONT_RIGHT'] = 'adelante a la derecha';
Blockly.Msg['ROBOT_ROTATE_FRONT_LEFT'] = 'adelante a la izquierda';
Blockly.Msg['ROBOT_ROTATE_BACK_RIGHT'] = 'atrás a la derecha';
Blockly.Msg['ROBOT_ROTATE_BACK_LEFT'] = 'atrás a la izquierda';
Blockly.Msg['ROBOT_STOP_SINGLE_MOTOR_TITLE'] = 'detener motor %1';
Blockly.Msg['ROBOT_STOP_SINGLE_MOTOR_TOOLTIP'] = 'Detiene uno de los dos motores del Thymio.';
Blockly.Msg['ROBOT_STOP_SINGLE_MOTOR_LEFT'] = 'izquierdo';
Blockly.Msg['ROBOT_STOP_SINGLE_MOTOR_RIGHT'] = 'derecho';
Blockly.Msg['ROBOT_STOP_TITLE'] = 'detener los motores';
Blockly.Msg['ROBOT_STOP_TOOLTIP'] = 'Detiene los motores del Thymio.';
Blockly.Msg['ROBOT_CHANGE_SINGLE_MOTOR_SPEED_TITLE'] = 'Controlar motor %1 dirección %2 velocidad %3';
Blockly.Msg['ROBOT_CHANGE_SINGLE_MOTOR_SPEED_TOOLTIP'] = 'Cambiar la velocidad de uno de los dos motores del Thymio.';
Blockly.Msg['ROBOT_CHANGE_SINGLE_MOTOR_SPEED_LEFT'] = 'izquierdo';
Blockly.Msg['ROBOT_CHANGE_SINGLE_MOTOR_SPEED_RIGHT'] = 'derecho';
// Actuators - Sound
Blockly.Msg['SOUND_STOP_SOUND_SYSTEM_TITLE'] = 'stop playing the sound';
Blockly.Msg['SOUND_STOP_SOUND_SYSTEM_TOOLTIP'] = 'Stops playing the sound.';
Blockly.Msg['SOUND_PLAY_SOUND_TITLE'] = 'play sound %1';
Blockly.Msg['SOUND_PLAY_SOUND_TOOLTIP'] = 'Plays a system sound.';
Blockly.Msg['SOUND_PLAY_SOUND_SOUND_1'] = 'power-up';
Blockly.Msg['SOUND_PLAY_SOUND_SOUND_2'] = 'power-down';
Blockly.Msg['SOUND_PLAY_SOUND_SOUND_3'] = 'arrow buttons';
Blockly.Msg['SOUND_PLAY_SOUND_SOUND_4'] = 'center button';
Blockly.Msg['SOUND_PLAY_SOUND_SOUND_5'] = 'scared';
Blockly.Msg['SOUND_PLAY_SOUND_SOUND_6'] = 'collision';
Blockly.Msg['SOUND_PLAY_SOUND_SOUND_7'] = 'friendly target';
Blockly.Msg['SOUND_PLAY_SOUND_SOUND_8'] = 'target detected';
Blockly.Msg['SOUND_PLAY_SOUND_FREQ_TITLE'] = 'play a note %1 Hz for %2 /60 seconds';
Blockly.Msg['SOUND_PLAY_SOUND_FREQ_TOOLTIP'] = 'Plays a note at a given frequency for a given duration.';